"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[32235],{15868:(e,n,o)=>{o.d(n,{A:()=>l});var i=o(65162),r=o(62540);function l(e){let{header:n,inline:o,updated:l,version:s}=e;return(0,r.jsx)(i.A,{text:`v${s}`,variant:l?"success":"info",className:n?"absolute right-0 top-1.5":o?"inline-block ml-1":"ml-2"})}},20671:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>t,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"commands/overview","title":"Overview","description":"The following options are available for all moon commands.","source":"@site/docs/commands/overview.mdx","sourceDirName":"commands","slug":"/commands/overview","permalink":"/docs/commands/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/moonrepo/moon/tree/master/website/docs/commands/overview.mdx","tags":[],"version":"current","frontMatter":{"title":"Overview"},"sidebar":"docs","previous":{"title":"Commands","permalink":"/docs/commands"},"next":{"title":"action-graph","permalink":"/docs/commands/action-graph"}}');var r=o(62540),l=o(43023),s=o(15868);const t={title:"Overview"},c=void 0,d={},a=[{value:"Caching",id:"caching",level:2},{value:"Colors",id:"colors",level:2},{value:"Themes<VersionLabel></VersionLabel>",id:"themes",level:3},{value:"Piped output",id:"piped-output",level:3},{value:"Concurrency",id:"concurrency",level:2},{value:"Debugging",id:"debugging",level:2},{value:"Logging",id:"logging",level:2},{value:"Writing logs to a file",id:"writing-logs-to-a-file",level:3},{value:"Profiling<VersionLabel></VersionLabel>",id:"profiling",level:2}];function h(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["The following options are available for ",(0,r.jsx)(n.em,{children:"all"})," moon commands."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"--cache <mode>"})," - The mode for ",(0,r.jsx)(n.a,{href:"#caching",children:"cache operations"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"--color"})," - Force ",(0,r.jsx)(n.a,{href:"#colors",children:"colored output"})," for moon (not tasks)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"--concurrency"}),", ",(0,r.jsx)(n.code,{children:"-c"})," - Maximum number of threads to utilize."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"--dump"})," - Dump a ",(0,r.jsx)(n.a,{href:"#profiling",children:"trace profile"})," to the working directory."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"--help"})," - Display the help menu for the current command."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"--log <level>"})," - The lowest ",(0,r.jsx)(n.a,{href:"#logging",children:"log level to output"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"--logFile <file>"})," - Write logs to the defined file."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"--quiet"}),", ",(0,r.jsx)(n.code,{children:"-q"})," - Hide all non-important moon specific terminal output."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"--theme"})," - Terminal theme to write output in. ",(0,r.jsx)(s.A,{version:"1.35.0"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"--version"})," - Display the version of the CLI."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"caching",children:"Caching"}),"\n",(0,r.jsxs)(n.p,{children:["We provide a powerful ",(0,r.jsx)(n.a,{href:"../concepts/cache",children:"caching layer"}),", but sometimes you need to debug failing or\nbroken tasks, and this cache may get in the way. To circumvent this, we support the ",(0,r.jsx)(n.code,{children:"--cache"})," global\noption, or the ",(0,r.jsx)(n.code,{children:"MOON_CACHE"})," environment variable, both of which accept one of the following values."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"off"})," - Turn off caching entirely. Every task will run fresh, including dependency installs."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"read"})," - Read existing items from the cache, but do not write to them."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"read-write"})," (default) - Read and write items to the cache."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"write"})," - Do not read existing cache items, but write new items to the cache."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"$ moon run app:build --cache off\n# Or\n$ MOON_CACHE=off moon run app:build\n"})}),"\n",(0,r.jsx)(n.h2,{id:"colors",children:"Colors"}),"\n",(0,r.jsx)(n.p,{children:"Colored output is a complicated subject, with differing implementations and standards across tooling\nand operating systems. moon aims to normalize this as much as possible, by doing the following:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["By default, moon colors are inherited from your terminal settings (",(0,r.jsx)(n.code,{children:"TERM"})," and ",(0,r.jsx)(n.code,{children:"COLORTERM"}),"\nenvironment variables)."]}),"\n",(0,r.jsxs)(n.li,{children:["Colors can be force enabled by passing the ",(0,r.jsx)(n.code,{children:"--color"})," option (preferred), or ",(0,r.jsx)(n.code,{children:"MOON_COLOR"})," or\n",(0,r.jsx)(n.code,{children:"FORCE_COLOR"})," environment variables."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"$ moon app:build --color run\n# Or\n$ MOON_COLOR=2 moon run app:build\n"})}),"\n",(0,r.jsxs)(n.p,{children:["When forcing colors with ",(0,r.jsx)(n.code,{children:"MOON_COLOR"})," or ",(0,r.jsx)(n.code,{children:"FORCE_COLOR"}),", you may set it to one of the following\nnumerical values for the desired level of color support. This is automatically inferred if you use\n",(0,r.jsx)(n.code,{children:"--color"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"0"})," - No colors"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"1"})," - 16 colors (standard terminal colors)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"2"})," - 256 colors"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"3"})," - 16 million colors (truecolor)"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"themes",children:["Themes",(0,r.jsx)(s.A,{version:"1.35.0"})]}),"\n",(0,r.jsxs)(n.p,{children:["By default, moon assumes a dark themed terminal is being used, and will output colors accordingly.\nHowever, if you use a light theme, these colors are hard to read. To mitigate this, we support\nchanging the theme with the ",(0,r.jsx)(n.code,{children:"--theme"})," global option, or the ",(0,r.jsx)(n.code,{children:"MOON_THEME"})," environment variable."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"$ moon run app:build --theme light\n# Or\n$ MOON_THEME=light moon run app:build\n"})}),"\n",(0,r.jsx)(n.h3,{id:"piped-output",children:"Piped output"}),"\n",(0,r.jsxs)(n.p,{children:["When tasks (child processes) are piped, colors and ANSI escape sequences are lost, since the target\nis not a TTY and we do not implement a PTY. This is a common pattern this is quite annoying.\nHowever, many tools and CLIs support a ",(0,r.jsx)(n.code,{children:"--color"})," option to work around this limitation and to always\nforce colors, even when not a TTY."]}),"\n",(0,r.jsxs)(n.p,{children:["To mitigate this problem as a whole, and to avoid requiring ",(0,r.jsx)(n.code,{children:"--color"})," for every task, moon supports\nthe ",(0,r.jsx)(n.a,{href:"../config/workspace#inheritcolorsforpipedtasks",children:(0,r.jsx)(n.code,{children:"pipeline.inheritColorsForPipedTasks"})}),"\nconfiguration setting. When enabled, all piped child processes will inherit the color settings of\nthe currently running terminal."]}),"\n",(0,r.jsx)(n.h2,{id:"concurrency",children:"Concurrency"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"--concurrency"})," option or ",(0,r.jsx)(n.code,{children:"MOON_CONCURRENCY"})," environment variable can be used to control the\nmaximum amount of threads to utilize in our thread pool. If not defined, defaults to the number of\noperating system cores."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"$ moon run app:build --concurrency 1\n# Or\n$ MOON_CONCURRENCY=1 moon run app:build\n"})}),"\n",(0,r.jsx)(n.h2,{id:"debugging",children:"Debugging"}),"\n",(0,r.jsxs)(n.p,{children:["At minimum, most debugging can be done by passing ",(0,r.jsx)(n.a,{href:"#logging",children:(0,r.jsx)(n.code,{children:"--log trace"})})," on the command line and\nsifting through the logs. We also provide the following environment variables to toggle output."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"MOON_DEBUG_PROCESS_ENV"})," - By default moon hides the environment variables (except for ",(0,r.jsx)(n.code,{children:"MOON_"}),")\npassed to processes to avoid leaking sensitive information. However, knowing what environment\nvariables are passed around is helpful in debugging. Declare this variable to reveal the entire\nenvironment."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"MOON_DEBUG_PROCESS_INPUT"})," - By default moon truncates the stdin passed to processes to avoid\nthrashing the console with a large input string. However, knowing what input is passed around is\nhelpful in debugging. Declare this variable to reveal the entire input."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"MOON_DEBUG_PROTO_INSTALL"})," - Debug the proto installation process."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"MOON_DEBUG_REMOTE"})," - Debug our remote caching implementation by including additional logging\noutput, and printing internal connection errors."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"MOON_DEBUG_WASM"})," - Debug our WASM plugins by including additional logging output, and optionally\ndumping memory/core profiles."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"logging",children:"Logging"}),"\n",(0,r.jsxs)(n.p,{children:["By default, moon aims to output as little as possible, as we want to preserve the original output of\nthe command's being ran, excluding warnings and errors. This is managed through log levels, which\ncan be defined with the ",(0,r.jsx)(n.code,{children:"--log"})," global option, or the ",(0,r.jsx)(n.code,{children:"MOON_LOG"})," environment variable. The following\nlevels are supported, in priority order."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"off"})," - Turn off logging entirely."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"error"})," - Only show error logs."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"warn"})," - Only show warning logs and above."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"info"})," (default) - Only show info logs and above."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"debug"})," - Only show debug logs and above."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"trace"})," - Show all logs, including network requests and child processes."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"verbose"})," - Like ",(0,r.jsx)(n.code,{children:"trace"})," but also includes span information. ",(0,r.jsx)(s.A,{version:"1.35.0"})]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"$ moon run app:build --log trace\n# Or\n$ MOON_LOG=trace moon run app:build\n"})}),"\n",(0,r.jsx)(n.h3,{id:"writing-logs-to-a-file",children:"Writing logs to a file"}),"\n",(0,r.jsxs)(n.p,{children:["moon can dump the logs from a command to a file using the ",(0,r.jsx)(n.code,{children:"--logFile"})," option, or the ",(0,r.jsx)(n.code,{children:"MOON_LOG_FILE"}),"\nenvironment variable. The dumped logs will respect the ",(0,r.jsx)(n.code,{children:"--log"})," option and filter the logs piped to\nthe output file."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"$ moon run app:build --logFile=output.log\n# Or\n$ MOON_LOG_FILE=output.log moon run app:build\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"profiling",children:["Profiling",(0,r.jsx)(s.A,{version:"1.26.0"})]}),"\n",(0,r.jsxs)(n.p,{children:["When the ",(0,r.jsx)(n.code,{children:"--dump"})," option or ",(0,r.jsx)(n.code,{children:"MOON_DUMP"})," environment variable is set, moon will generate a trace\nprofile and dump it to the current working directory. This profile can be opened with Chrome (via\n",(0,r.jsx)(n.code,{children:"chrome://tracing"}),") or ",(0,r.jsx)(n.a,{href:"https://ui.perfetto.dev/",children:"Perfetto"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"This profile will display many of the operations within moon as a flame chart, allowing you to\ninspect and debug slow operations."})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},43023:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>t});var i=o(63696);const r={},l=i.createContext(r);function s(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(l.Provider,{value:n},e.children)}},65162:(e,n,o)=>{o.d(n,{A:()=>t});var i=o(11750),r=o(74599),l=o(62540);const s={failure:"bg-red-100 text-red-900",info:"bg-pink-100 text-pink-900",success:"bg-green-100 text-green-900",warning:"bg-orange-100 text-orange-900"};function t(e){let{className:n,icon:o,text:t,variant:c}=e;return(0,l.jsxs)("span",{className:(0,i.A)("inline-flex items-center px-1 py-0.5 rounded text-xs font-bold uppercase",c?s[c]:"bg-gray-100 text-gray-800",n),children:[o&&(0,l.jsx)(r.A,{icon:o,className:"mr-1"}),t]})}}}]);