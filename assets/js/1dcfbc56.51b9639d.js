"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[24363],{26990:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>h});var i=t(49181),o=t(62540),a=t(43023);const r={slug:"moon-v1.35",title:"moon v1.35 - Action graph improvements, task priorities, and more!",authors:["milesj"],tags:["action","graph","task","priority","experiment","terminal","theme"],image:"./img/moon/v1.35.png"},s=void 0,l={image:t(68205).A,authorsImageUrls:[void 0]},h=[{value:"Improved action graph",id:"improved-action-graph",level:2},{value:"Task priorities",id:"task-priorities",level:2},{value:"Enabled experiments",id:"enabled-experiments",level:2},{value:"Light terminal theme",id:"light-terminal-theme",level:2},{value:"Other changes",id:"other-changes",level:2},{value:"What&#39;s next?",id:"whats-next",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"With this release, we're taking yet another step to supporting plugins."}),"\n",(0,o.jsx)(n.h2,{id:"improved-action-graph",children:"Improved action graph"}),"\n",(0,o.jsx)(n.p,{children:"For this release we wanted to introduce a new WASM based Rust toolchain, but we encountered a few\nblockers while integrating with the action graph, so instead of working on the toolchain, we decided\nto rewrite the action graph to properly support plugins."}),"\n",(0,o.jsxs)(n.p,{children:["The biggest blocker was around locating the toolchain's dependency root, and in Rust's case, the\nCargo workspace (where ",(0,o.jsx)(n.code,{children:"Cargo.lock"})," is located). We technically have some of this logic in the\ncurrent Rust platform, but it always assumed that the Cargo workspace was in the root of the moon\nworkspace (the same applies to Bun and Node). This heavily restricted all moon users. With the new\nplugin system, the dependency root can be located anywhere in the moon workspace, and we'll attempt\nto locate it!"]}),"\n",(0,o.jsx)(n.p,{children:"While rewriting the action graph, we made a ton of improvements (some won't be noticeable until\nplugins are more prevalent). To start the graph is now async compatible, and in the future, we'll\nupdate it to also support concurrency, so that the graph can be built in parallel across threads.\nAdditionally, a main focus was reducing the amount of edges (relationships) being created between\nnodes (actions). And lastly, the following changes were made for the actions themselves."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Added a new ",(0,o.jsx)(n.code,{children:"InstallDependencies"})," action for WASM plugins.","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"The dependencies root is now dynamically located by traversing the file system, unlike the\nprevious implementation that assumed everything was in the workspace root."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["Added a new ",(0,o.jsx)(n.code,{children:"SetupEnvironment"})," action for WASM plugins.","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["This runs after ",(0,o.jsx)(n.code,{children:"SetupToolchain"})," but before ",(0,o.jsx)(n.code,{children:"InstallDependencies"}),"."]}),"\n",(0,o.jsx)(n.li,{children:"Can be used to setup the workspace or project environment. For example, initializing Python\nvenv, or making manifest/lockfile changes."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["Updated ",(0,o.jsx)(n.code,{children:"RunTask"})," to setup toolchains and install dependencies for each ",(0,o.jsx)(n.code,{children:"toolchain"})," that has been\nconfigured, instead of just the 1st one (work in progress)."]}),"\n",(0,o.jsxs)(n.li,{children:["Updated ",(0,o.jsx)(n.code,{children:"SyncProject"})," to no longer depend on ",(0,o.jsx)(n.code,{children:"SetupToolchain"}),", and not be grouped by\nlanguage/toolchain, and instead encompass all of them applicable to the project."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"task-priorities",children:"Task priorities"}),"\n",(0,o.jsxs)(n.p,{children:["Based on a request from the community that we really liked, we're introducing a new concept called\ntask priorities. Each task can configure a priority level using the new task option\n",(0,o.jsx)(n.a,{href:"/docs/config/project#priority",children:(0,o.jsx)(n.code,{children:"priority"})}),", and the priority level determines the position of the\ntask within the action pipeline queue. A task with a higher priority will run sooner rather than\nlater, while still respecting the topological order."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="app/moon.yml" {5}',children:"tasks:\n  build:\n    # ...\n    options:\n      priority: 'high'\n"})}),"\n",(0,o.jsx)(n.p,{children:"There are a few things to be aware of with this implementation:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"All non-task related actions (like setup toolchain) will still always run first."}),"\n",(0,o.jsx)(n.li,{children:"Higher priority tasks that depend on lower priority tasks will effectively mark them as high\npriority, as we attempt to complete them sooner."}),"\n",(0,o.jsx)(n.li,{children:"The order within each priority level is sorted topological, but is still non-deterministic if\ntasks run in parallel."}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"enabled-experiments",children:"Enabled experiments"}),"\n",(0,o.jsxs)(n.p,{children:["In our last release, we introduced ",(0,o.jsx)(n.a,{href:"./moon-v1.34#new-experiments",children:"2 new experiments"}),",\n",(0,o.jsx)(n.code,{children:"fasterGlobWalk"})," and ",(0,o.jsx)(n.code,{children:"gitV2"}),". In the past few weeks, we've had many users (including ourself) enable\nthese experiments without issue. As such, we've decided to enable them by default in this release."]}),"\n",(0,o.jsxs)(n.p,{children:["If you encounter an issue with either of these experiments, you can disable them in\n",(0,o.jsx)(n.code,{children:".moon/workspace.yml"}),". And of course, please report it so we can fix it!"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title=".moon/workspace.yml"',children:"experiments:\n  fasterGlobWalk: false\n  gitV2: false\n"})}),"\n",(0,o.jsx)(n.h2,{id:"light-terminal-theme",children:"Light terminal theme"}),"\n",(0,o.jsx)(n.p,{children:"By default, moon assumes a dark themed terminal is being used, and will output our branded colors\naccordingly. However, if you use a light theme, these colors are hard to read, and there's no way to\nchange them."}),"\n",(0,o.jsxs)(n.p,{children:["To mitigate this, we're introducing a light based terminal theme, which can be enabled with the\n",(0,o.jsx)(n.code,{children:"--theme"})," global option, or the ",(0,o.jsx)(n.code,{children:"MOON_THEME"})," environment variable."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-shell",children:"$ moon run app:build --theme light\n# Or\n$ MOON_THEME=light moon run app:build\n"})}),"\n",(0,o.jsx)(n.h2,{id:"other-changes",children:"Other changes"}),"\n",(0,o.jsxs)(n.p,{children:["View the ",(0,o.jsx)(n.a,{href:"https://github.com/moonrepo/moon/releases/tag/v1.35.0",children:"official release"})," for a full list\nof changes."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Added a new task option, ",(0,o.jsx)(n.code,{children:"cacheKey"}),", which can be used to seed the hash, and invalidate local and\nremote caches."]}),"\n",(0,o.jsxs)(n.li,{children:["Added a ",(0,o.jsx)(n.code,{children:"--log=verbose"})," level, which includes span information on top of the trace level."]}),"\n",(0,o.jsxs)(n.li,{children:["Added 2 new webhooks, ",(0,o.jsx)(n.code,{children:"toolchain.installing"})," and ",(0,o.jsx)(n.code,{children:"toolchain.installed"}),", which emit when a\ntoolchain WASM plugin is installing a tool (via proto)."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"whats-next",children:"What's next?"}),"\n",(0,o.jsx)(n.p,{children:"Now that are action graph supports plugins, we can take the next step in migrating an existing\nplatform into a toolchain."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Migrate the Rust toolchain to a WASM plugin."}),"\n",(0,o.jsx)(n.li,{children:"Investigate a new args/command line parser."}),"\n",(0,o.jsx)(n.li,{children:"Add Poetry support for the Python toolchain."}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},43023:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var i=t(63696);const o={},a=i.createContext(o);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(a.Provider,{value:n},e.children)}},49181:e=>{e.exports=JSON.parse('{"permalink":"/blog/moon-v1.35","editUrl":"https://github.com/moonrepo/moon/tree/master/website/blog/2025-04-16_moon-v1.35.mdx","source":"@site/blog/2025-04-16_moon-v1.35.mdx","title":"moon v1.35 - Action graph improvements, task priorities, and more!","description":"With this release, we\'re taking yet another step to supporting plugins.","date":"2025-04-16T00:00:00.000Z","tags":[{"inline":true,"label":"action","permalink":"/blog/tags/action"},{"inline":true,"label":"graph","permalink":"/blog/tags/graph"},{"inline":true,"label":"task","permalink":"/blog/tags/task"},{"inline":true,"label":"priority","permalink":"/blog/tags/priority"},{"inline":true,"label":"experiment","permalink":"/blog/tags/experiment"},{"inline":true,"label":"terminal","permalink":"/blog/tags/terminal"},{"inline":true,"label":"theme","permalink":"/blog/tags/theme"}],"readingTime":3.81,"hasTruncateMarker":true,"authors":[{"name":"Miles Johnson","title":"Founder, developer","url":"https://github.com/milesj","imageURL":"/img/authors/miles.jpg","key":"milesj","page":null}],"frontMatter":{"slug":"moon-v1.35","title":"moon v1.35 - Action graph improvements, task priorities, and more!","authors":["milesj"],"tags":["action","graph","task","priority","experiment","terminal","theme"],"image":"./img/moon/v1.35.png"},"unlisted":false,"prevItem":{"title":"moon v1.36 - Toolchain plugins beta, optimized remote caching, and codegen improvements","permalink":"/blog/moon-v1.36"},"nextItem":{"title":"moon v1.34 - Action customization, faster globs, better Git, and more!","permalink":"/blog/moon-v1.34"}}')},68205:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/v1.35-0d1aeede2cacdf9d489646613726f120.png"}}]);