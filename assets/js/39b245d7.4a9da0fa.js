"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[91857],{10371:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>a,contentTitle:()=>c,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"guides/vcs-hooks","title":"VCS hooks","description":"VCS hooks (most popular with Git) are a","source":"@site/docs/guides/vcs-hooks.mdx","sourceDirName":"guides","slug":"/guides/vcs-hooks","permalink":"/docs/guides/vcs-hooks","draft":false,"unlisted":false,"editUrl":"https://github.com/moonrepo/moon/tree/master/website/docs/guides/vcs-hooks.mdx","tags":[{"inline":true,"label":"vcs","permalink":"/docs/tags/vcs"},{"inline":true,"label":"hooks","permalink":"/docs/tags/hooks"},{"inline":true,"label":"git","permalink":"/docs/tags/git"},{"inline":true,"label":"git-hooks","permalink":"/docs/tags/git-hooks"}],"version":"current","frontMatter":{"title":"VCS hooks","tags":["vcs","hooks","git","git-hooks"]},"sidebar":"guides","previous":{"title":"Webhooks (experimental)","permalink":"/docs/guides/webhooks"},"next":{"title":"Bun handbook","permalink":"/docs/guides/javascript/bun-handbook"}}');var i=n(62540),t=n(43023),r=n(15868);const l={title:"VCS hooks",tags:["vcs","hooks","git","git-hooks"]},c=void 0,a={},h=[{value:"Defining hooks",id:"defining-hooks",level:2},{value:"Enabling hooks",id:"enabling-hooks",level:2},{value:"Automatically for everyone",id:"automatically-for-everyone",level:3},{value:"Manually by each developer",id:"manually-by-each-developer",level:3},{value:"Disabling hooks",id:"disabling-hooks",level:2},{value:"How it works",id:"how-it-works",level:2},{value:"Git",id:"git",level:3},{value:"Examples",id:"examples",level:2},{value:"Pre-commit",id:"pre-commit",level:3}];function d(e){const o={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.A,{version:"1.9.0",header:!0}),"\n",(0,i.jsxs)(o.p,{children:["VCS hooks (most popular with ",(0,i.jsx)(o.a,{href:"https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks",children:"Git"}),") are a\nmechanism for running scripts at pre-defined phases in the VCS's lifecycle, most commonly\npre-commit, pre-push, or pre-merge. With moon, we provide a built-in solution for managing hooks,\nand syncing them across developers and machines."]}),"\n",(0,i.jsxs)(o.ul,{children:["\n",(0,i.jsx)(o.li,{children:(0,i.jsx)(o.a,{href:"https://git-scm.com/docs/githooks",children:"Learn more about Git hooks"})}),"\n"]}),"\n",(0,i.jsx)(o.h2,{id:"defining-hooks",children:"Defining hooks"}),"\n",(0,i.jsxs)(o.p,{children:["Hooks can be configured with the ",(0,i.jsx)(o.a,{href:"../config/workspace#hooks",children:(0,i.jsx)(o.code,{children:"vcs.hooks"})})," setting in\n",(0,i.jsx)(o.a,{href:"../config/workspace",children:(0,i.jsx)(o.code,{children:".moon/workspace.yml"})}),". This setting requires a map of hook names (in the\nformat required by your VCS), to a list of arbitrary commands to run within the hook script.\nCommands are used as-is and are not formatted or interpolated in any way."]}),"\n",(0,i.jsxs)(o.p,{children:["To demonstrate this, let's configure a ",(0,i.jsx)(o.code,{children:"pre-commit"})," hook that runs a moon ",(0,i.jsx)(o.code,{children:"lint"})," task for affected\nprojects, and also verifies that the commit message abides by a specified format (using\n",(0,i.jsx)(o.a,{href:"https://pre-commit.com/",children:"pre-commit"}),")."]}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-yaml",metastring:'title=".moon/workspace.yml"',children:"vcs:\n  hooks:\n    pre-commit:\n      - 'pre-commit run'\n      - 'moon run :lint --affected'\n"})}),"\n",(0,i.jsx)(o.admonition,{type:"info",children:(0,i.jsxs)(o.p,{children:["All commands are executed from the repository root (not moon's workspace root) and must exist on\n",(0,i.jsx)(o.code,{children:"PATH"}),". If ",(0,i.jsx)(o.code,{children:"moon"})," is installed locally, you can execute it using a repository relative path, like\n",(0,i.jsx)(o.code,{children:"./node_modules/@moonrepo/cli/moon"}),"."]})}),"\n",(0,i.jsx)(o.h2,{id:"enabling-hooks",children:"Enabling hooks"}),"\n",(0,i.jsx)(o.p,{children:"Hooks are a divisive subject, as some developers love them, and others hate them. Finding a viable\nsolution for everyone can be difficult, so with moon, we opted to support 2 distinct options, but\nonly 1 can be used at a time. Choose the option that works best for your project, team, or company!"}),"\n",(0,i.jsx)(o.admonition,{type:"caution",children:(0,i.jsxs)(o.p,{children:["If you have existing VCS hooks, back them up as moon's implementation will overwrite them! To\nmigrate your existing hooks, ",(0,i.jsx)(o.a,{href:"#defining-hooks",children:"configure them as commands to run"}),"."]})}),"\n",(0,i.jsx)(o.h3,{id:"automatically-for-everyone",children:"Automatically for everyone"}),"\n",(0,i.jsxs)(o.p,{children:["If you'd like hooks to be enforced for every contributor of the repository, then simply enable the\n",(0,i.jsx)(o.a,{href:"../config/workspace#synchooks",children:(0,i.jsx)(o.code,{children:"vcs.syncHooks"})})," setting in\n",(0,i.jsx)(o.a,{href:"../config/workspace",children:(0,i.jsx)(o.code,{children:".moon/workspace.yml"})}),". This will automatically generate hook scripts and link\nthem with the local VCS checkout, everytime a ",(0,i.jsx)(o.a,{href:"../concepts/target",children:"target"})," is ran."]}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-yaml",metastring:'title=".moon/workspace.yml"',children:"vcs:\n  hooks: [...]\n  syncHooks: true\n"})}),"\n",(0,i.jsx)(o.h3,{id:"manually-by-each-developer",children:"Manually by each developer"}),"\n",(0,i.jsxs)(o.p,{children:["If you'd prefer contributors to have a choice in whether or not they want to use hooks, then simply\ndo nothing, and guide them to run the ",(0,i.jsx)(o.a,{href:"../commands/sync/hooks",children:(0,i.jsx)(o.code,{children:"moon sync hooks"})})," command. This\ncommand will generate hook scripts and link them with the local VCS checkout."]}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-shell",children:"$ moon sync hooks\n"})}),"\n",(0,i.jsx)(o.h2,{id:"disabling-hooks",children:"Disabling hooks"}),"\n",(0,i.jsxs)(o.p,{children:["If you choose to stop using hooks, you'll need to cleanup the previously generated hook scripts, and\nreset the VCS checkout. To start, disable the ",(0,i.jsx)(o.code,{children:"vcs.syncHooks"})," setting."]}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-yaml",metastring:'title=".moon/workspace.yml"',children:"vcs:\n  syncHooks: false\n"})}),"\n",(0,i.jsx)(o.p,{children:"And then run the following command, which will delete files from your local filesystem. Every\ndeveloper that is using hooks will need to run this command."}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-shell",children:"$ moon sync hooks --clean\n"})}),"\n",(0,i.jsx)(o.h2,{id:"how-it-works",children:"How it works"}),"\n",(0,i.jsxs)(o.p,{children:["When hooks are ",(0,i.jsx)(o.a,{href:"#enabling-hooks",children:"enabled"}),", the following processes will take place."]}),"\n",(0,i.jsxs)(o.ol,{children:["\n",(0,i.jsxs)(o.li,{children:["\n",(0,i.jsxs)(o.p,{children:["The configured ",(0,i.jsx)(o.a,{href:"#defining-hooks",children:"hooks"})," will be generated as individual script files in the\n",(0,i.jsx)(o.code,{children:".moon/hooks"})," directory. Whether or not you commit or ignore these script files is your choice.\nThey are written to the ",(0,i.jsx)(o.code,{children:".moon"})," directory so that they can be reviewed, audited, and easily\ntested, but ",(0,i.jsx)(o.em,{children:"are required"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(o.li,{children:["\n",(0,i.jsxs)(o.p,{children:["We then sync these generated hook scripts with the current VCS. For Git, we create ",(0,i.jsx)(o.code,{children:".git/hooks"}),"\nfiles that execute our generated scripts, using repository relative commands. Any existing VCS\nhooks ",(0,i.jsx)(o.em,{children:"will be overwritten"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(o.admonition,{type:"info",children:(0,i.jsxs)(o.p,{children:["The ",(0,i.jsx)(o.code,{children:".moon/hooks"})," scripts are generated as Bash scripts (use a ",(0,i.jsx)(o.code,{children:".sh"})," file extension) on Unix, and\nPowerShell scripts (use a ",(0,i.jsx)(o.code,{children:".ps1"})," file extension) on Windows."]})}),"\n",(0,i.jsx)(o.h3,{id:"git",children:"Git"}),"\n",(0,i.jsxs)(o.p,{children:["On Unix based operating systems (Linux, macOS, etc), the ",(0,i.jsx)(o.code,{children:".moon/hooks"})," scripts are executed from\n",(0,i.jsx)(o.code,{children:".git/hooks"})," Bash files. Because of this, ",(0,i.jsx)(o.code,{children:"bash"})," should be available on the system (which is\ntypically the case)."]}),"\n",(0,i.jsxs)(o.p,{children:["On Windows, things get tricky. Since Git has a requirement that ",(0,i.jsx)(o.code,{children:".git/hooks"})," files ",(0,i.jsx)(o.em,{children:"must be"}),"\nextensionless, and older versions of PowerShell require an extension, we have to use a workaround.\nTo handle this, the ",(0,i.jsx)(o.code,{children:".git/hooks"})," files are Bash-like scripts (that should work on most machines)\nthat execute ",(0,i.jsx)(o.code,{children:".moon/hooks"})," using the ",(0,i.jsx)(o.code,{children:"powershell.exe"})," (or ",(0,i.jsx)(o.code,{children:"pwsh.exe"}),") executables. Because of this,\nPowerShell must be available on the system."]}),"\n",(0,i.jsx)(o.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(o.h3,{id:"pre-commit",children:"Pre-commit"}),"\n",(0,i.jsxs)(o.p,{children:["A perfect use case for the ",(0,i.jsx)(o.code,{children:"pre-commit"})," hook is to check linting and formatting of the files being\ncommitted. If either of these tasks fail, the commit will abort until they are fixed. Be sure to use\nthe ",(0,i.jsx)(o.a,{href:"../run-task#running-based-on-affected-files-only",children:(0,i.jsx)(o.code,{children:"--affected"})})," option so that we ",(0,i.jsx)(o.em,{children:"only run"})," on\nchanged projects!"]}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-yaml",metastring:'title=".moon/workspace.yml"',children:"vcs:\n  hooks:\n    pre-commit:\n      - 'moon run :lint :format --affected --status=staged'\n"})}),"\n",(0,i.jsxs)(o.blockquote,{children:["\n",(0,i.jsxs)(o.p,{children:["By default this will run on the ",(0,i.jsx)(o.em,{children:"entire"})," project (all files). If you want to filter it to only the\nchanged files, enable the ",(0,i.jsx)(o.a,{href:"../config/project#affectedfiles",children:(0,i.jsx)(o.code,{children:"affectedFiles"})})," task option."]}),"\n"]})]})}function m(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,i.jsx)(o,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},15868:(e,o,n)=>{n.d(o,{A:()=>t});var s=n(65162),i=n(62540);function t(e){let{header:o,inline:n,updated:t,version:r}=e;return(0,i.jsx)(s.A,{text:`v${r}`,variant:t?"success":"info",className:o?"absolute right-0 top-1.5":n?"inline-block ml-1":"ml-2"})}},43023:(e,o,n)=>{n.d(o,{R:()=>r,x:()=>l});var s=n(63696);const i={},t=s.createContext(i);function r(e){const o=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function l(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(t.Provider,{value:o},e.children)}},65162:(e,o,n)=>{n.d(o,{A:()=>l});var s=n(11750),i=n(74599),t=n(62540);const r={failure:"bg-red-100 text-red-900",info:"bg-pink-100 text-pink-900",success:"bg-green-100 text-green-900",warning:"bg-orange-100 text-orange-900"};function l(e){let{className:o,icon:n,text:l,variant:c}=e;return(0,t.jsxs)("span",{className:(0,s.A)("inline-flex items-center px-1 py-0.5 rounded text-xs font-bold uppercase",c?r[c]:"bg-gray-100 text-gray-800",o),children:[n&&(0,t.jsx)(i.A,{icon:n,className:"mr-1"}),l]})}}}]);