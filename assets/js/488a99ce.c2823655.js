"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[80784],{15868:(e,n,t)=>{t.d(n,{A:()=>s});var i=t(65162),a=t(62540);function s(e){let{header:n,inline:t,updated:s,version:r}=e;return(0,a.jsx)(i.A,{text:`v${r}`,variant:s?"success":"info",className:n?"absolute right-0 top-1.5":t?"inline-block ml-1":"ml-2"})}},23600:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"guides/codegen","title":"Code generation","description":"Code generation provides an easy mechanism for automating common development workflows and file","source":"@site/docs/guides/codegen.mdx","sourceDirName":"guides","slug":"/guides/codegen","permalink":"/docs/guides/codegen","draft":false,"unlisted":false,"editUrl":"https://github.com/moonrepo/moon/tree/master/website/docs/guides/codegen.mdx","tags":[{"inline":true,"label":"codegen","permalink":"/docs/tags/codegen"},{"inline":true,"label":"generator","permalink":"/docs/tags/generator"},{"inline":true,"label":"scaffold","permalink":"/docs/tags/scaffold"},{"inline":true,"label":"template","permalink":"/docs/tags/template"}],"version":"current","frontMatter":{"title":"Code generation","toc_max_heading_level":6,"tags":["codegen","generator","scaffold","template"]},"sidebar":"guides","previous":{"title":"Continuous integration (CI)","permalink":"/docs/guides/ci"},"next":{"title":"Code owners","permalink":"/docs/guides/codeowners"}}');var a=t(62540),s=t(43023),r=t(15868);const l={title:"Code generation",toc_max_heading_level:6,tags:["codegen","generator","scaffold","template"]},o=void 0,c={},d=[{value:"Creating a new template",id:"creating-a-new-template",level:2},{value:"Configuring <code>template.yml</code>",id:"configuring-templateyml",level:3},{value:"Managing files",id:"managing-files",level:3},{value:"Interpolation",id:"interpolation",level:4},{value:"File extensions",id:"file-extensions",level:4},{value:"Partials",id:"partials",level:4},{value:"Raws<VersionLabel></VersionLabel>",id:"raws",level:4},{value:"Frontmatter",id:"frontmatter",level:4},{value:"Assets",id:"assets",level:4},{value:"Template engine &amp; syntax",id:"template-engine--syntax",level:3},{value:"Filters",id:"filters",level:4},{value:"Functions",id:"functions",level:4},{value:"Variables",id:"variables",level:4},{value:"Generating code from a template",id:"generating-code-from-a-template",level:2},{value:"Configuring template locations",id:"configuring-template-locations",level:3},{value:"Archive URLs<VersionLabel></VersionLabel>",id:"archive-urls",level:4},{value:"Globs<VersionLabel></VersionLabel>",id:"globs",level:4},{value:"Git repositories<VersionLabel></VersionLabel>",id:"git-repositories",level:4},{value:"npm packages<VersionLabel></VersionLabel>",id:"npm-packages",level:4},{value:"Declaring variables with CLI arguments",id:"declaring-variables-with-cli-arguments",level:3},{value:"Sharing templates",id:"sharing-templates",level:2},{value:"Git and npm layout structure",id:"git-and-npm-layout-structure",level:3}];function h(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"Code generation provides an easy mechanism for automating common development workflows and file\nstructures. Whether it's scaffolding a new library or application, updating configuration, or\nstandardizing patterns."}),"\n",(0,a.jsx)(n.p,{children:"To accomplish this, we provide a generator, which is divided into two parts. The first being the\ntemplates and their files to be scaffolded. The second is our rendering engine that writes template\nfiles to a destination."}),"\n",(0,a.jsx)(n.h2,{id:"creating-a-new-template",children:"Creating a new template"}),"\n",(0,a.jsxs)(n.p,{children:["To create a new template, run ",(0,a.jsx)(n.a,{href:"../commands/generate",children:(0,a.jsx)(n.code,{children:"moon generate"})})," while passing the ",(0,a.jsx)(n.code,{children:"--template"})," option. This\nwill create a template directory and ",(0,a.jsx)(n.a,{href:"../config/template",children:(0,a.jsx)(n.code,{children:"template.yml"})})," file in the 1st file-based template\nlocation defined in ",(0,a.jsx)(n.a,{href:"../config/workspace#templates",children:(0,a.jsx)(n.code,{children:"generator.templates"})}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"$ moon generate <name> --template\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"configuring-templateyml",children:["Configuring ",(0,a.jsx)(n.code,{children:"template.yml"})]}),"\n",(0,a.jsxs)(n.p,{children:["Every template requires a ",(0,a.jsx)(n.a,{href:"../config/template",children:(0,a.jsx)(n.code,{children:"template.yml"})})," file in the template's directory root. This file\nacts as a schema and declares metadata and variables required by the generator."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title="template.yml"',children:"title: 'npm package'\ndescription: |\n  Scaffolds the initial structure for an npm package,\n  including source and test folders, a package.json, and more.\nvariables:\n  name:\n    type: 'string'\n    default: ''\n    required: true\n    prompt: 'Package name?'\n"})}),"\n",(0,a.jsx)(n.h3,{id:"managing-files",children:"Managing files"}),"\n",(0,a.jsx)(n.p,{children:"Feel free to add any files and folders to the template that you'd like to be generated by consumers!\nThese files will then be scaffolded 1:1 in structure at the target destination."}),"\n",(0,a.jsx)(n.p,{children:"An example of the templates folder structure may look something like the following:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"templates/\n\u251c\u2500\u2500 npm-package/\n\u2502   \u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 tests/\n\u2502   \u251c\u2500\u2500 package.json\n\u2502   \u2514\u2500\u2500 template.yml\n\u2514\u2500\u2500 react-app/\n"})}),"\n",(0,a.jsx)(n.h4,{id:"interpolation",children:"Interpolation"}),"\n",(0,a.jsxs)(n.p,{children:["Variables can be interpolated into file paths using the form ",(0,a.jsx)(n.code,{children:"[varName]"}),". For example, if you had a\ntemplate file ",(0,a.jsx)(n.code,{children:"src/[type].ts"}),", and a variable ",(0,a.jsx)(n.code,{children:"type"}),' with a value of "bin", then the destination\nfile path would be ',(0,a.jsx)(n.code,{children:"src/bin.ts"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["This syntax also supports ",(0,a.jsx)(n.a,{href:"#filters",children:"filters"}),", such as ",(0,a.jsx)(n.code,{children:"[varName | camel_case]"}),". However, spaces may\ncause issues with file path encoding, so this functionality is primarily recommended for the\n",(0,a.jsx)(n.a,{href:"../config/template#destination",children:(0,a.jsx)(n.code,{children:"destination"})})," setting."]}),"\n",(0,a.jsx)(n.h4,{id:"file-extensions",children:"File extensions"}),"\n",(0,a.jsxs)(n.p,{children:["To enable syntax highlighting for template engine syntax, you may use the ",(0,a.jsx)(n.code,{children:".tera"})," (preferred) or\n",(0,a.jsx)(n.code,{children:".twig"})," file extensions. These extensions are optional, but will be removed when the files are\ngenerated."]}),"\n",(0,a.jsx)(n.p,{children:"Depending on your preferred editor, these extensions may be supported through a plugin, or can be\nconfigured based on file type."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"VS Code"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=karunamurti.tera",children:"Tera extension"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=mblode.twig-language-2",children:"Twig extension"})}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Atom"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://atom.io/packages/atom-twig",children:"Twig package"})}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Webstorm"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://plugins.jetbrains.com/plugin/7303-twig",children:"Twig plugin"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"partials",children:"Partials"}),"\n",(0,a.jsxs)(n.p,{children:["Partials are special template files that are used for\n",(0,a.jsx)(n.a,{href:"https://keats.github.io/tera/docs/#include",children:"composition"})," and\n",(0,a.jsx)(n.a,{href:"https://keats.github.io/tera/docs/#inheritance",children:"inheritance"}),". Because of this, these files ",(0,a.jsx)(n.em,{children:"should\nnot"})," be generated into the target destination, and ",(0,a.jsx)(n.em,{children:"do not"})," support frontmatter."]}),"\n",(0,a.jsxs)(n.p,{children:['To ensure they are not generated, include the word "partial" anywhere in the file path. For example,\n',(0,a.jsx)(n.code,{children:"partials/header.tpl"})," or ",(0,a.jsx)(n.code,{children:"header.partial.tpl"}),"."]}),"\n",(0,a.jsxs)(n.h4,{id:"raws",children:["Raws",(0,a.jsx)(r.A,{version:"1.11.0"})]}),"\n",(0,a.jsx)(n.p,{children:"Raw template files are another special type of file that bypass all Tera rendering, and are used\nas-is instead. This is useful for files that contain syntax that conflicts with Tera."}),"\n",(0,a.jsxs)(n.p,{children:["To mark a file as raw, add a ",(0,a.jsx)(n.code,{children:".raw"})," extension, for example: ",(0,a.jsx)(n.code,{children:"file.raw.js"})," or ",(0,a.jsx)(n.code,{children:"file.js.raw"}),". When the\nfile is generated, the ",(0,a.jsx)(n.code,{children:".raw"})," extension will be removed."]}),"\n",(0,a.jsx)(n.h4,{id:"frontmatter",children:"Frontmatter"}),"\n",(0,a.jsxs)(n.p,{children:['Frontmatter is a well-known concept for "per-file configuration", and is achieved by inserting YAML\nat the top of the file, delimited by wrapping ',(0,a.jsx)(n.code,{children:"---"}),". This is a very powerful feature that provides\nmore control than the alternatives, and allows for some very cool integrations."]}),"\n",(0,a.jsxs)(n.p,{children:["moon's frontmatter supports functionality like file skipping, force overwriting, and destination\npath rewriting.\n",(0,a.jsx)(n.a,{href:"../config/template#frontmatter",children:"View the configuration docs for a full list of supported fields"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-twig",metastring:'title="package.json"',children:'---\nforce: true\n---\n\n{\n  "name": "{{ name | kebab_case }}",\n  "version": "0.0.1"\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"Since frontmatter exists in the file itself, you can take advantage of the rendering engine to\npopulate the field values dynamically. For example, if you're scaffolding a React component, you can\nconvert the component name and file name to PascalCase."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-twig",children:"{% set component_name = name | pascal_case %}\n\n---\nto: components/{{ component_name }}.tsx\n---\n\nexport function {{ component_name }}() {\n  return <div />;\n}\n"})}),"\n",(0,a.jsx)(n.h4,{id:"assets",children:"Assets"}),"\n",(0,a.jsx)(n.p,{children:"Assets are binary files that are copied as-is to the destination, without any rendering, and no\nsupport for frontmatter. This applies to all non-text based files, like images, audio, video, etc."}),"\n",(0,a.jsx)(n.h3,{id:"template-engine--syntax",children:"Template engine & syntax"}),"\n",(0,a.jsxs)(n.p,{children:["Rendering templates is powered by ",(0,a.jsx)(n.a,{href:"https://keats.github.io/tera/",children:"Tera"}),", a Rust based template\nengine with syntax similar to Twig, Liquid, Django, and more. We highly encourage everyone to read\nTera's documentation for an in-depth understanding, but as a quick reference, Tera supports the\nfollowing:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://keats.github.io/tera/docs/#variables",children:"Variable interpolation"})," (defined with the\n",(0,a.jsx)(n.a,{href:"../config/template#variables",children:(0,a.jsx)(n.code,{children:"variables"})})," setting), with\n",(0,a.jsx)(n.a,{href:"https://keats.github.io/tera/docs/#built-in-filters",children:"built-in filters"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-twig",children:"{{ varName }} -> foo\n{{ varName | upper }} -> FOO\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://keats.github.io/tera/docs/#if",children:"Conditional blocks"})," and\n",(0,a.jsx)(n.a,{href:"https://keats.github.io/tera/docs/#for",children:"loops"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-twig",children:"{% if price < 10 or always_show %}\n  Price is {{ price }}.\n{% elif price > 1000 and not rich %}\n  That's expensive!\n{% else %}\n  N/A\n{% endif %}\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-twig",children:"{% for item in items %}\n  {{ loop.index }} - {{ item.name }}\n{% endfor %}\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"And many more features, like auto-escaping, white space control, and math operators!"}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"filters",children:"Filters"}),"\n",(0,a.jsxs)(n.p,{children:["Filters are a mechanism for transforming values during interpolation and are written using pipes\n(",(0,a.jsx)(n.code,{children:"|"}),"). Tera provides many ",(0,a.jsx)(n.a,{href:"https://keats.github.io/tera/docs/#built-in-filters",children:"built-in filters"}),",\nbut we also provide the following custom filters:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Strings - ",(0,a.jsx)(n.code,{children:"camel_case"}),", ",(0,a.jsx)(n.code,{children:"pascal_case"}),", ",(0,a.jsx)(n.code,{children:"snake_case"}),", ",(0,a.jsx)(n.code,{children:"upper_snake_case"}),", ",(0,a.jsx)(n.code,{children:"kebab_case"}),",\n",(0,a.jsx)(n.code,{children:"upper_kebab_case"}),", ",(0,a.jsx)(n.code,{children:"lower_case"}),", ",(0,a.jsx)(n.code,{children:"upper_case"})]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-twig",children:"{{ some_value | upper_case }}\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Paths - ",(0,a.jsx)(n.code,{children:"path_join"}),", ",(0,a.jsx)(n.code,{children:"path_relative"})]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-twig",children:'{{ some_path | path_join(part = "another/folder") }}\n{{ some_path | path_relative(from = other_path) }}\n{{ some_path | path_relative(to = other_path) }}\n'})}),"\n",(0,a.jsx)(n.h4,{id:"functions",children:"Functions"}),"\n",(0,a.jsx)(n.p,{children:"The following functions are available within a template:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"variables()"})," - Returns an object containing all variables within the current template.","\n",(0,a.jsx)(r.A,{inline:!0,version:"1.23.0"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"variables",children:"Variables"}),"\n",(0,a.jsx)(n.p,{children:"The following variables are always available within a template:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"dest_dir"})," - Absolute path to the destination folder."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"dest_rel_dir"})," - Relative path to the destination folder from the working directory."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"working_dir"})," - Current working directory."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"workspace_root"})," - The moon workspace root."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"generating-code-from-a-template",children:"Generating code from a template"}),"\n",(0,a.jsxs)(n.p,{children:["Once a template has been created and configured, you can generate files based on it using the\n",(0,a.jsx)(n.a,{href:"../commands/generate",children:(0,a.jsx)(n.code,{children:"moon generate"})})," command! This is also know as scaffolding or code generation."]}),"\n",(0,a.jsxs)(n.p,{children:["This command requires the name of a template as the 1st argument. The template name is the folder\nname on the file system that houses all the template files, or the ",(0,a.jsx)(n.a,{href:"../config/template#id",children:(0,a.jsx)(n.code,{children:"id"})}),"\nsetting configured in ",(0,a.jsx)(n.a,{href:"../config/template",children:(0,a.jsx)(n.code,{children:"template.yml"})}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"$ moon generate npm-package\n"})}),"\n",(0,a.jsxs)(n.p,{children:["An optional destination path, relative from the current working directory, can be provided as the\n2nd argument. If not provided, the ",(0,a.jsx)(n.a,{href:"../config/template#destination",children:(0,a.jsx)(n.code,{children:"destination"})})," setting\nconfigured in ",(0,a.jsx)(n.a,{href:"../config/template",children:(0,a.jsx)(n.code,{children:"template.yml"})})," will be used, or you'll be prompted during\ngeneration to provide one."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"$ moon generate npm-package ./packages/example\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["This command is extremely interactive, as we'll prompt you for the destination path, variable\nvalues, whether to overwrite files, and more. If you'd prefer to avoid interactions, pass\n",(0,a.jsx)(n.code,{children:"--defaults"}),", or ",(0,a.jsx)(n.code,{children:"--force"}),", or both."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"configuring-template-locations",children:"Configuring template locations"}),"\n",(0,a.jsxs)(n.p,{children:["Templates can be located anywhere, especially when ",(0,a.jsx)(n.a,{href:"#sharing-templates",children:"being shared"}),". Because of\nthis, our generator will loop through all template paths configured in\n",(0,a.jsx)(n.a,{href:"../config/workspace#templates",children:(0,a.jsx)(n.code,{children:"generator.templates"})}),", in order, until a match is found."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title=".moon/workspace.yml"',children:"generator:\n  templates:\n    - './templates'\n    # Or\n    - 'file://other/templates'\n"})}),"\n",(0,a.jsx)(n.p,{children:"When using literal file paths, all paths are relative from the workspace root."}),"\n",(0,a.jsxs)(n.h4,{id:"archive-urls",children:["Archive URLs",(0,a.jsx)(r.A,{version:"1.36.0"})]}),"\n",(0,a.jsxs)(n.p,{children:["Template locations can reference archives (zip, tar, etc) through https URLs. These archives should\ncontain templates and will be downloaded and unpacked. The list of\n",(0,a.jsx)(n.a,{href:"https://github.com/moonrepo/starbase/blob/master/crates/archive/src/lib.rs#L76",children:"available archive formats can be found here"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title=".moon/workspace.yml"',children:"generator:\n  templates:\n    - 'https://domain.com/some/path/to/archive.zip'\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Archives will be unpacked to ",(0,a.jsx)(n.code,{children:"~/.moon/templates/archive/<host>"}),", and will be cached for future\nuse."]}),"\n"]}),"\n",(0,a.jsxs)(n.h4,{id:"globs",children:["Globs",(0,a.jsx)(r.A,{version:"1.31.0"})]}),"\n",(0,a.jsxs)(n.p,{children:["If you'd prefer more control over literal file paths (above), you can instead use glob paths or the\n",(0,a.jsx)(n.code,{children:"glob://"})," protocol. Globs are relative from the workspace root, and will only match directories, or\npatterns that end in ",(0,a.jsx)(n.code,{children:"template.yml"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title=".moon/workspace.yml"',children:"generator:\n  templates:\n    - './templates/*'\n    # Or\n    - 'glob://projects/*/templates/*'\n"})}),"\n",(0,a.jsxs)(n.h4,{id:"git-repositories",children:["Git repositories",(0,a.jsx)(r.A,{version:"1.23.0"})]}),"\n",(0,a.jsxs)(n.p,{children:["Templates locations can also reference templates in an external Git repository using the ",(0,a.jsx)(n.code,{children:"git://"}),"\nlocator protocol. This locator requires the Git host, repository path, and revision (branch, tag,\ncommit, etc)."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title=".moon/workspace.yml"',children:"generator:\n  templates:\n    - 'git://github.com/moonrepo/templates#master'\n    - 'git://gitlab.com/org/repo#v1.2.3'\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Git repositories will be cloned to ",(0,a.jsx)(n.code,{children:"~/.moon/templates/git/<host>"})," using an HTTPS URL (not a Git\nURL), and will be cached for future use."]}),"\n"]}),"\n",(0,a.jsxs)(n.h4,{id:"npm-packages",children:["npm packages",(0,a.jsx)(r.A,{version:"1.23.0"})]}),"\n",(0,a.jsxs)(n.p,{children:["Additionally, template locations can also reference npm packages using the ",(0,a.jsx)(n.code,{children:"npm://"})," locator\nprotocol. This locator requires a package name and published version."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title=".moon/workspace.yml"',children:"generator:\n  templates:\n    - 'npm://@moonrepo/templates#1.2.3'\n    - 'npm://other-templates#4.5.6'\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["npm packages will be downloaded and unpacked to ",(0,a.jsx)(n.code,{children:"~/.moon/templates/npm"})," and cached for future use."]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"declaring-variables-with-cli-arguments",children:"Declaring variables with CLI arguments"}),"\n",(0,a.jsxs)(n.p,{children:["During generation, you'll be prompted in the terminal to provide a value for any configured\nvariables. However, you can pre-fill these variable values by passing arbitrary command line\narguments after ",(0,a.jsx)(n.code,{children:"--"})," to ",(0,a.jsx)(n.a,{href:"../commands/generate",children:(0,a.jsx)(n.code,{children:"moon generate"})}),". Argument names must exactly match the variable\nnames."]}),"\n",(0,a.jsxs)(n.p,{children:["Using the package template example above, we could pre-fill the ",(0,a.jsx)(n.code,{children:"name"})," variable like so:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"$ moon generate npm-package ./packages/example -- --name '@company/example' --private\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Array variables support multiple options of the same name."}),"\n",(0,a.jsxs)(n.li,{children:["Boolean variables can be negated by prefixing the argument with ",(0,a.jsx)(n.code,{children:"--no-<arg>"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Object variables ",(0,a.jsx)(n.em,{children:"can not"})," declare values through arguments."]}),"\n"]})}),"\n",(0,a.jsx)(n.h2,{id:"sharing-templates",children:"Sharing templates"}),"\n",(0,a.jsx)(n.p,{children:"Although moon is designed for a monorepo, you may be using multiple repositories and would like to\nuse the same templates across all of them. So how can we share templates across repositories? Why\nnot try..."}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Git submodules"}),"\n",(0,a.jsxs)(n.li,{children:["Git repositories (using ",(0,a.jsx)(n.code,{children:"git://"})," protocol)"]}),"\n",(0,a.jsx)(n.li,{children:"File archives"}),"\n",(0,a.jsx)(n.li,{children:"Node.js modules"}),"\n",(0,a.jsxs)(n.li,{children:["npm packages (using ",(0,a.jsx)(n.code,{children:"npm://"})," protocol)"]}),"\n",(0,a.jsx)(n.li,{children:"Another packaging system"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Regardless of the choice, simply configure ",(0,a.jsx)(n.a,{href:"../config/workspace#templates",children:(0,a.jsx)(n.code,{children:"generator.templates"})})," to point to these\nlocations:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",metastring:'title=".moon/workspace.yml"',children:"generator:\n  templates:\n    - './templates'\n    - 'file://./templates'\n    # Git\n    - './path/to/submodule'\n    - 'git://github.com/org/repo#branch'\n    # npm\n    - './node_modules/@company/shared-templates'\n    - 'npm://@company/shared-templates#1.2.3'\n"})}),"\n",(0,a.jsx)(n.h3,{id:"git-and-npm-layout-structure",children:"Git and npm layout structure"}),"\n",(0,a.jsxs)(n.p,{children:["If you plan to share templates using Git repositories (",(0,a.jsx)(n.code,{children:"git://"}),") or npm packages (",(0,a.jsx)(n.code,{children:"npm://"}),"), then\nthe layout of those projects must follow these guidelines:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"A project must support multiple templates"}),"\n",(0,a.jsx)(n.li,{children:"A template is denoted by a folder in the root of the project"}),"\n",(0,a.jsxs)(n.li,{children:["Each template must have a ",(0,a.jsx)(n.a,{href:"../config/template",children:(0,a.jsx)(n.code,{children:"template.yml"})})," file"]}),"\n",(0,a.jsxs)(n.li,{children:["Template names are derived from the folder name, or the ",(0,a.jsx)(n.code,{children:"id"})," field in ",(0,a.jsx)(n.a,{href:"../config/template",children:(0,a.jsx)(n.code,{children:"template.yml"})})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"An example of this layout structure may look something like the following:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"<root>\n\u251c\u2500\u2500 template-one/\n\u2502   \u2514\u2500\u2500 template.yml\n\u251c\u2500\u2500 template-two/\n\u2502   \u2514\u2500\u2500 template.yml\n\u251c\u2500\u2500 template-three/\n\u2502   \u2514\u2500\u2500 template.yml\n\u2514\u2500\u2500 package.json, etc\n"})}),"\n",(0,a.jsxs)(n.p,{children:["These templates can then be referenced by name, such as ",(0,a.jsx)(n.a,{href:"../commands/generate",children:(0,a.jsx)(n.code,{children:"moon generate template-one"})}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},43023:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var i=t(63696);const a={},s=i.createContext(a);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(s.Provider,{value:n},e.children)}},65162:(e,n,t)=>{t.d(n,{A:()=>l});var i=t(11750),a=t(74599),s=t(62540);const r={failure:"bg-red-100 text-red-900",info:"bg-pink-100 text-pink-900",success:"bg-green-100 text-green-900",warning:"bg-orange-100 text-orange-900"};function l(e){let{className:n,icon:t,text:l,variant:o}=e;return(0,s.jsxs)("span",{className:(0,i.A)("inline-flex items-center px-1 py-0.5 rounded text-xs font-bold uppercase",o?r[o]:"bg-gray-100 text-gray-800",n),children:[t&&(0,s.jsx)(a.A,{icon:t,className:"mr-1"}),l]})}}}]);