"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[49982],{14127:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>x,frontMatter:()=>c,metadata:()=>i,toc:()=>p});const i=JSON.parse('{"id":"config/project","title":"moon.{pkl,yml}","description":"The moon.yml configuration file is not required but can be used to define additional metadata","source":"@site/docs/config/project.mdx","sourceDirName":"config","slug":"/config/project","permalink":"/docs/config/project","draft":false,"unlisted":false,"editUrl":"https://github.com/moonrepo/moon/tree/master/website/docs/config/project.mdx","tags":[],"version":"current","frontMatter":{"title":"moon.{pkl,yml}","toc_max_heading_level":6},"sidebar":"docs","previous":{"title":".moon/tasks[/**/*].{pkl,yml}","permalink":"/docs/config/tasks"},"next":{"title":"template.{pkl,yml}","permalink":"/docs/config/template"}}');var t=s(62540),r=s(43023),o=s(25648),l=s(99799),a=s(15868);const c={title:"moon.{pkl,yml}",toc_max_heading_level:6},d=void 0,h={},p=[{value:"<code>dependsOn</code>",id:"dependson",level:2},{value:"Metadata",id:"metadata",level:2},{value:"<code>id</code><VersionLabel></VersionLabel>",id:"id",level:2},{value:"<code>language</code>",id:"language",level:2},{value:"<code>owners</code><VersionLabel></VersionLabel>",id:"owners",level:2},{value:"<code>customGroups</code><RequiredLabel></RequiredLabel>",id:"customgroups",level:3},{value:"<code>defaultOwner</code>",id:"defaultowner",level:3},{value:"<code>optional</code><RequiredLabel></RequiredLabel>",id:"optional",level:3},{value:"<code>paths</code>",id:"paths",level:3},{value:"<code>requiredApprovals</code><RequiredLabel></RequiredLabel>",id:"requiredapprovals",level:3},{value:"<code>layer</code>",id:"layer",level:2},{value:"<code>project</code>",id:"project",level:2},{value:"<code>channel</code>",id:"channel",level:3},{value:"<code>description</code><RequiredLabel></RequiredLabel>",id:"description",level:3},{value:"<code>maintainers</code>",id:"maintainers",level:3},{value:"<code>metadata</code><VersionLabel></VersionLabel>",id:"metadata-1",level:3},{value:"<code>name</code>",id:"name",level:3},{value:"<code>owner</code>",id:"owner",level:3},{value:"<code>stack</code><VersionLabel></VersionLabel>",id:"stack",level:2},{value:"<code>tags</code>",id:"tags",level:2},{value:"Integrations",id:"integrations",level:2},{value:"<code>docker</code><VersionLabel></VersionLabel>",id:"docker",level:2},{value:"<code>file</code>",id:"file",level:3},{value:"<code>buildTask</code>",id:"buildtask",level:4},{value:"<code>image</code>",id:"image",level:4},{value:"<code>startTask</code>",id:"starttask",level:4},{value:"<code>scaffold</code>",id:"scaffold",level:3},{value:"<code>include</code>",id:"include",level:4},{value:"Tasks",id:"tasks",level:2},{value:"<code>env</code>",id:"env",level:2},{value:"<code>fileGroups</code>",id:"filegroups",level:2},{value:"<code>platform</code>",id:"platform",level:2},{value:"<code>tasks</code>",id:"tasks-1",level:2},{value:"<code>extends</code><VersionLabel></VersionLabel>",id:"extends",level:3},{value:"<code>description</code><VersionLabel></VersionLabel>",id:"description-1",level:3},{value:"<code>command</code>",id:"command",level:3},{value:"Special commands",id:"special-commands",level:4},{value:"<code>args</code>",id:"args",level:3},{value:"<code>deps</code>",id:"deps",level:3},{value:"Args &amp; env",id:"args--env",level:4},{value:"Optional",id:"optional-1",level:4},{value:"<code>env</code>",id:"env-1",level:3},{value:"<code>inputs</code>",id:"inputs",level:3},{value:"Environment variables",id:"environment-variables",level:4},{value:"File paths",id:"file-paths",level:4},{value:"Glob patterns",id:"glob-patterns",level:4},{value:"<code>local</code>",id:"local",level:3},{value:"<code>outputs</code>",id:"outputs",level:3},{value:"<code>platform</code>",id:"platform-1",level:3},{value:"<code>preset</code><VersionLabel></VersionLabel>",id:"preset",level:3},{value:"<code>script</code><VersionLabel></VersionLabel>",id:"script",level:3},{value:"<code>toolchain</code><VersionLabel></VersionLabel>",id:"toolchain",level:3},{value:"<code>options</code>",id:"options",level:3},{value:"<code>affectedFiles</code>",id:"affectedfiles",level:4},{value:"<code>affectedPassInputs</code><VersionLabel></VersionLabel>",id:"affectedpassinputs",level:4},{value:"<code>allowFailure</code><VersionLabel></VersionLabel>",id:"allowfailure",level:4},{value:"<code>cache</code>",id:"cache",level:4},{value:"<code>cacheKey</code><VersionLabel></VersionLabel>",id:"cachekey",level:4},{value:"<code>cacheLifetime</code><VersionLabel></VersionLabel>",id:"cachelifetime",level:4},{value:"<code>envFile</code>",id:"envfile",level:4},{value:"<code>inferInputs</code><VersionLabel></VersionLabel>",id:"inferinputs",level:4},{value:"<code>internal</code><VersionLabel></VersionLabel>",id:"internal",level:4},{value:"<code>interactive</code><VersionLabel></VersionLabel>",id:"interactive",level:4},{value:"<code>merge</code><VersionLabel></VersionLabel>",id:"merge",level:4},{value:"<code>mergeArgs</code>",id:"mergeargs",level:4},{value:"<code>mergeDeps</code>",id:"mergedeps",level:4},{value:"<code>mergeEnv</code>",id:"mergeenv",level:4},{value:"<code>mergeInputs</code>",id:"mergeinputs",level:4},{value:"<code>mergeOutputs</code>",id:"mergeoutputs",level:4},{value:"<code>mutex</code><VersionLabel></VersionLabel>",id:"mutex",level:4},{value:"<code>os</code><VersionLabel></VersionLabel>",id:"os",level:4},{value:"<code>outputStyle</code>",id:"outputstyle",level:4},{value:"<code>persistent</code><VersionLabel></VersionLabel>",id:"persistent",level:4},{value:"<code>priority</code><VersionLabel></VersionLabel>",id:"priority",level:4},{value:"<code>retryCount</code>",id:"retrycount",level:4},{value:"<code>runDepsInParallel</code>",id:"rundepsinparallel",level:4},{value:"<code>runInCI</code>",id:"runinci",level:4},{value:"<code>runFromWorkspaceRoot</code>",id:"runfromworkspaceroot",level:4},{value:"<code>shell</code>",id:"shell",level:4},{value:"<code>timeout</code><VersionLabel></VersionLabel>",id:"timeout",level:4},{value:"<code>unixShell</code><VersionLabel></VersionLabel>",id:"unixshell",level:4},{value:"<code>windowsShell</code><VersionLabel></VersionLabel>",id:"windowsshell",level:4},{value:"Overrides",id:"overrides",level:2},{value:"<code>toolchain</code>",id:"toolchain-1",level:2},{value:"<code>default</code><VersionLabel></VersionLabel>",id:"default",level:3},{value:"<code>bun</code>",id:"bun",level:3},{value:"<code>version</code>",id:"version",level:4},{value:"<code>deno</code>",id:"deno",level:3},{value:"<code>version</code>",id:"version-1",level:4},{value:"<code>node</code>",id:"node",level:3},{value:"<code>version</code>",id:"version-2",level:4},{value:"<code>python</code>",id:"python",level:3},{value:"<code>version</code>",id:"version-3",level:4},{value:"<code>rust</code>",id:"rust",level:3},{value:"<code>version</code>",id:"version-4",level:4},{value:"<code>typescript</code>",id:"typescript",level:3},{value:"<code>disabled</code>",id:"disabled",level:4},{value:"<code>includeProjectReferenceSources</code><VersionLabel></VersionLabel>",id:"includeprojectreferencesources",level:4},{value:"<code>includeSharedTypes</code><VersionLabel></VersionLabel>",id:"includesharedtypes",level:4},{value:"<code>routeOutDirToCache</code>",id:"routeoutdirtocache",level:4},{value:"<code>syncProjectReferences</code>",id:"syncprojectreferences",level:4},{value:"<code>syncProjectReferencesToPaths</code>",id:"syncprojectreferencestopaths",level:4},{value:"<code>workspace</code>",id:"workspace",level:2},{value:"<code>inheritedTasks</code>",id:"inheritedtasks",level:3},{value:"<code>exclude</code>",id:"exclude",level:4},{value:"<code>include</code>",id:"include-1",level:4},{value:"<code>rename</code>",id:"rename",level:4}];function j(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"moon.yml"})," configuration file ",(0,t.jsx)(n.em,{children:"is not required"})," but can be used to define additional metadata\nfor a project, override inherited tasks, and more at the project-level. When used, this file must\nexist in a project's root, as configured in ",(0,t.jsx)(n.a,{href:"./workspace#projects",children:(0,t.jsx)(n.code,{children:"projects"})}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"$schema: 'https://moonrepo.dev/schemas/project.json'\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["Project configuration can also be written in ",(0,t.jsx)(n.a,{href:"../guides/pkl-config",children:"Pkl"})," instead of YAML."]})}),"\n",(0,t.jsx)(n.h2,{id:"dependson",children:(0,t.jsx)(n.code,{children:"dependsOn"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectConfig#dependsOn"}),"\n",(0,t.jsxs)(n.p,{children:["Explicitly defines ",(0,t.jsx)(n.em,{children:"other"})," projects that ",(0,t.jsx)(n.em,{children:"this"})," project depends on, primarily when generating the\nproject and task graphs. The most common use case for this is building those projects ",(0,t.jsx)(n.em,{children:"before"}),"\nbuilding this one. When defined, this setting requires an array of project names, which are the keys\nfound in the ",(0,t.jsx)(n.a,{href:"./workspace#projects",children:(0,t.jsx)(n.code,{children:"projects"})})," map."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"dependsOn:\n  - 'apiClients'\n  - 'designSystem'\n"})}),"\n",(0,t.jsxs)(n.p,{children:["A dependency object can also be defined, where a specific ",(0,t.jsx)(n.code,{children:"scope"}),' can be assigned, which accepts\n"production" (default), "development", "build", or "peer".']}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"dependsOn:\n  - id: 'apiClients'\n    scope: 'production'\n  - id: 'designSystem'\n    scope: 'peer'\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Learn more about ",(0,t.jsx)(n.a,{href:"../concepts/project#dependencies",children:"implicit and explicit dependencies"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"metadata",children:"Metadata"}),"\n",(0,t.jsxs)(n.h2,{id:"id",children:[(0,t.jsx)(n.code,{children:"id"}),(0,t.jsx)(a.A,{version:"1.18.0"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectConfig#id"}),"\n",(0,t.jsxs)(n.p,{children:["Overrides the name (identifier) of the project, which was configured in or derived from the\n",(0,t.jsx)(n.a,{href:"./workspace#projects",children:(0,t.jsx)(n.code,{children:"projects"})})," setting in ",(0,t.jsx)(n.a,{href:"./workspace",children:(0,t.jsx)(n.code,{children:".moon/workspace.yml"})}),". This setting is\nuseful when using glob based project location, and want to avoid using the folder name as the\nproject name."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"id: 'custom-id'\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"All references to the project must use the new identifier, including project and task dependencies."})}),"\n",(0,t.jsx)(n.h2,{id:"language",children:(0,t.jsx)(n.code,{children:"language"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectConfig#language"}),"\n",(0,t.jsxs)(n.p,{children:["The primary programming language the project is written in. This setting is required for\n",(0,t.jsx)(n.a,{href:"./tasks",children:"task inheritance"}),", editor extensions, and more. Supports the following values:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"bash"})," - A ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Bash_(Unix_shell)",children:"Bash"})," based project (Unix only)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"batch"})," - A ",(0,t.jsx)(n.a,{href:"https://en.wikibooks.org/wiki/Windows_Batch_Scripting",children:"Batch"}),"/PowerShell based\nproject (Windows only)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"go"})," - A ",(0,t.jsx)(n.a,{href:"https://go.dev/",children:"Go"})," based project."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"javascript"})," - A ",(0,t.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript",children:"JavaScript"})," based\nproject."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"php"})," - A ",(0,t.jsx)(n.a,{href:"https://www.php.net",children:"PHP"})," based project."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"python"})," - A ",(0,t.jsx)(n.a,{href:"https://www.python.org/",children:"Python"})," based project."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ruby"})," - A ",(0,t.jsx)(n.a,{href:"https://www.ruby-lang.org/en/",children:"Ruby"})," based project."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"rust"})," - A ",(0,t.jsx)(n.a,{href:"https://www.rust-lang.org/",children:"Rust"})," based project."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"typescript"})," - A ",(0,t.jsx)(n.a,{href:"https://www.typescriptlang.org/",children:"TypeScript"})," based project."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"unknown"})," (default) - When not configured or inferred."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"*"})," - A custom language. Values will be converted to kebab-case."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"language: 'javascript'\n\n# Custom\nlanguage: 'kotlin'\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"For convenience, when this setting is not defined, moon will attempt to detect the language based\non configuration files found in the project root. This only applies to non-custom languages!"}),"\n"]}),"\n",(0,t.jsxs)(n.h2,{id:"owners",children:[(0,t.jsx)(n.code,{children:"owners"}),(0,t.jsx)(a.A,{version:"1.8.0"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectConfig#owners"}),"\n",(0,t.jsx)(n.p,{children:"Defines ownership of source code within the current project, by mapping file system paths to owners.\nAn owner is either a user, team, or group."}),"\n",(0,t.jsxs)(n.p,{children:["Currently supports\n",(0,t.jsx)(n.a,{href:"https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners",children:"GitHub"}),",\n",(0,t.jsx)(n.a,{href:"https://docs.gitlab.com/ee/user/project/codeowners/reference.html",children:"GitLab"}),", and\n",(0,t.jsx)(n.a,{href:"https://marketplace.atlassian.com/apps/1218598/code-owners-for-bitbucket?tab=overview&hosting=cloud",children:"Bitbucket"}),"\n(via app)."]}),"\n",(0,t.jsxs)(n.h3,{id:"customgroups",children:[(0,t.jsx)(n.code,{children:"customGroups"}),(0,t.jsx)(l.A,{text:"Bitbucket"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/OwnersConfig#customGroups"}),"\n",(0,t.jsxs)(n.p,{children:["When using the\n",(0,t.jsx)(n.a,{href:"https://marketplace.atlassian.com/apps/1218598/code-owners-for-bitbucket?tab=overview&hosting=cloud",children:"Code Owners for Bitbucket"}),"\napp, this setting provides a way to define custom groups that will be injected at the top of the\n",(0,t.jsx)(n.code,{children:"CODEOWNERS"})," file. These groups ",(0,t.jsx)(n.em,{children:"must"})," be unique across all projects."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {2,3}',children:"owners:\n  customGroups:\n    '@@@backend': ['@\"user name\"', '@@team']\n"})}),"\n",(0,t.jsx)(n.h3,{id:"defaultowner",children:(0,t.jsx)(n.code,{children:"defaultOwner"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/OwnersConfig#defaultOwner"}),"\n",(0,t.jsxs)(n.p,{children:["The default owner for all ",(0,t.jsx)(n.a,{href:"#paths",children:(0,t.jsx)(n.code,{children:"paths"})}),". This setting is optional in some cases but helps to\navoid unnecessary repetition."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {2}',children:"owners:\n  defaultOwner: '@frontend'\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"optional",children:[(0,t.jsx)(n.code,{children:"optional"}),(0,t.jsx)(l.A,{text:"GitLab"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/OwnersConfig#optional"}),"\n",(0,t.jsxs)(n.p,{children:["For GitLab, marks the project's\n",(0,t.jsx)(n.a,{href:"https://docs.gitlab.com/ee/user/project/codeowners/reference.html#optional-sections",children:"code owners section"}),"\nas optional. Defaults to ",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {2}',children:"owners:\n  optional: true\n"})}),"\n",(0,t.jsx)(n.h3,{id:"paths",children:(0,t.jsx)(n.code,{children:"paths"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/OwnersConfig#paths"}),"\n",(0,t.jsxs)(n.p,{children:["The primary setting for defining ownership of source code within the current project. This setting\nsupports 2 formats, the first being a list of file paths relative from the current project. This\nformat requires ",(0,t.jsx)(n.a,{href:"#defaultowner",children:(0,t.jsx)(n.code,{children:"defaultOwner"})})," to be defined, and only supports 1 owner for every\npath (the default owner)."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {3-6}',children:"owners:\n  defaultOwner: '@frontend'\n  paths:\n    - '**/*.ts'\n    - '**/*.tsx'\n    - '*.config.js'\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The second format provides far more granularity, allowing for multiple owners per path. This format\nrequires a map, where the key is a file path relative from the current project, and the value is a\nlist of owners. Paths with an empty list of owners will fallback to ",(0,t.jsx)(n.a,{href:"#defaultowner",children:(0,t.jsx)(n.code,{children:"defaultOwner"})}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {3-6}',children:"owners:\n  defaultOwner: '@frontend'\n  paths:\n    '**/*.rs': ['@backend']\n    '**/*.js': []\n    '*.config.js': ['@frontend', '@frontend-infra']\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"The syntax for owners is dependent on the provider you are using for version control (GitHub,\nGitLab, Bitbucket). moon provides no validation or guarantees that these are correct."}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"requiredapprovals",children:[(0,t.jsx)(n.code,{children:"requiredApprovals"}),(0,t.jsx)(l.A,{text:"Bitbucket / GitLab"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/OwnersConfig#requiredApprovals"}),"\n",(0,t.jsxs)(n.p,{children:["Requires a specific number of approvals for a pull/merge request to be satisfied. Defaults to ",(0,t.jsx)(n.code,{children:"1"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["For Bitbucket, defines the\n",(0,t.jsxs)(n.a,{href:"https://docs.mibexsoftware.com/codeowners/merge-checks#MergeChecks-2.MergeChecks:HowmanyoftheseCodeOwnersneedtoapprovebeforeapullrequestcanbemerged?",children:[(0,t.jsx)(n.code,{children:"Check()"})," condition"]}),"\nwhen using a ",(0,t.jsx)(n.a,{href:"#defaultowner",children:(0,t.jsx)(n.code,{children:"defaultOwner"})}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["For GitLab, defines a requirement on the\n",(0,t.jsx)(n.a,{href:"https://docs.gitlab.com/ee/user/project/codeowners/reference.html#sections-requiring-multiple-approvals",children:"code owners section"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {2}',children:"owners:\n  requiredApprovals: 2\n"})}),"\n",(0,t.jsx)(n.h2,{id:"layer",children:(0,t.jsx)(n.code,{children:"layer"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectConfig#layer"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["This was previously known as ",(0,t.jsx)(n.code,{children:"type"})," and was renamed to ",(0,t.jsx)(n.code,{children:"layer"})," in v1.39."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The layer within a ",(0,t.jsx)(n.a,{href:"#stack",children:"stack"}),". Supports the following values:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"application"})," - An application of any kind."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"automation"})," - An automated testing suite, like E2E, integration, or visual tests.","\n",(0,t.jsx)(a.A,{version:"1.16.0"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"configuration"})," - Configuration files or infrastructure.","\n",(0,t.jsx)(a.A,{version:"1.22.0"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"library"})," - A self-contained, shareable, and publishable set of code."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"scaffolding"})," - Templates or generators for scaffolding.","\n",(0,t.jsx)(a.A,{version:"1.22.0"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"tool"})," - An internal tool, CLI, one-off script, etc."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"unknown"})," (default) - When not configured."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"layer: 'application'\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["The project layer is used in ",(0,t.jsx)(n.a,{href:"../concepts/task-inheritance",children:"task inheritance"}),",\n",(0,t.jsx)(n.a,{href:"./workspace#constraints",children:"constraints and boundaries"}),", editor extensions, and more!"]})}),"\n",(0,t.jsx)(n.h2,{id:"project",children:(0,t.jsx)(n.code,{children:"project"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectConfig#project"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"project"})," setting defines metadata about the project itself."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"project:\n  name: 'moon'\n  description: 'A monorepo management tool.'\n  channel: '#moon'\n  owner: 'infra.platform'\n  maintainers: ['miles.johnson']\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The information listed within ",(0,t.jsx)(n.code,{children:"project"})," is purely informational and primarily displayed within the\nCLI. However, this setting exists for you, your team, and your company, as a means to identify and\norganize all projects. Feel free to build your own tooling around these settings!"]}),"\n",(0,t.jsx)(n.h3,{id:"channel",children:(0,t.jsx)(n.code,{children:"channel"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectMetadataConfig#channel"}),"\n",(0,t.jsx)(n.p,{children:"The Slack, Discord, Teams, IRC, etc channel name (with leading #) in which to discuss the project."}),"\n",(0,t.jsxs)(n.h3,{id:"description",children:[(0,t.jsx)(n.code,{children:"description"}),(0,t.jsx)(l.A,{})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectMetadataConfig#description"}),"\n",(0,t.jsx)(n.p,{children:"A description of what the project does and aims to achieve. Be as descriptive as possible, as this\nis the kind of information search engines would index on."}),"\n",(0,t.jsx)(n.h3,{id:"maintainers",children:(0,t.jsx)(n.code,{children:"maintainers"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectMetadataConfig#maintainers"}),"\n",(0,t.jsx)(n.p,{children:"A list of people/developers that maintain the project, review code changes, and can provide support.\nCan be a name, email, LDAP name, GitHub username, etc, the choice is yours."}),"\n",(0,t.jsxs)(n.h3,{id:"metadata-1",children:[(0,t.jsx)(n.code,{children:"metadata"}),(0,t.jsx)(a.A,{version:"1.27.0"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectMetadataConfig#metadata"}),"\n",(0,t.jsx)(n.p,{children:"A map of custom metadata to associate to this project. Supports all value types that are valid JSON."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"project:\n  # ...\n  metadata:\n    deprecated: true\n"})}),"\n",(0,t.jsx)(n.h3,{id:"name",children:(0,t.jsx)(n.code,{children:"name"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectMetadataConfig#name"}),"\n",(0,t.jsxs)(n.p,{children:["A human readable name of the project. This is ",(0,t.jsx)(n.em,{children:"different"})," from the unique project name configured in\n",(0,t.jsx)(n.a,{href:"./workspace#projects",children:(0,t.jsx)(n.code,{children:"projects"})}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"owner",children:(0,t.jsx)(n.code,{children:"owner"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectMetadataConfig#owner"}),"\n",(0,t.jsxs)(n.p,{children:["The team or organization that owns the project. Can be a title, LDAP name, GitHub team, etc. We\nsuggest ",(0,t.jsx)(n.em,{children:"not"})," listing people/developers as the owner, use ",(0,t.jsx)(n.a,{href:"#maintainers",children:"maintainers"})," instead."]}),"\n",(0,t.jsxs)(n.h2,{id:"stack",children:[(0,t.jsx)(n.code,{children:"stack"}),(0,t.jsx)(a.A,{version:"1.22.0"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectConfig#stack"}),"\n",(0,t.jsx)(n.p,{children:"The technology stack this project belongs to, primarily for categorization. Supports the following\nvalues:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"frontend"})," - Client-side user interfaces, etc."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"backend"})," - Server-side APIs, database layers, etc."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"infrastructure"})," - Cloud/server infrastructure, Docker, etc."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"systems"})," - Low-level systems programming."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"unknown"})," (default) - When not configured."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"stack: 'frontend'\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["The project stack is also used in ",(0,t.jsx)(n.a,{href:"./workspace#constraints",children:"constraints and boundaries"}),"!"]})}),"\n",(0,t.jsx)(n.h2,{id:"tags",children:(0,t.jsx)(n.code,{children:"tags"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectConfig#tags"}),"\n",(0,t.jsxs)(n.p,{children:["Tags are a simple mechanism for categorizing projects. They can be used to group projects together\nfor ",(0,t.jsx)(n.a,{href:"../commands/query/projects",children:"easier querying"}),", enforcing of\n",(0,t.jsx)(n.a,{href:"./workspace#constraints",children:"project boundaries and constraints"}),",\n",(0,t.jsx)(n.a,{href:"../concepts/task-inheritance",children:"task inheritance"}),", and more."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"tags:\n  - 'react'\n  - 'prisma'\n"})}),"\n",(0,t.jsx)(n.h2,{id:"integrations",children:"Integrations"}),"\n",(0,t.jsxs)(n.h2,{id:"docker",children:[(0,t.jsx)(n.code,{children:"docker"}),(0,t.jsx)(a.A,{version:"1.27.0"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectConfig#docker"}),"\n",(0,t.jsx)(n.p,{children:"Configures Docker integration for the current project."}),"\n",(0,t.jsx)(n.h3,{id:"file",children:(0,t.jsx)(n.code,{children:"file"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectDockerConfig#file"}),"\n",(0,t.jsxs)(n.p,{children:["Configures the ",(0,t.jsx)(n.code,{children:"Dockerfile"})," generation process when ",(0,t.jsx)(n.a,{href:"../commands/docker/file",children:(0,t.jsx)(n.code,{children:"moon docker file"})})," is\nexecuted."]}),"\n",(0,t.jsx)(n.h4,{id:"buildtask",children:(0,t.jsx)(n.code,{children:"buildTask"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectDockerFileConfig#buildTask"}),"\n",(0,t.jsx)(n.p,{children:"The name of a task within the current project that will be used for building the project before\nrunning it. If not defined, does nothing."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {3}',children:"docker:\n  file:\n    buildTask: 'build'\n"})}),"\n",(0,t.jsx)(n.h4,{id:"image",children:(0,t.jsx)(n.code,{children:"image"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectDockerFileConfig#image"}),"\n",(0,t.jsx)(n.p,{children:"The Docker image to use in the base stage. Defaults to an image based on the project's toolchain, as\noutlined below."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"oven/bun:latest"})," for Bun"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"denoland/deno:latest"})," for Deno"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"node:latest"})," for Node.js"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"python:latest"})," for Python"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"rust:latest"})," for Rust"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"scratch"})," for everything else"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {3}',children:"docker:\n  file:\n    image: 'node:latest'\n"})}),"\n",(0,t.jsx)(n.h4,{id:"starttask",children:(0,t.jsx)(n.code,{children:"startTask"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectDockerFileConfig#startTask"}),"\n",(0,t.jsxs)(n.p,{children:["The name of a task within the current project that will run the project after it has been built (if\nrequired). This task will be used as ",(0,t.jsx)(n.code,{children:"CMD"})," within the ",(0,t.jsx)(n.code,{children:"Dockerfile"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {3}',children:"docker:\n  file:\n    startTask: 'start'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"scaffold",children:(0,t.jsx)(n.code,{children:"scaffold"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectDockerConfig#scaffold"}),"\n",(0,t.jsxs)(n.p,{children:["Configures aspects of the Docker scaffolding process when\n",(0,t.jsx)(n.a,{href:"../commands/docker/scaffold",children:(0,t.jsx)(n.code,{children:"moon docker scaffold"})})," is executed. Only applies to the\n",(0,t.jsx)(n.a,{href:"../commands/docker/scaffold#sources",children:"sources skeleton"}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"include",children:(0,t.jsx)(n.code,{children:"include"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectDockerScaffoldConfig#include"}),"\n",(0,t.jsxs)(n.p,{children:["List of globs in which to copy project-relative files into the ",(0,t.jsx)(n.code,{children:".moon/docker/sources"})," skeleton. When\nnot defined, defaults to ",(0,t.jsx)(n.code,{children:"**/*"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {3,4}',children:"docker:\n  scaffold:\n    include:\n      - 'src/**/*'\n"})}),"\n",(0,t.jsx)(n.h2,{id:"tasks",children:"Tasks"}),"\n",(0,t.jsx)(n.h2,{id:"env",children:(0,t.jsx)(n.code,{children:"env"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectConfig#env"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"env"})," field is map of strings that are passed as environment variables to ",(0,t.jsx)(n.em,{children:"all tasks"})," within the\ncurrent project. Project-level variables will not override task-level variables of the same name."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"env:\n  NODE_ENV: 'production'\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["View the task ",(0,t.jsx)(n.a,{href:"#env-1",children:(0,t.jsx)(n.code,{children:"env"})})," setting for more usage examples and information."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"filegroups",children:(0,t.jsx)(n.code,{children:"fileGroups"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectConfig#fileGroups"}),"\n",(0,t.jsxs)(n.p,{children:["Defines ",(0,t.jsx)(n.a,{href:"../concepts/file-group",children:"file groups"})," to be used by local tasks. By default, this setting\n",(0,t.jsx)(n.em,{children:"is not required"})," for the following reasons:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"File groups are an optional feature, and are designed for advanced use cases."}),"\n",(0,t.jsxs)(n.li,{children:["File groups defined in ",(0,t.jsx)(n.a,{href:"./tasks",children:(0,t.jsx)(n.code,{children:".moon/tasks.yml"})})," will be inherited by all projects."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["When defined this setting requires a map, where the key is the file group name, and the value is a\nlist of ",(0,t.jsx)(n.a,{href:"../concepts/file-pattern",children:"globs or file paths"}),", or environment variables. Globs and paths\nare ",(0,t.jsx)(n.a,{href:"../concepts/file-pattern#project-relative",children:"relative to a project"})," (even when defined\n",(0,t.jsx)(n.a,{href:"./tasks",children:"globally"}),")."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"# Example groups\nfileGroups:\n  configs:\n    - '*.config.{js,cjs,mjs}'\n    - '*.json'\n  sources:\n    - 'src/**/*'\n    - 'types/**/*'\n  tests:\n    - 'tests/**/*'\n    - '**/__tests__/**/*'\n  assets:\n    - 'assets/**/*'\n    - 'images/**/*'\n    - 'static/**/*'\n    - '**/*.{scss,css}'\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Once your groups have been defined, you can reference them within ",(0,t.jsx)(n.a,{href:"#args",children:(0,t.jsx)(n.code,{children:"args"})}),",\n",(0,t.jsx)(n.a,{href:"#inputs",children:(0,t.jsx)(n.code,{children:"inputs"})}),", ",(0,t.jsx)(n.a,{href:"#outputs",children:(0,t.jsx)(n.code,{children:"outputs"})}),", and more, using\n",(0,t.jsx)(n.a,{href:"../concepts/token",children:"token functions and variables"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"tasks:\n  build:\n    command: 'vite build'\n    inputs:\n      - '@group(configs)'\n      - '@group(sources)'\n"})}),"\n",(0,t.jsx)(n.h2,{id:"platform",children:(0,t.jsx)(n.code,{children:"platform"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectConfig#platform"}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["This setting is deprecated, use ",(0,t.jsx)(n.a,{href:"#toolchain-1",children:(0,t.jsx)(n.code,{children:"toolchain.default"})})," instead."]})}),"\n",(0,t.jsxs)(n.p,{children:["The default ",(0,t.jsx)(n.a,{href:"#platform-1",children:(0,t.jsx)(n.code,{children:"platform"})})," for all task's within the current project. When a task's\n",(0,t.jsx)(n.code,{children:"platform"})," has ",(0,t.jsx)(n.em,{children:"not been"})," explicitly configured, the platform will fallback to this configured\nvalue, otherwise the platform will be detected from the project's environment."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"platform: 'node'\n"})}),"\n",(0,t.jsx)(n.h2,{id:"tasks-1",children:(0,t.jsx)(n.code,{children:"tasks"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectConfig#tasks"}),"\n",(0,t.jsxs)(n.p,{children:["Tasks are actions that are ran within the context of a ",(0,t.jsx)(n.a,{href:"../concepts/project",children:"project"}),", and commonly\nwrap an npm binary or system command. This setting requires a map, where the key is a unique name\nfor the task, and the value is an object of task parameters."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"tasks:\n  format:\n    command: 'prettier'\n  lint:\n    command: 'eslint'\n  test:\n    command: 'jest'\n  typecheck:\n    command: 'tsc'\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"extends",children:[(0,t.jsx)(n.code,{children:"extends"}),(0,t.jsx)(a.A,{version:"1.12.0"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskConfig#extends"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"extends"})," field can be used to extend the settings from a sibling task within the same project,\nor ",(0,t.jsx)(n.a,{href:"../concepts/task-inheritance",children:"inherited from the global scope"}),". This is useful for composing\nsimilar tasks with different arguments or options."]}),"\n",(0,t.jsxs)(n.p,{children:["When extending another task, the same\n",(0,t.jsx)(n.a,{href:"../concepts/task-inheritance#merge-strategies",children:"merge strategies"})," used for inheritance are applied."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {8}',children:"tasks:\n  lint:\n    command: 'eslint .'\n    inputs:\n      - 'src/**/*'\n\n  lint-fix:\n    extends: 'lint'\n    args: '--fix'\n    local: true\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"description-1",children:[(0,t.jsx)(n.code,{children:"description"}),(0,t.jsx)(a.A,{version:"1.22.0"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskConfig#description"}),"\n",(0,t.jsxs)(n.p,{children:["A human-readable description of what the task does. This information is displayed within the\n",(0,t.jsx)(n.a,{href:"../commands/project",children:(0,t.jsx)(n.code,{children:"moon project"})})," and ",(0,t.jsx)(n.a,{href:"../commands/task",children:(0,t.jsx)(n.code,{children:"moon task"})})," commands."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {3}',children:"tasks:\n  build:\n    description: 'Builds the project using Vite'\n    command: 'vite build'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"command",children:(0,t.jsx)(n.code,{children:"command"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskConfig#command"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"command"})," field is a ",(0,t.jsx)(n.em,{children:"single"})," command to execute for the task, including the command binary/name\n(must be first) and any optional ",(0,t.jsx)(n.a,{href:"#args",children:"arguments"}),". This field supports task inheritance and\nmerging of arguments."]}),"\n",(0,t.jsx)(n.p,{children:"This setting can be defined using a string, or an array of strings. We suggest using arrays when\ndealing with many args, or the args string cannot be parsed easily."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {4,6-9}',children:"tasks:\n  format:\n    # Using a string\n    command: 'prettier --check .'\n    # Using an array\n    command:\n      - 'prettier'\n      - '--check'\n      - '.'\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["If you need to support pipes, redirects, or multiple commands, use ",(0,t.jsx)(n.a,{href:"#script",children:(0,t.jsx)(n.code,{children:"script"})})," instead.\nLearn more about ",(0,t.jsx)(n.a,{href:"../concepts/task#commands-vs-scripts",children:"commands vs scripts"}),"."]})}),"\n",(0,t.jsx)(n.h4,{id:"special-commands",children:"Special commands"}),"\n",(0,t.jsx)(n.p,{children:"For interoperability reasons, the following command names have special handling."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"noop"}),", ",(0,t.jsx)(n.code,{children:"no-op"}),", ",(0,t.jsx)(n.code,{children:"nop"}),' - Marks the task as a "no operation". Will not execute a command in the\naction pipeline but can define dependencies.']}),"\n",(0,t.jsxs)(n.li,{children:["When ",(0,t.jsx)(n.code,{children:"toolchain"}),' is "bun":',"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"bun"}),", ",(0,t.jsx)(n.code,{children:"bunx"})," - Uses the binaries from the toolchain."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["When ",(0,t.jsx)(n.code,{children:"toolchain"}),' is "deno":',"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Will execute with ",(0,t.jsx)(n.code,{children:"deno"})," binary."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["When ",(0,t.jsx)(n.code,{children:"toolchain"}),' is "node":',"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"node"}),", ",(0,t.jsx)(n.code,{children:"npm"}),", ",(0,t.jsx)(n.code,{children:"pnpm"}),", ",(0,t.jsx)(n.code,{children:"yarn"})," - Uses the binaries from the toolchain."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["When ",(0,t.jsx)(n.code,{children:"toolchain"}),' is "rust":',"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Will execute with ",(0,t.jsx)(n.code,{children:"cargo"})," binary."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"args",children:(0,t.jsx)(n.code,{children:"args"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskConfig#args"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"args"})," field is a collection of ",(0,t.jsx)(n.em,{children:"additional"})," arguments to append to the ",(0,t.jsx)(n.a,{href:"#command",children:(0,t.jsx)(n.code,{children:"command"})}),"\nwhen executing the task. This field exists purely to provide arguments for\n",(0,t.jsx)(n.a,{href:"./tasks#tasks",children:"inherited tasks"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"This setting can be defined using a string, or an array of strings. We suggest using arrays when\ndealing with many args, or the args string cannot be parsed easily."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {5,7-10}',children:"tasks:\n  test:\n    command: 'jest'\n    # Using a string\n    args: '--color --maxWorkers 3'\n    # Using an array\n    args:\n      - '--color'\n      - '--maxWorkers'\n      - '3'\n"})}),"\n",(0,t.jsxs)(n.p,{children:["However, for the array approach to work correctly, each argument ",(0,t.jsx)(n.em,{children:"must"})," be its own distinct item,\nincluding argument values. For example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"tasks:\n  test:\n    command: 'jest'\n    args:\n      # Valid\n      - '--maxWorkers'\n      - '3'\n      # Also valid\n      - '--maxWorkers=3'\n      # Invalid\n      - '--maxWorkers 3'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"deps",children:(0,t.jsx)(n.code,{children:"deps"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskConfig#deps"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"deps"})," field is a list of other tasks (known as ",(0,t.jsx)(n.a,{href:"../concepts/target",children:"targets"}),"), either within\nthis project or found in another project, that will be executed ",(0,t.jsx)(n.em,{children:"before"})," this task. It achieves this\nby generating a directed task graph based on the project graph."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {4-8}',children:"tasks:\n  build:\n    command: 'webpack'\n    deps:\n      - 'apiClients:build'\n      - 'designSystem:build'\n      # A task within the current project\n      - 'codegen'\n"})}),"\n",(0,t.jsx)(n.h4,{id:"args--env",children:"Args & env"}),"\n",(0,t.jsxs)(n.p,{children:["Furthermore, for each dependency target, you can configure additional command line arguments and\nenvironment variables that'll be passed to the dependent task when it is ran. The ",(0,t.jsx)(n.code,{children:"args"})," field\nsupports a string or a list of strings, while ",(0,t.jsx)(n.code,{children:"env"})," is an object of key-value pairs."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {4-8}',children:"tasks:\n  build:\n    command: 'webpack'\n    deps:\n      - target: 'apiClients:build'\n        args: '--env production'\n        env:\n          NODE_ENV: 'production'\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Dependencies of inherited tasks will be excluded and renamed according to the\n",(0,t.jsx)(n.a,{href:"#inheritedtasks",children:(0,t.jsx)(n.code,{children:"workspace.inheritedTasks"})})," setting. This process ",(0,t.jsx)(n.em,{children:"only"})," uses filters from the\ncurrent project, and not filters from dependent projects. Furthermore, ",(0,t.jsx)(n.code,{children:"args"})," and ",(0,t.jsx)(n.code,{children:"env"})," are not\ndeeply merged."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"optional-1",children:"Optional"}),"\n",(0,t.jsxs)(n.p,{children:["By default, all dependencies are required to exist when tasks are being built and expanded, but this\nisn't always true when dealing with composition and inheritance. For dependencies that may not exist\nbased on what's inherited, you can mark it as ",(0,t.jsx)(n.code,{children:"optional"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {4-6}',children:"tasks:\n  build:\n    command: 'webpack'\n    deps:\n      - target: 'apiClients:build'\n        optional: true\n"})}),"\n",(0,t.jsx)(n.h3,{id:"env-1",children:(0,t.jsx)(n.code,{children:"env"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskConfig#env"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"env"})," field is map of strings that are passed as environment variables when running the command.\nVariables defined here will take precedence over those loaded with ",(0,t.jsx)(n.a,{href:"#envfile",children:(0,t.jsx)(n.code,{children:"envFile"})}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {4,5}',children:"tasks:\n  build:\n    command: 'webpack'\n    env:\n      NODE_ENV: 'production'\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Variables also support substitution using the syntax ",(0,t.jsx)(n.code,{children:"${VAR_NAME}"}),". When using substitution, only\nvariables in the current process can be referenced, and not those currently defined in ",(0,t.jsx)(n.code,{children:"env"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {4,5}',children:"tasks:\n  build:\n    command: 'webpack'\n    env:\n      APP_TARGET: '${REGION}-${ENVIRONMENT}'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"inputs",children:(0,t.jsx)(n.code,{children:"inputs"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskConfig#inputs"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"inputs"})," field is a list of sources that calculate whether to execute this task based on the\nenvironment and files that have been touched since the last time the task has been ran. If ",(0,t.jsx)(n.em,{children:"not"}),"\ndefined or inherited, then all files within a project are considered an input (",(0,t.jsx)(n.code,{children:"**/*"}),"), excluding\nroot-level tasks."]}),"\n",(0,t.jsx)(n.p,{children:"Inputs support the following source types:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Environment variables"}),"\n",(0,t.jsxs)(n.li,{children:["Environment variable wildcards","\n",(0,t.jsx)(a.A,{version:"1.22.0"}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Files, folders, and globs"}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"../concepts/token",children:"Token functions and variables"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {4-12}',children:"tasks:\n  lint:\n    command: 'eslint'\n    inputs:\n      # Config files anywhere within the project\n      - '**/.eslintignore'\n      - '**/.eslintrc.js'\n      # Config files at the workspace root\n      - '/.eslintignore'\n      - '/.eslintrc.js'\n      # Tokens\n      - '$projectRoot'\n      - '@group(sources)'\n"})}),"\n",(0,t.jsx)(n.h4,{id:"environment-variables",children:"Environment variables"}),"\n",(0,t.jsxs)(n.p,{children:["Environment variables can be used as inputs and must start with a ",(0,t.jsx)(n.code,{children:"$"}),". Wildcard variables can use\n",(0,t.jsx)(n.code,{children:"*"})," to match any character."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"tasks:\n  example:\n    inputs:\n      - '$FOO_CACHE'\n      - '$FOO_*'\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsxs)(n.p,{children:["When using an environment variable, we assume ",(0,t.jsx)(n.em,{children:"it's not defined"})," by default, and will trigger an\naffected state when it ",(0,t.jsx)(n.em,{children:"is"})," defined. If the environment variable always exists, then the task will\nalways run and bypass the cache."]})}),"\n",(0,t.jsx)(n.h4,{id:"file-paths",children:"File paths"}),"\n",(0,t.jsxs)(n.p,{children:["File paths support\n",(0,t.jsx)(n.a,{href:"../concepts/file-pattern#project-relative",children:"project and workspace relative file/folder patterns"}),".\nThey can be defined as a literal path, or a ",(0,t.jsx)(n.code,{children:"file://"})," URI ",(0,t.jsx)(a.A,{inline:!0,version:"1.39.0"}),",\nor as an object with a ",(0,t.jsx)(n.code,{children:"file"})," property ",(0,t.jsx)(a.A,{inline:!0,version:"1.39.0"}),". Additionally, the\nfollowing parameters are supported as a URI query or as object fields:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"content"})," (",(0,t.jsx)(n.code,{children:"string"}),") - When determining affected state, will match against the file's content\nusing the defined regex pattern, instead of relying on file existence."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"optional"})," (",(0,t.jsx)(n.code,{children:"boolean"}),") - When hashing and set to ",(0,t.jsx)(n.code,{children:"true"})," and the file is missing, will not log a\nwarning. When set to ",(0,t.jsx)(n.code,{children:"false"})," and the file is missing, will fail with an error. Defaults to logging\na warning."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"tasks:\n  example:\n    inputs:\n      # Literal paths\n      - 'project/relative/file.js'\n      - '/workspace/relative/file.js'\n      # Using file protocol\n      - 'file://project/relative/file.js?optional'\n      - 'file:///workspace/relative/file.js?content=a|b|c'\n      # Using an object\n      - file: 'project/relative/file.js'\n        optional: true\n      - file: '/workspace/relative/file.js'\n        content: 'a|b|c'\n"})}),"\n",(0,t.jsx)(n.h4,{id:"glob-patterns",children:"Glob patterns"}),"\n",(0,t.jsxs)(n.p,{children:["Glob patterns support\n",(0,t.jsx)(n.a,{href:"../concepts/file-pattern#project-relative",children:"project and workspace relative file/folder patterns"}),".\nThey can be defined as a literal path, or a ",(0,t.jsx)(n.code,{children:"glob://"})," URI ",(0,t.jsx)(a.A,{inline:!0,version:"1.39.0"}),",\nor as an object with a ",(0,t.jsx)(n.code,{children:"glob"})," property ",(0,t.jsx)(a.A,{inline:!0,version:"1.39.0"}),". Additionally, the\nfollowing parameters are supported as a URI query or as object fields:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"cache"})," (",(0,t.jsx)(n.code,{children:"boolean"}),") - When gathering inputs for hashing, defines whether the glob results should\nbe cached for the duration of the moon process. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"tasks:\n  example:\n    inputs:\n      # Literal paths\n      - 'project/relative/file.*'\n      - '/workspace/relative/**/*'\n      # Using glob protocol\n      - 'glob://project/relative/file.*?cache=false'\n      - 'glob:///workspace/relative/**/*?cache'\n      # Using an object\n      - glob: 'project/relative/file.*'\n        cache: false\n      - glob: '/workspace/relative/**/*'\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Globs can also be negated by prefixing the path with ",(0,t.jsx)(n.code,{children:"!"}),", which will exclude all files that match\nthe glob."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"tasks:\n  example:\n    inputs:\n      - '!**/*.md'\n      - 'glob://!/workspace/relative/**/*'\n      - glob: '!/workspace/relative/**/*'\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["Glob patterns that contain ",(0,t.jsx)(n.code,{children:"?"}),", for example ",(0,t.jsx)(n.code,{children:"*.tsx?"}),", cannot be used in URI format, as it conflicts\nwith the query string syntax. Use the path or object format instead."]})}),"\n",(0,t.jsx)(n.admonition,{type:"danger",children:(0,t.jsxs)(n.p,{children:["Be aware that files that match the glob, but are ignored via ",(0,t.jsx)(n.code,{children:".gitignore"})," (or similar), will ",(0,t.jsx)(n.em,{children:"not"}),"\nbe considered an input. To work around this, use explicit file inputs."]})}),"\n",(0,t.jsx)(n.h3,{id:"local",children:(0,t.jsx)(n.code,{children:"local"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskConfig#local"}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["This setting is deprecated and will be removed in v2. We suggest using ",(0,t.jsx)(n.a,{href:"#preset",children:(0,t.jsx)(n.code,{children:"preset"})})," instead."]})}),"\n",(0,t.jsxs)(n.p,{children:["Marks the task as local only. This should primarily be enabled for long-running or never-ending\ntasks, like development servers and watch mode. Defaults to ",(0,t.jsx)(n.code,{children:"true"}),' if the task name is "dev",\n"start", or "serve", and ',(0,t.jsx)(n.code,{children:"false"})," otherwise."]}),"\n",(0,t.jsx)(n.p,{children:"This is a convenience setting for local development that sets the following task options:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#cache",children:(0,t.jsx)(n.code,{children:"cache"})})," -> Turned off"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#outputstyle",children:(0,t.jsx)(n.code,{children:"outputStyle"})}),' -> Set to "stream"']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#persistent",children:(0,t.jsx)(n.code,{children:"persistent"})})," -> Turned on"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#runinci",children:(0,t.jsx)(n.code,{children:"runInCI"})})," -> Turned off"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {5}',children:"tasks:\n  dev:\n    command: 'webpack server'\n    local: true\n"})}),"\n",(0,t.jsx)(n.h3,{id:"outputs",children:(0,t.jsx)(n.code,{children:"outputs"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskConfig#outputs"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"outputs"})," field is a list of ",(0,t.jsx)(n.a,{href:"../concepts/file-pattern#project-relative",children:"files and folders"})," that\nare ",(0,t.jsx)(n.em,{children:"created"})," as a result of executing this task, typically from a build or compilation related\ntask. Outputs are necessary for ",(0,t.jsx)(n.a,{href:"../concepts/cache",children:"incremental caching and hydration"}),". If you'd\nprefer to avoid that functionality, omit this field."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {4-6}',children:"tasks:\n  build:\n    command: 'webpack'\n    outputs:\n      # Relative from project root\n      - 'build/'\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Globs can also be used if you'd like to restrict which files are cached. For example, when building\na JavaScript project, you may want to include ",(0,t.jsx)(n.code,{children:".js"})," files, but exclude ",(0,t.jsx)(n.code,{children:".map"})," and other files."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {4-6}',children:"tasks:\n  build:\n    command: 'webpack'\n    outputs:\n      - 'build/**/*.js'\n      - '!build/internal.js'\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsxs)(n.p,{children:["When using globs and moon hydrates an output (a cache hit), all files not matching the glob will be\n",(0,t.jsx)(n.strong,{children:"deleted"}),". Ensure that all files critical for the build to function correctly are included."]})}),"\n",(0,t.jsx)(n.h3,{id:"platform-1",children:(0,t.jsx)(n.code,{children:"platform"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskConfig#platform"}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["This setting is deprecated, use ",(0,t.jsx)(n.a,{href:"#toolchain",children:(0,t.jsx)(n.code,{children:"toolchain"})})," instead."]})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"platform"})," field defines the platform (language runtime) the command runs on, where to locate\nits executable, and which tool to execute it with. By default moon will set to a value based on the\nproject's ",(0,t.jsx)(n.a,{href:"#language",children:(0,t.jsx)(n.code,{children:"language"})})," or default ",(0,t.jsx)(n.a,{href:"#platform",children:(0,t.jsx)(n.code,{children:"platform"})}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"bun"})," - Command is a binary within ",(0,t.jsx)(n.code,{children:"node_modules"})," and will be executed with Bun.","\n",(0,t.jsx)(a.A,{version:"1.17.0"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"deno"})," - Command is executed with Deno, or is a Deno binary located in ",(0,t.jsx)(n.code,{children:"~/.deno/bin"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"node"})," - Command is a binary within ",(0,t.jsx)(n.code,{children:"node_modules"})," and will be executed with Node.js."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"rust"})," - Command is executed with Cargo, or is a Cargo binary located in ",(0,t.jsx)(n.code,{children:"~/.cargo/bin"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"system"})," - Command is expected to exist within the system's environment / user's shell."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"unknown"})," - When not configured or inferred."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {4}',children:"tasks:\n  env:\n    command: 'printenv'\n    platform: 'system'\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["This field exists because of our ",(0,t.jsx)(n.a,{href:"../concepts/toolchain",children:"toolchain"}),", and moon ensuring the correct\ncommand is ran."]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"preset",children:[(0,t.jsx)(n.code,{children:"preset"}),(0,t.jsx)(a.A,{version:"1.28.0"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskConfig#preset"}),"\n",(0,t.jsx)(n.p,{children:"Applies the chosen preset to the task. A preset defines a collection of task options that will be\ninherited as the default, and can then be overridden within the task itself. The following presets\nare available:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"server"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#cache",children:(0,t.jsx)(n.code,{children:"cache"})})," -> Turned off"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#outputstyle",children:(0,t.jsx)(n.code,{children:"outputStyle"})}),' -> Set to "stream"']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#persistent",children:(0,t.jsx)(n.code,{children:"persistent"})})," -> Turned on"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#runinci",children:(0,t.jsx)(n.code,{children:"runInCI"})})," -> Turned off"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"watcher"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Inherits ",(0,t.jsx)(n.code,{children:"server"})," options"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#interactive",children:(0,t.jsx)(n.code,{children:"interactive"})})," -> Turned on"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:['Tasks named "dev", "start", or "serve" are marked as ',(0,t.jsx)(n.code,{children:"server"})," automatically."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {5}',children:"tasks:\n  dev:\n    command: 'webpack server'\n    preset: 'server'\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"script",children:[(0,t.jsx)(n.code,{children:"script"}),(0,t.jsx)(a.A,{version:"1.27.0"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskConfig#script"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"script"})," field is ",(0,t.jsx)(n.em,{children:"one or many"})," commands to execute for the task, with support for pipes,\nredirects, and more. This field does ",(0,t.jsx)(n.em,{children:"not"})," support task inheritance merging, and can only be defined\nwith a string."]}),"\n",(0,t.jsxs)(n.p,{children:["If defined, will supersede ",(0,t.jsx)(n.a,{href:"#command",children:(0,t.jsx)(n.code,{children:"command"})})," and ",(0,t.jsx)(n.a,{href:"#args",children:(0,t.jsx)(n.code,{children:"args"})}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {4,6,8,10}',children:"tasks:\n  exec:\n    # Single command\n    script: 'cp ./in ./out'\n    # Multiple commands\n    script: 'rm -rf ./out && cp ./in ./out'\n    # Pipes\n    script: 'ps aux | grep 3000'\n    # Redirects\n    script: './gen.sh > out.json'\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["If you need to support merging during task inheritance, use ",(0,t.jsx)(n.a,{href:"#command",children:(0,t.jsx)(n.code,{children:"command"})})," instead. Learn\nmore about ",(0,t.jsx)(n.a,{href:"../concepts/task#commands-vs-scripts",children:"commands vs scripts"}),"."]})}),"\n",(0,t.jsxs)(n.h3,{id:"toolchain",children:[(0,t.jsx)(n.code,{children:"toolchain"}),(0,t.jsx)(a.A,{version:"1.31.0"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskConfig#toolchain"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"toolchain"})," field defines the ",(0,t.jsx)(n.a,{href:"../concepts/toolchain",children:"toolchain (language runtime)"})," the command\nruns on, where to locate its executable, and which tool to execute it with. By default, moon will\nset to a value based on the project's ",(0,t.jsx)(n.a,{href:"#language",children:(0,t.jsx)(n.code,{children:"language"})})," or default\n",(0,t.jsx)(n.a,{href:"#toolchain-1",children:(0,t.jsx)(n.code,{children:"toolchain.default"})}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"bun"})," - Command is a binary within ",(0,t.jsx)(n.code,{children:"node_modules"})," and will be executed with Bun.","\n",(0,t.jsx)(a.A,{version:"1.17.0"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"deno"})," - Command is executed with Deno, or is a Deno binary located in ",(0,t.jsx)(n.code,{children:"~/.deno/bin"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"node"})," - Command is a binary within ",(0,t.jsx)(n.code,{children:"node_modules"})," and will be executed with Node.js."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"rust"})," - Command is executed with Cargo, or is a Cargo binary located in ",(0,t.jsx)(n.code,{children:"~/.cargo/bin"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"system"})," - Command is expected to exist within the system's environment / user's shell."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {4}',children:"tasks:\n  env:\n    command: 'printenv'\n    toolchain: 'system'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"options",children:(0,t.jsx)(n.code,{children:"options"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskConfig#options"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"options"})," field is an object of configurable options that can be used to modify the task and its\nexecution. The following fields can be provided, with merge related fields supporting all\n",(0,t.jsx)(n.a,{href:"../concepts/task-inheritance#merge-strategies",children:"merge strategies"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"tasks:\n  typecheck:\n    command: 'tsc --noEmit'\n    options:\n      mergeArgs: 'replace'\n      runFromWorkspaceRoot: true\n"})}),"\n",(0,t.jsx)(n.h4,{id:"affectedfiles",children:(0,t.jsx)(n.code,{children:"affectedFiles"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#affectedFiles"}),"\n",(0,t.jsxs)(n.p,{children:["When enabled and the ",(0,t.jsxs)(n.a,{href:"../run-task#running-based-on-affected-files-only",children:[(0,t.jsx)(n.code,{children:"--affected"})," option"]})," is\nprovided, all affected files that match this task's ",(0,t.jsx)(n.a,{href:"#inputs",children:(0,t.jsx)(n.code,{children:"inputs"})})," will be passed as relative\nfile paths as command line arguments, and as a ",(0,t.jsx)(n.code,{children:"MOON_AFFECTED_FILES"})," environment variable."]}),"\n",(0,t.jsxs)(n.p,{children:["If there are no affected files, ",(0,t.jsx)(n.code,{children:"."})," (current directory) will be passed instead for arguments, and an\nempty value for the environment variable. This functionality can be changed with the\n",(0,t.jsx)(n.a,{href:"#affectedpassinputs",children:(0,t.jsx)(n.code,{children:"affectedPassInputs"})})," setting."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {5,7,9}',children:"tasks:\n  lint:\n    command: 'eslint'\n    options:\n      affectedFiles: true\n      # Only pass args\n      affectedFiles: 'args'\n      # Only set env var\n      affectedFiles: 'env'\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsxs)(n.p,{children:["When using this option, ensure that explicit files or ",(0,t.jsx)(n.code,{children:"."})," ",(0,t.jsx)(n.em,{children:"are not present"})," in the ",(0,t.jsx)(n.a,{href:"#args",children:(0,t.jsx)(n.code,{children:"args"})}),"\nlist. Furthermore, this functionality will only work if the task's command supports an arbitrary\nlist of files being passed as arguments."]})}),"\n",(0,t.jsxs)(n.h4,{id:"affectedpassinputs",children:[(0,t.jsx)(n.code,{children:"affectedPassInputs"}),(0,t.jsx)(a.A,{version:"1.22.0"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#affectedPassInputs"}),"\n",(0,t.jsxs)(n.p,{children:["When ",(0,t.jsx)(n.a,{href:"#affectedfiles",children:(0,t.jsx)(n.code,{children:"affectedFiles"})})," is enabled, and no affected files are found, moon will pass\n",(0,t.jsx)(n.code,{children:"."})," as an argument. For the most part, this works, but if you'd like to ",(0,t.jsx)(n.em,{children:"not"})," pass the entire\ndirectory (and everything in it), and only pass the configured ",(0,t.jsx)(n.a,{href:"#inputs",children:(0,t.jsx)(n.code,{children:"inputs"})})," instead, then you\ncan enable this setting."]}),"\n",(0,t.jsx)(n.p,{children:"When enabled, moon will resolve all input globs to literal file paths, and pass them as relative\narguments."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {5,6}',children:"tasks:\n  lint:\n    command: 'eslint'\n    options:\n      affectedFiles: true\n      affectedPassInputs: true\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"allowfailure",children:[(0,t.jsx)(n.code,{children:"allowFailure"}),(0,t.jsx)(a.A,{version:"1.13.0"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#allowFailure"}),"\n",(0,t.jsx)(n.p,{children:"Allows a task to fail without failing the entire pipeline. When enabled, the following changes\noccur:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Other tasks ",(0,t.jsx)(n.em,{children:"cannot"})," depend on this task, as we can't ensure it's side-effect free."]}),"\n",(0,t.jsxs)(n.li,{children:["For ",(0,t.jsx)(n.a,{href:"../commands/run",children:(0,t.jsx)(n.code,{children:"moon run"})}),", the process will not bail early and will run to completion."]}),"\n",(0,t.jsxs)(n.li,{children:["For ",(0,t.jsx)(n.a,{href:"../commands/ci",children:(0,t.jsx)(n.code,{children:"moon ci"})}),", the process will not exit with a non-zero exit code, if the only\nfailing tasks are allowed to fail."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {5}',children:"tasks:\n  lint:\n    command: 'eslint'\n    options:\n      allowFailure: true\n"})}),"\n",(0,t.jsx)(n.h4,{id:"cache",children:(0,t.jsx)(n.code,{children:"cache"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#cache"}),"\n",(0,t.jsxs)(n.p,{children:["Whether to cache the task's execution result using our ",(0,t.jsx)(n.a,{href:"../concepts/cache#hashing",children:"smart hashing"}),"\nsystem. If disabled, ",(0,t.jsx)(n.em,{children:"will not"})," create a cache hash, and ",(0,t.jsx)(n.em,{children:"will not"})," persist a task's\n",(0,t.jsx)(n.a,{href:"#outputs",children:"outputs"}),". Defaults to ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"We suggest disabling caching when defining cleanup tasks, one-off scripts, or file system heavy\noperations."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {5}',children:"tasks:\n  clean:\n    command: 'rm -rf ./temp'\n    options:\n      cache: false\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"cachekey",children:[(0,t.jsx)(n.code,{children:"cacheKey"}),(0,t.jsx)(a.A,{version:"1.35.0"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#cacheKey"}),"\n",(0,t.jsx)(n.p,{children:"A custom key to include in the cache and task hashing process. Can be used to invalidate local and\nremote caches."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {5}',children:"tasks:\n  build:\n    command: 'some-costly-build'\n    options:\n      cacheKey: 'v1'\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"cachelifetime",children:[(0,t.jsx)(n.code,{children:"cacheLifetime"}),(0,t.jsx)(a.A,{version:"1.29.0"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#cacheLifetime"}),"\n",(0,t.jsxs)(n.p,{children:["The lifetime in which a ",(0,t.jsx)(n.a,{href:"#cache",children:"cached task"})," will live before being marked as stale and re-running.\nThis applies to a task even if it does not produce ",(0,t.jsx)(n.a,{href:"#outputs",children:"outputs"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["The lifetime can be configured in a human-readable string format, for example, ",(0,t.jsx)(n.code,{children:"1 day"}),", ",(0,t.jsx)(n.code,{children:"3 hr"}),",\n",(0,t.jsx)(n.code,{children:"1m"}),", etc. If the lifetime is not defined, the cache will live forever, or until the task inputs are\ntouched."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {5}',children:"tasks:\n  build:\n    command: 'some-costly-build'\n    options:\n      cacheLifetime: '1 day'\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["String formats are powered by the\n",(0,t.jsx)(n.a,{href:"https://docs.rs/humantime/2.1.0/humantime/fn.parse_duration.html",children:"humantime"})," crate."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"envfile",children:(0,t.jsx)(n.code,{children:"envFile"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#envFile"}),"\n",(0,t.jsxs)(n.p,{children:["A boolean or path to a ",(0,t.jsx)(n.code,{children:".env"})," file (also know as dotenv file) that defines a collection of\n",(0,t.jsx)(n.a,{href:"#env-1",children:"environment variables"})," for the current task. Variables will be loaded on project creation,\nbut will ",(0,t.jsx)(n.em,{children:"not"})," override those defined in ",(0,t.jsx)(n.a,{href:"#env-1",children:(0,t.jsx)(n.code,{children:"env"})}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Variables defined in the file support value substitution/expansion by wrapping the variable name in\ncurly brackets, such as ",(0,t.jsx)(n.code,{children:"${VAR_NAME}"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {6,8,10}',children:"tasks:\n  build:\n    command: 'webpack'\n    options:\n      # Defaults to .env\n      envFile: true\n      # Or\n      envFile: '.env.production'\n      # Or from the workspace root\n      envFile: '/.env.shared'\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Additionally, a list of file paths can also be provided. When using a list, the order of the files\nis important, as environment variables from all files will be aggregated into a single map, with\nsubsequent files taking precedence over previous ones. Once aggregated, the variables will be passed\nto the task, but will ",(0,t.jsx)(n.em,{children:"not"})," override those defined in ",(0,t.jsx)(n.a,{href:"#env-1",children:(0,t.jsx)(n.code,{children:"env"})}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {5-7}',children:"tasks:\n  build:\n    command: 'webpack'\n    options:\n      envFile:\n        - '.env'\n        - '.env.production'\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsxs)(n.p,{children:["File parsing is done using the Rust ",(0,t.jsx)(n.a,{href:"https://crates.io/crates/dotenvy",children:(0,t.jsx)(n.code,{children:"dotenvy"})})," crate, which is\n",(0,t.jsx)(n.em,{children:"different"})," than the Node.js ",(0,t.jsx)(n.a,{href:"https://www.npmjs.com/package/dotenv",children:(0,t.jsx)(n.code,{children:"dotenv"})})," package. The biggest\ndifferences are around quote handling and variable substitution, so be aware of this!"]})}),"\n",(0,t.jsxs)(n.h4,{id:"inferinputs",children:[(0,t.jsx)(n.code,{children:"inferInputs"}),(0,t.jsx)(a.A,{version:"1.31.0"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#inferInputs"}),"\n",(0,t.jsxs)(n.p,{children:["Automatically infer ",(0,t.jsx)(n.a,{href:"#inputs",children:"inputs"})," based on the following parameters configured within the task's\n",(0,t.jsx)(n.code,{children:"command"}),", ",(0,t.jsx)(n.code,{children:"script"}),", ",(0,t.jsx)(n.code,{children:"args"}),", or ",(0,t.jsx)(n.code,{children:"env"}),". Defaults to ",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["File/glob paths derived from ",(0,t.jsx)(n.a,{href:"../concepts/token#file-groups",children:"file group based token functions"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Environment variables being substituted within a command or script."}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {5}',children:"tasks:\n  build:\n    # ...\n    options:\n      inferInputs: false\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"internal",children:[(0,t.jsx)(n.code,{children:"internal"}),(0,t.jsx)(a.A,{version:"1.23.0"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#internal"}),"\n",(0,t.jsxs)(n.p,{children:["Marks the task as internal only. ",(0,t.jsx)(n.a,{href:"../concepts/task#internal-only",children:"Internal tasks"})," can not be\nexplicitly ran on the command line, but can be depended on by other tasks."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {5}',children:"tasks:\n  prepare:\n    # ...\n    options:\n      internal: true\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"interactive",children:[(0,t.jsx)(n.code,{children:"interactive"}),(0,t.jsx)(a.A,{version:"1.12.0"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#interactive"}),"\n",(0,t.jsxs)(n.p,{children:["Marks the task as interactive. ",(0,t.jsx)(n.a,{href:"../concepts/task#interactive",children:"Interactive tasks"})," run in isolation so\nthat they can interact with stdin."]}),"\n",(0,t.jsxs)(n.p,{children:["This setting also disables caching, turns of CI, and other functionality, similar to the\n",(0,t.jsx)(n.a,{href:"#local",children:(0,t.jsx)(n.code,{children:"local"})})," setting."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {5}',children:"tasks:\n  init:\n    # ...\n    options:\n      interactive: true\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"merge",children:[(0,t.jsx)(n.code,{children:"merge"}),(0,t.jsx)(a.A,{version:"1.29.0"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#merge"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"../concepts/task-inheritance#merge-strategies",children:"strategy"})," to use when merging ",(0,t.jsx)(n.a,{href:"#args",children:(0,t.jsx)(n.code,{children:"args"})}),",\n",(0,t.jsx)(n.a,{href:"#deps",children:(0,t.jsx)(n.code,{children:"deps"})}),", ",(0,t.jsx)(n.a,{href:"#env-1",children:(0,t.jsx)(n.code,{children:"env"})}),", ",(0,t.jsx)(n.a,{href:"#inputs",children:(0,t.jsx)(n.code,{children:"inputs"})}),", and ",(0,t.jsx)(n.a,{href:"#outputs",children:(0,t.jsx)(n.code,{children:"outputs"})})," with an inherited\ntask. This option can be overridden with the field specific merge options below."]}),"\n",(0,t.jsx)(n.h4,{id:"mergeargs",children:(0,t.jsx)(n.code,{children:"mergeArgs"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#mergeArgs"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"../concepts/task-inheritance#merge-strategies",children:"strategy"})," to use when merging the\n",(0,t.jsx)(n.a,{href:"#args",children:(0,t.jsx)(n.code,{children:"args"})}),' list with an inherited task. Defaults to "append".']}),"\n",(0,t.jsx)(n.h4,{id:"mergedeps",children:(0,t.jsx)(n.code,{children:"mergeDeps"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#mergeDeps"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"../concepts/task-inheritance#merge-strategies",children:"strategy"})," to use when merging the\n",(0,t.jsx)(n.a,{href:"#deps",children:(0,t.jsx)(n.code,{children:"deps"})}),' list with an inherited task. Defaults to "append".']}),"\n",(0,t.jsx)(n.h4,{id:"mergeenv",children:(0,t.jsx)(n.code,{children:"mergeEnv"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#mergeEnv"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"../concepts/task-inheritance#merge-strategies",children:"strategy"})," to use when merging the\n",(0,t.jsx)(n.a,{href:"#env-1",children:(0,t.jsx)(n.code,{children:"env"})}),' map with an inherited task. Defaults to "append".']}),"\n",(0,t.jsx)(n.h4,{id:"mergeinputs",children:(0,t.jsx)(n.code,{children:"mergeInputs"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#mergeInputs"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"../concepts/task-inheritance#merge-strategies",children:"strategy"})," to use when merging the\n",(0,t.jsx)(n.a,{href:"#inputs",children:(0,t.jsx)(n.code,{children:"inputs"})}),' list with an inherited task. Defaults to "append".']}),"\n",(0,t.jsx)(n.h4,{id:"mergeoutputs",children:(0,t.jsx)(n.code,{children:"mergeOutputs"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#mergeOutputs"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"../concepts/task-inheritance#merge-strategies",children:"strategy"})," to use when merging the\n",(0,t.jsx)(n.a,{href:"#outputs",children:(0,t.jsx)(n.code,{children:"outputs"})}),' list with an inherited task. Defaults to "append".']}),"\n",(0,t.jsxs)(n.h4,{id:"mutex",children:[(0,t.jsx)(n.code,{children:"mutex"}),(0,t.jsx)(a.A,{version:"1.24.0"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#mutex"}),"\n",(0,t.jsx)(n.p,{children:'Creates an exclusive lock on a "virtual resource", preventing other tasks using the same "virtual\nresource" from running concurrently.'}),"\n",(0,t.jsxs)(n.p,{children:["If you have many tasks that require exclusive access to a resource that can't be tracked by moon\n(like a database, an ignored file, a file that's not part of the project, or a remote resource) you\ncan use the ",(0,t.jsx)(n.code,{children:"mutex"})," option to prevent them from running at the same time."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {5,10}',children:"tasks:\n  a:\n    # ...\n    options:\n      mutex: 'virtual_resource_name'\n\n  # b doesn't necessarily have to be in the same project\n  b:\n    # ...\n    options:\n      mutex: 'virtual_resource_name'\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"os",children:[(0,t.jsx)(n.code,{children:"os"}),(0,t.jsx)(a.A,{version:"1.28.0"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#os"}),"\n",(0,t.jsxs)(n.p,{children:["When defined, the task will ",(0,t.jsx)(n.em,{children:"only"})," run on the configured operating system. For other operating\nsystems, the task becomes a no-operation. Supports the values ",(0,t.jsx)(n.code,{children:"linux"}),", ",(0,t.jsx)(n.code,{children:"macos"}),", and ",(0,t.jsx)(n.code,{children:"windows"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Can be defined as a single value, or a list of values."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {5,10}',children:"tasks:\n  build-unix:\n    # ...\n    options:\n      os: ['linux', 'macos']\n\n  build-windows:\n    # ...\n    options:\n      os: 'windows'\n"})}),"\n",(0,t.jsx)(n.h4,{id:"outputstyle",children:(0,t.jsx)(n.code,{children:"outputStyle"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#outputStyle"}),"\n",(0,t.jsxs)(n.p,{children:["Controls how stdout/stderr is displayed when the task is ran as a ",(0,t.jsx)(n.em,{children:"transitive target"}),". By default,\nthis setting is not defined and defers to the action pipeline, but can be overridden with one of the\nfollowing values:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"buffer"})," - Buffers output and displays after the task has exited (either success or failure)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"buffer-only-failure"})," - Like ",(0,t.jsx)(n.code,{children:"buffer"}),", but only displays on failures."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"hash"})," - Ignores output and only displays the generated ",(0,t.jsx)(n.a,{href:"../concepts/cache#hashing",children:"hash"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"none"})," - Ignores output."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"stream"})," - Streams output directly to the terminal. Will prefix each line of output with the\ntarget."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {5}',children:"tasks:\n  test:\n    # ...\n    options:\n      outputStyle: 'stream'\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"persistent",children:[(0,t.jsx)(n.code,{children:"persistent"}),(0,t.jsx)(a.A,{version:"1.6.0"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#persistent"}),"\n",(0,t.jsxs)(n.p,{children:["Marks the task as persistent (continuously running). ",(0,t.jsx)(n.a,{href:"../concepts/task#persistent",children:"Persistent tasks"}),"\nare handled differently than non-persistent tasks in the action graph. When running a target, all\npersistent tasks are ",(0,t.jsx)(n.em,{children:"ran last"})," and ",(0,t.jsx)(n.em,{children:"in parallel"}),", after all their dependencies have completed."]}),"\n",(0,t.jsx)(n.p,{children:"This is extremely useful for running a server (or a watcher) in the background while other tasks are\nrunning."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {5}',children:"tasks:\n  dev:\n    # ...\n    options:\n      persistent: true\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["We suggest using the ",(0,t.jsx)(n.a,{href:"#local",children:(0,t.jsx)(n.code,{children:"local"})})," setting instead, which enables this setting, amongst other\nuseful settings."]}),"\n"]}),"\n",(0,t.jsxs)(n.h4,{id:"priority",children:[(0,t.jsx)(n.code,{children:"priority"}),(0,t.jsx)(a.A,{version:"1.35.0"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#priority"}),"\n",(0,t.jsx)(n.p,{children:"The priority level determines the position of the task within the action pipeline queue. A task with\na higher priority will run sooner rather than later, while still respecting the topological order.\nSupports the following levels:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"critical"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"high"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"normal"})," (default)"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"low"})}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {5}',children:"tasks:\n  build:\n    # ...\n    options:\n      priority: 'high'\n"})}),"\n",(0,t.jsx)(n.h4,{id:"retrycount",children:(0,t.jsx)(n.code,{children:"retryCount"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#retryCount"}),"\n",(0,t.jsxs)(n.p,{children:["The number of attempts the task will retry execution before returning a failure. This is especially\nuseful for flaky tasks. Defaults to ",(0,t.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {5}',children:"tasks:\n  test:\n    # ...\n    options:\n      retryCount: 3\n"})}),"\n",(0,t.jsx)(n.h4,{id:"rundepsinparallel",children:(0,t.jsx)(n.code,{children:"runDepsInParallel"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#runDepsInParallel"}),"\n",(0,t.jsxs)(n.p,{children:["Whether to run the task's direct ",(0,t.jsx)(n.a,{href:"#deps",children:(0,t.jsx)(n.code,{children:"deps"})})," in parallel or serial (in order). Defaults to\n",(0,t.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["When disabled, this ",(0,t.jsx)(n.em,{children:"does not"})," run dependencies of dependencies in serial, only direct dependencies."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {8}',children:"tasks:\n  start:\n    # ...\n    deps:\n      - '~:clean'\n      - '~:build'\n    options:\n      runDepsInParallel: false\n"})}),"\n",(0,t.jsx)(n.h4,{id:"runinci",children:(0,t.jsx)(n.code,{children:"runInCI"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#runInCI"}),"\n",(0,t.jsxs)(n.p,{children:["Whether to run the task automatically in a CI (continuous integration) environment when affected by\ntouched files, typically through the ",(0,t.jsx)(n.a,{href:"../commands/ci",children:(0,t.jsx)(n.code,{children:"moon ci"})})," command. Supports the following\nvalues:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"always"})," - Always run in CI, regardless if affected or not. ",(0,t.jsx)(a.A,{version:"1.31.0"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"true"}),", ",(0,t.jsx)(n.code,{children:"affected"})," - Only run if affected by touched files."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"false"})," - Never run in CI."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Defaults to ",(0,t.jsx)(n.code,{children:"true"})," unless the ",(0,t.jsx)(n.a,{href:"#local",children:(0,t.jsx)(n.code,{children:"local"})})," setting is enabled."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {5}',children:"tasks:\n  build:\n    # ...\n    options:\n      runInCI: false\n"})}),"\n",(0,t.jsx)(n.h4,{id:"runfromworkspaceroot",children:(0,t.jsx)(n.code,{children:"runFromWorkspaceRoot"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#runFromWorkspaceRoot"}),"\n",(0,t.jsxs)(n.p,{children:["Whether to use the workspace root as the working directory when executing a task. Defaults to\n",(0,t.jsx)(n.code,{children:"false"})," and runs from the task's project root."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {5}',children:"tasks:\n  typecheck:\n    # ...\n    options:\n      runFromWorkspaceRoot: true\n"})}),"\n",(0,t.jsx)(n.h4,{id:"shell",children:(0,t.jsx)(n.code,{children:"shell"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#shell"}),"\n",(0,t.jsxs)(n.p,{children:["Whether to run the command within a shell or not. Defaults to ",(0,t.jsx)(n.code,{children:"true"})," for system toolchain or\nWindows, and ",(0,t.jsx)(n.code,{children:"false"})," otherwise. The shell to run is determined by the ",(0,t.jsx)(n.a,{href:"#unixshell",children:(0,t.jsx)(n.code,{children:"unixShell"})})," and\n",(0,t.jsx)(n.a,{href:"#windowsshell",children:(0,t.jsx)(n.code,{children:"windowsShell"})})," options respectively."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {5}',children:"tasks:\n  native:\n    command: 'echo $SHELL'\n    options:\n      shell: true\n"})}),"\n",(0,t.jsxs)(n.p,{children:["However, if you'd like to use a different shell, or customize the shell's arguments, or have\ngranular control, you can set ",(0,t.jsx)(n.code,{children:"shell"})," to false and configure a fully qualified command."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {5}',children:"tasks:\n  native:\n    command: '/bin/zsh -c \"echo $SHELL\"'\n    options:\n      shell: false\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"timeout",children:[(0,t.jsx)(n.code,{children:"timeout"}),(0,t.jsx)(a.A,{version:"1.26.0"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#timeout"}),"\n",(0,t.jsx)(n.p,{children:"The maximum time in seconds that the task is allowed to run, before it is force cancelled. If not\ndefined, will run indefinitely."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {5}',children:"tasks:\n  build:\n    # ...\n    options:\n      timeout: 120\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"unixshell",children:[(0,t.jsx)(n.code,{children:"unixShell"}),(0,t.jsx)(a.A,{version:"1.21.0"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#unixShell"}),"\n",(0,t.jsxs)(n.p,{children:["Customize the shell to run with when on a Unix operating system. Accepts ",(0,t.jsx)(n.code,{children:"bash"}),", ",(0,t.jsx)(n.code,{children:"elvish"}),", ",(0,t.jsx)(n.code,{children:"fish"}),",\n",(0,t.jsx)(n.code,{children:"ion"}),", ",(0,t.jsx)(n.code,{children:"murex"}),", ",(0,t.jsx)(n.code,{children:"nu"}),", ",(0,t.jsx)(n.code,{children:"pwsh"}),", ",(0,t.jsx)(n.code,{children:"xonsh"}),", or ",(0,t.jsx)(n.code,{children:"zsh"}),". If not defined, will derive the shell from the\n",(0,t.jsx)(n.code,{children:"SHELL"})," environment variable, or defaults to ",(0,t.jsx)(n.code,{children:"sh"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {5}',children:"tasks:\n  native:\n    command: 'echo $SHELL'\n    options:\n      unixShell: 'fish'\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"windowsshell",children:[(0,t.jsx)(n.code,{children:"windowsShell"}),(0,t.jsx)(a.A,{version:"1.21.0"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/TaskOptionsConfig#windowsShell"}),"\n",(0,t.jsxs)(n.p,{children:["Customize the shell to run with when on a Windows operating system. Accepts ",(0,t.jsx)(n.code,{children:"bash"})," (typically via\nGit), ",(0,t.jsx)(n.code,{children:"elvish"}),", ",(0,t.jsx)(n.code,{children:"fish"}),", ",(0,t.jsx)(n.code,{children:"murex"}),", ",(0,t.jsx)(n.code,{children:"nu"}),", ",(0,t.jsx)(n.code,{children:"pwsh"}),", or ",(0,t.jsx)(n.code,{children:"xonsh"}),". If not defined, defaults to ",(0,t.jsx)(n.code,{children:"pwsh"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {5}',children:"tasks:\n  native:\n    command: 'echo $SHELL'\n    options:\n      windowsShell: 'bash'\n"})}),"\n",(0,t.jsx)(n.h2,{id:"overrides",children:"Overrides"}),"\n",(0,t.jsx)(n.p,{children:"Dictates how a project interacts with settings defined at the top-level."}),"\n",(0,t.jsx)(n.h2,{id:"toolchain-1",children:(0,t.jsx)(n.code,{children:"toolchain"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectConfig#toolchain"}),"\n",(0,t.jsxs)(n.h3,{id:"default",children:[(0,t.jsx)(n.code,{children:"default"}),(0,t.jsx)(a.A,{version:"1.31.0"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectToolchainConfig#default"}),"\n",(0,t.jsxs)(n.p,{children:["The default ",(0,t.jsx)(n.a,{href:"#toolchain-1",children:(0,t.jsx)(n.code,{children:"toolchain"})})," for all task's within the current project. When a task's\n",(0,t.jsx)(n.code,{children:"toolchain"})," has ",(0,t.jsx)(n.em,{children:"not been"})," explicitly configured, the toolchain will fallback to this configured\nvalue, otherwise the toolchain will be detected from the project's environment."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"toolchain:\n  default: 'node'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"bun",children:(0,t.jsx)(n.code,{children:"bun"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectToolchainConfig#bun"}),"\n",(0,t.jsxs)(n.p,{children:["Configures Bun for this project and overrides the top-level ",(0,t.jsx)(n.a,{href:"./toolchain#bun",children:(0,t.jsx)(n.code,{children:"bun"})})," setting."]}),"\n",(0,t.jsx)(n.h4,{id:"version",children:(0,t.jsx)(n.code,{children:"version"})}),"\n",(0,t.jsxs)(n.p,{children:["Defines the explicit Bun ",(0,t.jsx)(n.a,{href:"../concepts/toolchain#version-specification",children:"version specification"})," to use\nwhen ",(0,t.jsx)(n.em,{children:"running tasks"})," for this project."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {2,3}',children:"toolchain:\n  bun:\n    version: '1.0.0'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"deno",children:(0,t.jsx)(n.code,{children:"deno"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectToolchainConfig#deno"}),"\n",(0,t.jsxs)(n.p,{children:["Configures Deno for this project and overrides the top-level ",(0,t.jsx)(n.a,{href:"./toolchain#deno",children:(0,t.jsx)(n.code,{children:"deno"})})," setting."]}),"\n",(0,t.jsx)(n.h4,{id:"version-1",children:(0,t.jsx)(n.code,{children:"version"})}),"\n",(0,t.jsxs)(n.p,{children:["Defines the explicit Deno ",(0,t.jsx)(n.a,{href:"../concepts/toolchain#version-specification",children:"version specification"})," to\nuse when ",(0,t.jsx)(n.em,{children:"running tasks"})," for this project."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {2,3}',children:"toolchain:\n  deno:\n    version: '1.40.0'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"node",children:(0,t.jsx)(n.code,{children:"node"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectToolchainConfig#node"}),"\n",(0,t.jsxs)(n.p,{children:["Configures Node.js for this project and overrides the top-level ",(0,t.jsx)(n.a,{href:"./toolchain#node",children:(0,t.jsx)(n.code,{children:"node"})})," setting.\nCurrently, only the Node.js version can be overridden per-project, not the package manager."]}),"\n",(0,t.jsx)(n.h4,{id:"version-2",children:(0,t.jsx)(n.code,{children:"version"})}),"\n",(0,t.jsxs)(n.p,{children:["Defines the explicit Node.js ",(0,t.jsx)(n.a,{href:"../concepts/toolchain#version-specification",children:"version specification"})," to\nuse when ",(0,t.jsx)(n.em,{children:"running tasks"})," for this project."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {2,3}',children:"toolchain:\n  node:\n    version: '12.12.0'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"python",children:(0,t.jsx)(n.code,{children:"python"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectToolchainConfig#python"}),"\n",(0,t.jsxs)(n.p,{children:["Configures Python for this project and overrides the top-level ",(0,t.jsx)(n.a,{href:"./toolchain#python",children:(0,t.jsx)(n.code,{children:"python"})}),"\nsetting."]}),"\n",(0,t.jsx)(n.h4,{id:"version-3",children:(0,t.jsx)(n.code,{children:"version"})}),"\n",(0,t.jsxs)(n.p,{children:["Defines the explicit Python\n",(0,t.jsx)(n.a,{href:"../concepts/toolchain#version-specification",children:"version/channel specification"})," to use when ",(0,t.jsx)(n.em,{children:"running\ntasks"})," for this project."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {2,3}',children:"toolchain:\n  python:\n    version: '3.12.0'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"rust",children:(0,t.jsx)(n.code,{children:"rust"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectToolchainConfig#rust"}),"\n",(0,t.jsxs)(n.p,{children:["Configures Rust for this project and overrides the top-level ",(0,t.jsx)(n.a,{href:"./toolchain#rust",children:(0,t.jsx)(n.code,{children:"rust"})})," setting."]}),"\n",(0,t.jsx)(n.h4,{id:"version-4",children:(0,t.jsx)(n.code,{children:"version"})}),"\n",(0,t.jsxs)(n.p,{children:["Defines the explicit Rust\n",(0,t.jsx)(n.a,{href:"../concepts/toolchain#version-specification",children:"version/channel specification"})," to use when ",(0,t.jsx)(n.em,{children:"running\ntasks"})," for this project."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {2,3}',children:"toolchain:\n  rust:\n    version: '1.68.0'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"typescript",children:(0,t.jsx)(n.code,{children:"typescript"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectToolchainConfig#typescript"}),"\n",(0,t.jsx)(n.h4,{id:"disabled",children:(0,t.jsx)(n.code,{children:"disabled"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectToolchainTypeScriptConfig#disabled"}),"\n",(0,t.jsxs)(n.p,{children:["Disables ",(0,t.jsx)(n.a,{href:"./toolchain#typescript",children:"TypeScript support"})," entirely for this project. Defaults to\n",(0,t.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {3}',children:"toolchain:\n  typescript:\n    disabled: true\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"includeprojectreferencesources",children:[(0,t.jsx)(n.code,{children:"includeProjectReferenceSources"}),(0,t.jsx)(a.A,{version:"1.17.0"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectToolchainTypeScriptConfig#includeProjectReferenceSources"}),"\n",(0,t.jsxs)(n.p,{children:["Overrides the workspace-level\n",(0,t.jsx)(n.a,{href:"./toolchain#includeprojectreferencesources",children:(0,t.jsx)(n.code,{children:"includeProjectReferenceSources"})})," setting. Defaults to\nundefined."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {3}',children:"toolchain:\n  typescript:\n    includeProjectReferenceSources: false\n"})}),"\n",(0,t.jsxs)(n.h4,{id:"includesharedtypes",children:[(0,t.jsx)(n.code,{children:"includeSharedTypes"}),(0,t.jsx)(a.A,{version:"1.17.0"})]}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectToolchainTypeScriptConfig#includeSharedTypes"}),"\n",(0,t.jsxs)(n.p,{children:["Overrides the workspace-level ",(0,t.jsx)(n.a,{href:"./toolchain#includesharedtypes",children:(0,t.jsx)(n.code,{children:"includeSharedTypes"})})," setting.\nDefaults to undefined."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {3}',children:"toolchain:\n  typescript:\n    includeSharedTypes: false\n"})}),"\n",(0,t.jsx)(n.h4,{id:"routeoutdirtocache",children:(0,t.jsx)(n.code,{children:"routeOutDirToCache"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectToolchainTypeScriptConfig#routeOutDirToCache"}),"\n",(0,t.jsxs)(n.p,{children:["Overrides the workspace-level ",(0,t.jsx)(n.a,{href:"./toolchain#routeoutdirtocache",children:(0,t.jsx)(n.code,{children:"routeOutDirToCache"})})," setting.\nDefaults to undefined."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {3}',children:"toolchain:\n  typescript:\n    routeOutDirToCache: false\n"})}),"\n",(0,t.jsx)(n.h4,{id:"syncprojectreferences",children:(0,t.jsx)(n.code,{children:"syncProjectReferences"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectToolchainTypeScriptConfig#syncProjectReferences"}),"\n",(0,t.jsxs)(n.p,{children:["Overrides the workspace-level ",(0,t.jsx)(n.a,{href:"./toolchain#syncprojectreferences",children:(0,t.jsx)(n.code,{children:"syncProjectReferences"})})," setting.\nDefaults to undefined."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {3}',children:"toolchain:\n  typescript:\n    syncProjectReferences: false\n"})}),"\n",(0,t.jsx)(n.h4,{id:"syncprojectreferencestopaths",children:(0,t.jsx)(n.code,{children:"syncProjectReferencesToPaths"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectToolchainTypeScriptConfig#syncProjectReferencesToPaths"}),"\n",(0,t.jsxs)(n.p,{children:["Overrides the workspace-level\n",(0,t.jsx)(n.a,{href:"./toolchain#syncprojectreferencestopaths",children:(0,t.jsx)(n.code,{children:"syncProjectReferencesToPaths"})})," setting. Defaults to\nundefined."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {3}',children:"toolchain:\n  typescript:\n    syncProjectReferencesToPaths: false\n"})}),"\n",(0,t.jsx)(n.h2,{id:"workspace",children:(0,t.jsx)(n.code,{children:"workspace"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectConfig#workspace"}),"\n",(0,t.jsx)(n.h3,{id:"inheritedtasks",children:(0,t.jsx)(n.code,{children:"inheritedTasks"})}),"\n",(0,t.jsx)(o.A,{to:"/api/types/interface/ProjectWorkspaceConfig#inheritedTasks"}),"\n",(0,t.jsxs)(n.p,{children:["Provides a layer of control when inheriting tasks from ",(0,t.jsx)(n.a,{href:"./tasks",children:(0,t.jsx)(n.code,{children:".moon/tasks.yml"})}),"."]}),"\n",(0,t.jsx)(n.h4,{id:"exclude",children:(0,t.jsx)(n.code,{children:"exclude"})}),"\n",(0,t.jsxs)(n.p,{children:["The optional ",(0,t.jsx)(n.code,{children:"exclude"})," setting permits a project to exclude specific tasks from being inherited. It\naccepts a list of strings, where each string is the name of a global task to exclude."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {4}',children:"workspace:\n  inheritedTasks:\n    # Exclude the inherited `test` task for this project\n    exclude: ['test']\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Exclusion is applied after inclusion and before renaming."}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"include-1",children:(0,t.jsx)(n.code,{children:"include"})}),"\n",(0,t.jsxs)(n.p,{children:["The optional ",(0,t.jsx)(n.code,{children:"include"})," setting permits a project to ",(0,t.jsx)(n.em,{children:"only"})," include specific inherited tasks (works\nlike an allow/white list). It accepts a list of strings, where each string is the name of a global\ntask to include."]}),"\n",(0,t.jsx)(n.p,{children:"When this field is not defined, the project will inherit all tasks from the global project config."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {4,7-9}',children:"workspace:\n  inheritedTasks:\n    # Include *no* tasks (works like a full exclude)\n    include: []\n\n    # Only include the `lint` and `test` tasks for this project\n    include:\n      - 'lint'\n      - 'test'\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Inclusion is applied before exclusion and renaming."}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"rename",children:(0,t.jsx)(n.code,{children:"rename"})}),"\n",(0,t.jsxs)(n.p,{children:["The optional ",(0,t.jsx)(n.code,{children:"rename"})," setting permits a project to rename the inherited task within the current\nproject. It accepts a map of strings, where the key is the original name (found in the global\nproject config), and the value is the new name to use."]}),"\n",(0,t.jsxs)(n.p,{children:["For example, say we have 2 tasks in the global project config called ",(0,t.jsx)(n.code,{children:"buildPackage"})," and\n",(0,t.jsx)(n.code,{children:"buildApplication"}),", but we only need 1, and since we're an application, we should omit and rename."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml" {4,5}',children:"workspace:\n  inheritedTasks:\n    exclude: ['buildPackage']\n    rename:\n      buildApplication: 'build'\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:"Renaming occurs after inclusion and exclusion."}),"\n"]})]})}function x(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(j,{...e})}):j(e)}},15868:(e,n,s)=>{s.d(n,{A:()=>r});var i=s(65162),t=s(62540);function r(e){let{header:n,inline:s,updated:r,version:o}=e;return(0,t.jsx)(i.A,{text:`v${o}`,variant:r?"success":"info",className:n?"absolute right-0 top-1.5":s?"inline-block ml-1":"ml-2"})}},25648:(e,n,s)=>{function i(e){let{to:n}=e;return null}s.d(n,{A:()=>i})},43023:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var i=s(63696);const t={},r=i.createContext(t);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:n},e.children)}},65162:(e,n,s)=>{s.d(n,{A:()=>l});var i=s(11750),t=s(74599),r=s(62540);const o={failure:"bg-red-100 text-red-900",info:"bg-pink-100 text-pink-900",success:"bg-green-100 text-green-900",warning:"bg-orange-100 text-orange-900"};function l(e){let{className:n,icon:s,text:l,variant:a}=e;return(0,r.jsxs)("span",{className:(0,i.A)("inline-flex items-center px-1 py-0.5 rounded text-xs font-bold uppercase",a?o[a]:"bg-gray-100 text-gray-800",n),children:[s&&(0,r.jsx)(t.A,{icon:s,className:"mr-1"}),l]})}},99799:(e,n,s)=>{s.d(n,{A:()=>r});var i=s(65162),t=s(62540);function r(e){let{text:n="Required"}=e;return(0,t.jsx)(i.A,{text:n,variant:"failure",className:"ml-2"})}}}]);