"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[36084],{15868:(e,n,t)=>{t.d(n,{A:()=>o});var a=t(65162),s=t(62540);function o(e){let{header:n,inline:t,updated:o,version:r}=e;return(0,s.jsx)(a.A,{text:`v${r}`,variant:o?"success":"info",className:n?"absolute right-0 top-1.5":t?"inline-block ml-1":"ml-2"})}},65162:(e,n,t)=>{t.d(n,{A:()=>i});var a=t(11750),s=t(74599),o=t(62540);const r={failure:"bg-red-100 text-red-900",info:"bg-pink-100 text-pink-900",success:"bg-green-100 text-green-900",warning:"bg-orange-100 text-orange-900"};function i(e){let{className:n,icon:t,text:i,variant:c}=e;return(0,o.jsxs)("span",{className:(0,a.A)("inline-flex items-center px-1 py-0.5 rounded text-xs font-bold uppercase",c?r[c]:"bg-gray-100 text-gray-800",n),children:[t&&(0,o.jsx)(s.A,{icon:t,className:"mr-1"}),i]})}},79035:(e,n,t)=>{t.d(n,{D:()=>r});var a=t(60359),s=t(51571),o=t.n(s);function r(e,n){return(0,a.A)({container:e,elements:n,layout:{fit:!0,name:"dagre",nodeDimensionsIncludeLabels:!0,spacingFactor:1},style:[{selector:"edges",style:{"arrow-scale":2,color:"#e4f7fb","curve-style":"straight","font-size":12,label:"data(label)","line-cap":"round","line-color":"#c9eef6","line-opacity":.25,"overlay-color":"#c9eef6","target-arrow-color":"#c9eef6","target-arrow-shape":"chevron","text-opacity":.6,width:3}},{selector:"node",style:{"background-fill":"linear-gradient","background-gradient-direction":"to-bottom-right","background-gradient-stop-colors":"#d7dfe9 #bdc9db #97a1af",color:"#fff",height:60,label:"data(label)","overlay-color":"#99aab7","overlay-shape":"ellipse",padding:"0",shape:"ellipse","text-halign":"center","text-margin-y":6,"text-valign":"bottom","underlay-shape":"ellipse",width:60}},{selector:'node[type="run-task"]',style:{"background-gradient-stop-colors":"#6e58d1 #4a2ec6 #3b259e"}},{selector:'node[type="run-target"]',style:{"background-gradient-stop-colors":"#6e58d1 #4a2ec6 #3b259e"}},{selector:'node[type="sync-project"]',style:{"background-gradient-stop-colors":"#ffafff #ff79ff #cc61cc",height:80,width:80}},{selector:'node[type="install-dependencies"]',style:{"background-gradient-stop-colors":"#afe6f2 #79d5e9 #61aaba",height:90,width:90}},{selector:'node[type="setup-environment"]',style:{"background-gradient-stop-colors":"#c9e166 #b7d733 #a5cd00",height:90,width:90}},{selector:'node[type="setup-toolchain"]',style:{"background-gradient-stop-colors":"#ff9da6 #ff5b6b #cc4956",height:100,width:100}},{selector:'node[type="setup-proto"]',style:{"background-gradient-stop-colors":"#ffafff #ff79ff #cc61cc",height:110,width:110}},{selector:'node[id="sync-workspace"]',style:{"background-gradient-stop-colors":"#b7a9f9 #9a87f7 #8c75f5",height:120,width:120}}]})}a.A.use(o())},99902:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>p,default:()=>f,frontMatter:()=>d,metadata:()=>a,toc:()=>u});const a=JSON.parse('{"id":"how-it-works/action-graph","title":"Action graph","description":"When you run a task on the command line, we generate an action graph to","source":"@site/docs/how-it-works/action-graph.mdx","sourceDirName":"how-it-works","slug":"/how-it-works/action-graph","permalink":"/docs/how-it-works/action-graph","draft":false,"unlisted":false,"editUrl":"https://github.com/moonrepo/moon/tree/master/website/docs/how-it-works/action-graph.mdx","tags":[],"version":"current","frontMatter":{"title":"Action graph"},"sidebar":"docs","previous":{"title":"Task graph","permalink":"/docs/how-it-works/task-graph"},"next":{"title":"Setup workspace","permalink":"/docs/setup-workspace"}}');var s=t(62540),o=t(43023),r=t(63696),i=t(79035);function c(){const e=(0,r.useRef)(null);return(0,r.useEffect)((()=>{e.current&&(0,i.D)(e.current,{edges:[{data:{source:"node-toolchain",target:"setup-proto"}},{data:{source:"node-env",target:"node-toolchain"}},{data:{source:"node-deps",target:"node-env"}},{data:{source:"sync-project",target:"sync-workspace"}},{data:{source:"sync-project",target:"sync-workspace"}},{data:{source:"target-clean",target:"sync-project"}},{data:{source:"target-build",target:"sync-project"}},{data:{source:"target-build",target:"node-deps"}},{data:{source:"target-build",target:"target-clean"}},{data:{source:"target-package",target:"target-build"}},{data:{source:"target-package",target:"node-deps"}},{data:{source:"target-package",target:"sync-project"}},{data:{source:"node-toolchain",target:"setup-proto"}},{data:{source:"setup-proto",target:"sync-workspace"}}],nodes:[{data:{id:"sync-workspace",label:"SyncWorkspace",type:"sync-workspace"}},{data:{id:"setup-proto",label:"SetupProto",type:"setup-proto"}},{data:{id:"node-toolchain",label:"SetupToolchain(node:18.0.0)",type:"setup-toolchain"}},{data:{id:"node-env",label:"SetupEnvironment(node)",type:"setup-environment"}},{data:{id:"node-deps",label:"InstallWorkspaceDeps(node)",type:"install-dependencies"}},{data:{id:"sync-project",label:"SyncProject(example)",type:"sync-project"}},{data:{id:"target-clean",label:"RunTask(example:clean)",type:"run-task"}},{data:{id:"target-build",label:"RunTask(example:build)",type:"run-task"}},{data:{id:"target-package",label:"RunTask(example:package)",type:"run-task"}}]})}),[]),(0,s.jsx)("div",{id:"dep-graph",ref:e,className:"p-1 mb-2 rounded bg-slate-800",style:{height:"550px",width:"100%"}})}var l=t(15868);const d={title:"Action graph"},p=void 0,h={},u=[{value:"Actions",id:"actions",level:2},{value:"Sync workspace",id:"sync-workspace",level:3},{value:"Setup toolchain",id:"setup-toolchain",level:3},{value:"Setup environment<VersionLabel></VersionLabel>",id:"setup-environment",level:3},{value:"Setup proto<VersionLabel></VersionLabel>",id:"setup-proto",level:3},{value:"Install dependencies",id:"install-dependencies",level:3},{value:"Sync project",id:"sync-project",level:3},{value:"Run task",id:"run-task",level:3},{value:"Run interactive task",id:"run-interactive-task",level:3},{value:"Run persistent task",id:"run-persistent-task",level:3},{value:"What is the graph used for?",id:"what-is-the-graph-used-for",level:2}];function g(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["When you run a ",(0,s.jsx)(n.a,{href:"../config/project#tasks-1",children:"task"})," on the command line, we generate an action graph to\nensure ",(0,s.jsx)(n.a,{href:"../config/project#deps",children:"dependencies"})," of tasks have ran before running run the primary task."]}),"\n",(0,s.jsxs)(n.p,{children:["The action graph is a representation of all ",(0,s.jsx)(n.a,{href:"../concepts/task",children:"tasks"}),", derived from the\n",(0,s.jsx)(n.a,{href:"./project-graph",children:"project graph"})," and ",(0,s.jsx)(n.a,{href:"./task-graph",children:"task graph"}),", and is also represented internally\nas a directed acyclic graph (DAG)."]}),"\n",(0,s.jsx)(c,{}),"\n",(0,s.jsx)(n.h2,{id:"actions",children:"Actions"}),"\n",(0,s.jsx)(n.p,{children:"Unlike other task runners in the industry that represent each node in the graph as a task to run, we\nrepresent each node in the graph as an action to perform. This allows us to be more flexible and\nefficient with how we run tasks, and allows us to provide more functionality and automation than\nother runners."}),"\n",(0,s.jsx)(n.p,{children:"The following actions compose our action graph:"}),"\n",(0,s.jsx)(n.h3,{id:"sync-workspace",children:"Sync workspace"}),"\n",(0,s.jsx)(n.p,{children:"This is a common action that always runs and give's moon a chance to perform operations and health\nchecks across the entire workspace."}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["This action can be skipped by disabling the\n",(0,s.jsx)(n.a,{href:"../config/workspace#syncworkspace",children:(0,s.jsx)(n.code,{children:"pipeline.syncWorkspace"})})," setting."]})}),"\n",(0,s.jsx)(n.h3,{id:"setup-toolchain",children:"Setup toolchain"}),"\n",(0,s.jsx)(n.p,{children:"The most important action in the graph is the setup toolchain action, which downloads and installs a\ntier 3 language into the toolchain. For other tiers, this is basically a no-operation."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"When the tool has already been installed, this action will be skipped."}),"\n",(0,s.jsxs)(n.li,{children:["Actions will be scoped by language and version, also known as a runtime. For example,\n",(0,s.jsx)(n.code,{children:"SetupToolchain(node:18.1.0)"})," or ",(0,s.jsx)(n.code,{children:"SetupToolchain(deno:1.31.0)"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Tools that require a global binary (found on ",(0,s.jsx)(n.code,{children:"PATH"}),') will display the version as "global". For\nexample, ',(0,s.jsx)(n.code,{children:"SetupToolchain(node:global)"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["This action can be skipped by setting the ",(0,s.jsx)(n.code,{children:"MOON_SKIP_SETUP_TOOLCHAIN=true"})," environment variable. The\nskip can be scoped per tool by setting the value to the tool name (",(0,s.jsx)(n.code,{children:"node"}),"), and also by version\n(",(0,s.jsx)(n.code,{children:"node:20.0.0"}),"). Supports a comma-separated list."]})}),"\n",(0,s.jsxs)(n.h3,{id:"setup-environment",children:["Setup environment",(0,s.jsx)(l.A,{version:"1.35.0"})]}),"\n",(0,s.jsxs)(n.p,{children:["This action runs after the toolchain has been setup, but before dependencies are installed, so that\nthe development environment can be setup and configured. This includes operations such as modifying\na manifest (",(0,s.jsx)(n.code,{children:"package.json"}),", etc), updating configuration files, initializing venv's (Python), so on\nand so forth."]}),"\n",(0,s.jsxs)(n.h3,{id:"setup-proto",children:["Setup proto",(0,s.jsx)(l.A,{version:"1.39.0"})]}),"\n",(0,s.jsxs)(n.p,{children:["This action runs before all toolchain related actions and ensures that ",(0,s.jsx)(n.a,{href:"/proto",children:"proto"})," has been\ninstalled and is available for use. This is required for toolchains that will be downloaded and\ninstalled."]}),"\n",(0,s.jsx)(n.h3,{id:"install-dependencies",children:"Install dependencies"}),"\n",(0,s.jsxs)(n.p,{children:["Before we run a task, we ensure that all language dependencies (",(0,s.jsx)(n.code,{children:"node_modules"})," for example) have\nbeen installed, by automatically installing them if we detect changes since the last run. We achieve\nthis by comparing lockfile modified timestamps, parsing manifest files, and hashing resolved\ndependency versions."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["When dependencies do ",(0,s.jsx)(n.em,{children:"not"})," need to be installed, this action will be skipped."]}),"\n",(0,s.jsxs)(n.li,{children:["Depending on the language and configuration, we may install dependencies in a project\n(",(0,s.jsx)(n.code,{children:"InstallProjectDeps"}),"), or in the workspace root for all projects (",(0,s.jsx)(n.code,{children:"InstallWorkspaceDeps"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:["Actions will be scoped by language and version, also known as a runtime. For example,\n",(0,s.jsx)(n.code,{children:"InstallWorkspaceDeps(node:18.1.0)"})," or ",(0,s.jsx)(n.code,{children:"InstallProjectDeps(node:18.1.0, example)"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["This action can be skipped by disabling the\n",(0,s.jsx)(n.a,{href:"../config/workspace#installdependencies",children:(0,s.jsx)(n.code,{children:"pipeline.installDependencies"})})," setting."]})}),"\n",(0,s.jsx)(n.h3,{id:"sync-project",children:"Sync project"}),"\n",(0,s.jsxs)(n.p,{children:["To ensure a consistently healthy project and repository, we run a process known as syncing\n",(0,s.jsx)(n.em,{children:"everytime"})," a task is ran. This action will run sync operations for all toolchains associated with\nthe project."]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["This action can be skipped by disabling the\n",(0,s.jsx)(n.a,{href:"../config/workspace#syncproject",children:(0,s.jsx)(n.code,{children:"pipeline.syncProject"})})," setting."]})}),"\n",(0,s.jsx)(n.h3,{id:"run-task",children:"Run task"}),"\n",(0,s.jsxs)(n.p,{children:["The primary action in the graph is the run ",(0,s.jsx)(n.a,{href:"../concepts/task",children:"task"})," action, which runs a project's\ntask as a child process, derived from a ",(0,s.jsx)(n.a,{href:"../concepts/target",children:"target"}),". Tasks can depend on other\ntasks, and they'll be effectively orchestrated and executed by running in topological order using a\nthread pool."]}),"\n",(0,s.jsx)(n.h3,{id:"run-interactive-task",children:"Run interactive task"}),"\n",(0,s.jsxs)(n.p,{children:["Like the base run task, but runs the ",(0,s.jsx)(n.a,{href:"../concepts/task#interactive",children:"task interactively"})," with stdin\ncapabilities. All interactive tasks are run in isolation in the graph."]}),"\n",(0,s.jsx)(n.h3,{id:"run-persistent-task",children:"Run persistent task"}),"\n",(0,s.jsxs)(n.p,{children:["Like the base run task, but runs the ",(0,s.jsx)(n.a,{href:"../concepts/task#persistent",children:"task in a persistent process"}),"\nthat never exits. All persistent tasks are run in parallel as the last batch in the graph."]}),"\n",(0,s.jsx)(n.h2,{id:"what-is-the-graph-used-for",children:"What is the graph used for?"}),"\n",(0,s.jsx)(n.p,{children:"Without the action graph, tasks would not efficiently run, or possibly at all! The graph helps to\nrun tasks in parallel, in the correct order, and to ensure a reliable outcome."})]})}function f(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(g,{...e})}):g(e)}}}]);