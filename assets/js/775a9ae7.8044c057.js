"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[62653],{15868:(n,e,i)=>{i.d(e,{A:()=>t});var s=i(65162),l=i(62540);function t(n){let{header:e,inline:i,updated:t,version:a}=n;return(0,l.jsx)(s.A,{text:`v${a}`,variant:t?"success":"info",className:e?"absolute right-0 top-1.5":i?"inline-block ml-1":"ml-2"})}},32328:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"guides/pkl-config","title":"Pkl configuration","description":"While YAML is our official configuration format, we want to support dynamic formats, and as such,","source":"@site/docs/guides/pkl-config.mdx","sourceDirName":"guides","slug":"/guides/pkl-config","permalink":"/docs/guides/pkl-config","draft":false,"unlisted":false,"editUrl":"https://github.com/moonrepo/moon/tree/master/website/docs/guides/pkl-config.mdx","tags":[],"version":"current","frontMatter":{"title":"Pkl configuration"},"sidebar":"guides","previous":{"title":"Open source usage","permalink":"/docs/guides/open-source"},"next":{"title":"Remote caching","permalink":"/docs/guides/remote-cache"}}');var l=i(62540),t=i(43023),a=i(15868);const o={title:"Pkl configuration"},r=void 0,c={},d=[{value:"Installing Pkl",id:"installing-pkl",level:2},{value:"Using Pkl",id:"using-pkl",level:2},{value:"Caveats and restrictions",id:"caveats-and-restrictions",level:3},{value:"Example configs",id:"example-configs",level:2},{value:"<code>.moon/workspace.pkl</code>",id:"moonworkspacepkl",level:3},{value:"<code>.moon/toolchain.pkl</code>",id:"moontoolchainpkl",level:3},{value:"<code>moon.pkl</code>",id:"moonpkl",level:3},{value:"Example functionality",id:"example-functionality",level:2},{value:"Loops and conditionals",id:"loops-and-conditionals",level:3},{value:"Local variables",id:"local-variables",level:3}];function p(n){const e={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...n.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(a.A,{version:"1.32.0",header:!0}),"\n",(0,l.jsxs)(e.p,{children:["While YAML is our official configuration format, we want to support dynamic formats, and as such,\nhave added support for Pkl. What is Pkl? If you haven't heard of Pkl yet,\n",(0,l.jsx)(e.a,{href:"https://pkl-lang.org/",children:"Pkl is a programmable configuration format by Apple"}),". We like Pkl, as it\nmeets the following requirements:"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Is easy to read and write."}),"\n",(0,l.jsx)(e.li,{children:"Is dynamic and programmable (loops, variables, etc)."}),"\n",(0,l.jsx)(e.li,{children:"Has type-safety / built-in schema support."}),"\n",(0,l.jsx)(e.li,{children:"Has Rust serde integration."}),"\n"]}),"\n",(0,l.jsxs)(e.p,{children:["The primary requirement that we are hoping to achieve is supporting a configuration format that is\n",(0,l.jsx)(e.em,{children:"programmable"}),". We want something that has native support for variables, loops, conditions, and\nmore, so that you could curate and compose your configuration very easily. Hacking this\nfunctionality into YAML is a terrible user experience in our opinion!"]}),"\n",(0,l.jsx)(e.h2,{id:"installing-pkl",children:"Installing Pkl"}),"\n",(0,l.jsxs)(e.p,{children:["Pkl utilizes a client-server architecture, which means that the ",(0,l.jsx)(e.code,{children:"pkl"})," binary must exist in the\nenvironment for parsing and evaluating ",(0,l.jsx)(e.code,{children:".pkl"})," files. Jump over to the\n",(0,l.jsx)(e.a,{href:"https://pkl-lang.org/main/current/pkl-cli/index.html#installation",children:"official documentation for instructions on how to install Pkl"}),"."]}),"\n",(0,l.jsxs)(e.p,{children:["If you are using ",(0,l.jsx)(e.a,{href:"/proto",children:"proto"}),", you can install Pkl with the following commands."]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-shell",children:"proto plugin add pkl https://raw.githubusercontent.com/milesj/proto-plugins/refs/heads/master/pkl.toml\nproto install pkl --pin\n"})}),"\n",(0,l.jsx)(e.h2,{id:"using-pkl",children:"Using Pkl"}),"\n",(0,l.jsx)(e.p,{children:"To start using Pkl in moon, simply:"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["Install ",(0,l.jsx)(e.a,{href:"#installing-pkl",children:"Pkl"})," and the\n",(0,l.jsx)(e.a,{href:"https://pkl-lang.org/vscode/current/index.html",children:"VS Code extension"})]}),"\n",(0,l.jsxs)(e.li,{children:["Create configs with the ",(0,l.jsx)(e.code,{children:".pkl"})," extension instead of ",(0,l.jsx)(e.code,{children:".yml"})]}),"\n"]}),"\n",(0,l.jsx)(e.admonition,{type:"info",children:(0,l.jsxs)(e.p,{children:["We highly suggest reading the Pkl\n",(0,l.jsx)(e.a,{href:"https://pkl-lang.org/main/current/language-reference/index.html",children:"language reference"}),", the\n",(0,l.jsx)(e.a,{href:"https://pkl-lang.org/main/current/standard-library.html",children:"standard library"}),", or looking at our\n",(0,l.jsx)(e.a,{href:"#example-configs",children:"example configurations"})," when using Pkl."]})}),"\n",(0,l.jsx)(e.h3,{id:"caveats-and-restrictions",children:"Caveats and restrictions"}),"\n",(0,l.jsx)(e.p,{children:"Since this is an entirely new configuration format that is quite dynamic compared to YAML, there are\nsome key differences to be aware of!"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsx)(e.p,{children:"Only files are supported. Cannot use or extend from URLs."}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:["Each ",(0,l.jsx)(e.code,{children:".pkl"})," file is evaluated in isolation (loops are processed, variables assigned, etc). This\nmeans that task inheritance and file merging cannot extend or infer this native functionality."]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.code,{children:"default"})," is a\n",(0,l.jsx)(e.a,{href:"https://pkl-lang.org/main/current/language-reference/index.html#default-element",children:"special feature"}),"\nin Pkl and cannot be used as a setting name. This only applies to\n",(0,l.jsx)(e.a,{href:"../config/template#default",children:(0,l.jsx)(e.code,{children:"template.pkl"})}),", but can be worked around by using ",(0,l.jsx)(e.code,{children:"defaultValue"}),"\ninstead."]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-pkl",metastring:'title="template.pkl"',children:'variables {\n  ["age"] {\n    type = "number"\n    prompt = "Age?"\n    defaultValue = 0\n}\n'})}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"local"})," is also a reserved word in Pkl. It can be worked around by escaping it with backticks, or\nyou can simply use the ",(0,l.jsxs)(e.a,{href:"../config/project#preset",children:[(0,l.jsx)(e.code,{children:"preset"})," setting"]})," instead."]}),"\n"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-pkl",children:'tasks {\n  ["example"] {\n    `local` = true\n    # Or\n    preset = "server"\n  }\n}\n'})}),"\n",(0,l.jsx)(e.h2,{id:"example-configs",children:"Example configs"}),"\n",(0,l.jsx)(e.h3,{id:"moonworkspacepkl",children:(0,l.jsx)(e.code,{children:".moon/workspace.pkl"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-pkl",children:'projects {\n  globs = List("apps/*", "packages/*")\n  sources {\n    ["root"] = "."\n  }\n}\n\nvcs {\n  defaultBranch = "master"\n}\n'})}),"\n",(0,l.jsx)(e.h3,{id:"moontoolchainpkl",children:(0,l.jsx)(e.code,{children:".moon/toolchain.pkl"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-pkl",children:'node {\n  version = "20.15.0"\n  packageManager = "yarn"\n  yarn {\n    version = "4.3.1"\n  }\n  addEnginesConstraint = false\n  inferTasksFromScripts = false\n}\n'})}),"\n",(0,l.jsx)(e.h3,{id:"moonpkl",children:(0,l.jsx)(e.code,{children:"moon.pkl"})}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-pkl",children:'type = "application"\nlanguage = "typescript"\ndependsOn = List("client", "ui")\n\ntasks {\n  ["build"] {\n    command = "docusaurus build"\n    deps = List("^:build")\n    outputs = List("build")\n    options {\n      interactive = true\n      retryCount = 3\n    }\n  }\n  ["typecheck"] {\n    command = "tsc --build"\n    inputs = new Listing {\n      "@globs(sources)"\n      "@globs(tests)"\n      "tsconfig.json"\n      "/tsconfig.options.json"\n    }\n  }\n}\n'})}),"\n",(0,l.jsx)(e.h2,{id:"example-functionality",children:"Example functionality"}),"\n",(0,l.jsx)(e.h3,{id:"loops-and-conditionals",children:"Loops and conditionals"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-pkl",children:'tasks {\n  for (_os in List("linux", "macos", "windows")) {\n    ["build-\\(_os)"] {\n      command = "cargo"\n      args = List(\n        "--target",\n        if (_os == "linux") "x86_64-unknown-linux-gnu"\n          else if (_os == "macos") "x86_64-apple-darwin"\n          else "i686-pc-windows-msvc",\n        "--verbose"\n      )\n      options {\n        os = _os\n      }\n    }\n  }\n}\n'})}),"\n",(0,l.jsx)(e.h3,{id:"local-variables",children:"Local variables"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-pkl",children:'local _sharedInputs = List("src/**/*")\n\ntasks {\n  ["test"] {\n    // ...\n    inputs = List("tests/**/*") + _sharedInputs\n  }\n  ["lint"] {\n    // ...\n    inputs = List("**/*.graphql") + _sharedInputs\n  }\n}\n'})})]})}function h(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,l.jsx)(e,{...n,children:(0,l.jsx)(p,{...n})}):p(n)}},43023:(n,e,i)=>{i.d(e,{R:()=>a,x:()=>o});var s=i(63696);const l={},t=s.createContext(l);function a(n){const e=s.useContext(t);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(l):n.components||l:a(n.components),s.createElement(t.Provider,{value:e},n.children)}},65162:(n,e,i)=>{i.d(e,{A:()=>o});var s=i(11750),l=i(74599),t=i(62540);const a={failure:"bg-red-100 text-red-900",info:"bg-pink-100 text-pink-900",success:"bg-green-100 text-green-900",warning:"bg-orange-100 text-orange-900"};function o(n){let{className:e,icon:i,text:o,variant:r}=n;return(0,t.jsxs)("span",{className:(0,s.A)("inline-flex items-center px-1 py-0.5 rounded text-xs font-bold uppercase",r?a[r]:"bg-gray-100 text-gray-800",e),children:[i&&(0,t.jsx)(l.A,{icon:i,className:"mr-1"}),o]})}}}]);