"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[96093],{79035:(e,n,t)=>{t.d(n,{D:()=>o});var i=t(60359),r=t(51571),s=t.n(r);function o(e,n){return(0,i.A)({container:e,elements:n,layout:{fit:!0,name:"dagre",nodeDimensionsIncludeLabels:!0,spacingFactor:1},style:[{selector:"edges",style:{"arrow-scale":2,color:"#e4f7fb","curve-style":"straight","font-size":12,label:"data(label)","line-cap":"round","line-color":"#c9eef6","line-opacity":.25,"overlay-color":"#c9eef6","target-arrow-color":"#c9eef6","target-arrow-shape":"chevron","text-opacity":.6,width:3}},{selector:"node",style:{"background-fill":"linear-gradient","background-gradient-direction":"to-bottom-right","background-gradient-stop-colors":"#d7dfe9 #bdc9db #97a1af",color:"#fff",height:60,label:"data(label)","overlay-color":"#99aab7","overlay-shape":"ellipse",padding:"0",shape:"ellipse","text-halign":"center","text-margin-y":6,"text-valign":"bottom","underlay-shape":"ellipse",width:60}},{selector:'node[type="run-task"]',style:{"background-gradient-stop-colors":"#6e58d1 #4a2ec6 #3b259e"}},{selector:'node[type="run-target"]',style:{"background-gradient-stop-colors":"#6e58d1 #4a2ec6 #3b259e"}},{selector:'node[type="sync-project"]',style:{"background-gradient-stop-colors":"#ffafff #ff79ff #cc61cc",height:80,width:80}},{selector:'node[type="install-dependencies"]',style:{"background-gradient-stop-colors":"#afe6f2 #79d5e9 #61aaba",height:90,width:90}},{selector:'node[type="setup-environment"]',style:{"background-gradient-stop-colors":"#c9e166 #b7d733 #a5cd00",height:90,width:90}},{selector:'node[type="setup-toolchain"]',style:{"background-gradient-stop-colors":"#ff9da6 #ff5b6b #cc4956",height:100,width:100}},{selector:'node[type="setup-proto"]',style:{"background-gradient-stop-colors":"#ffafff #ff79ff #cc61cc",height:110,width:110}},{selector:'node[id="sync-workspace"]',style:{"background-gradient-stop-colors":"#b7a9f9 #9a87f7 #8c75f5",height:120,width:120}}]})}i.A.use(s())},79991:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>d,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"how-it-works/project-graph","title":"Project graph","description":"The project graph is a representation of all configured","source":"@site/docs/how-it-works/project-graph.mdx","sourceDirName":"how-it-works","slug":"/how-it-works/project-graph","permalink":"/docs/how-it-works/project-graph","draft":false,"unlisted":false,"editUrl":"https://github.com/moonrepo/moon/tree/master/website/docs/how-it-works/project-graph.mdx","tags":[],"version":"current","frontMatter":{"title":"Project graph"},"sidebar":"docs","previous":{"title":"Languages","permalink":"/docs/how-it-works/languages"},"next":{"title":"Task graph","permalink":"/docs/how-it-works/task-graph"}}');var r=t(62540),s=t(43023),o=t(63696),a=t(79035);function l(){const e=(0,o.useRef)(null);return(0,o.useEffect)((()=>{e.current&&(0,a.D)(e.current,{edges:[{data:{source:"app-client",target:"lib-components"}},{data:{source:"app-client",target:"lib-utils"}},{data:{source:"app-client",target:"lib-intl"}},{data:{source:"app-server",target:"lib-utils"}},{data:{source:"app-server",target:"lib-intl"}},{data:{source:"lib-components",target:"lib-intl"}},{data:{source:"lib-components",target:"lib-theme"}},{data:{source:"lib-components",target:"lib-utils"}}],nodes:[{data:{id:"app-client",label:"Client app",type:"xl"}},{data:{id:"app-server",label:"Server app",type:"xl"}},{data:{id:"lib-components",label:"Components",type:"lg"}},{data:{id:"lib-utils",label:"Utils",type:"lg"}},{data:{id:"lib-theme",label:"Theme",type:"lg"}},{data:{id:"lib-intl",label:"Intl",type:"lg"}}]})}),[]),(0,r.jsx)("div",{id:"project-graph",ref:e,className:"p-1 mb-2 rounded bg-slate-800",style:{height:"450px",width:"100%"}})}const c={title:"Project graph"},d=void 0,p={},h=[{value:"Relationships",id:"relationships",level:2},{value:"Explicit",id:"explicit",level:3},{value:"Implicit",id:"implicit",level:3},{value:"Scopes",id:"scopes",level:3},{value:"What is the graph used for?",id:"what-is-the-graph-used-for",level:2}];function g(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["The project graph is a representation of all configured\n",(0,r.jsx)(n.a,{href:"../config/workspace#projects",children:"projects in the workspace"})," and their relationships between each\nother, and is represented internally as a directed acyclic graph (DAG). Below is a visual\nrepresentation of a project graph, composed of multiple applications and libraries, where both\nproject types depend on libraries."]}),"\n",(0,r.jsx)(l,{}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.a,{href:"../commands/project-graph",children:(0,r.jsx)(n.code,{children:"moon project-graph"})})," command can be used to view the structure of\nyour workspace."]})}),"\n",(0,r.jsx)(n.h2,{id:"relationships",children:"Relationships"}),"\n",(0,r.jsx)(n.p,{children:"A relationship is between a dependent (downstream project) and a dependency/requirement (upstream\nproject). Relationships are derived from source code and configuration files within the repository,\nand fall into 1 of 2 categories:"}),"\n",(0,r.jsx)(n.h3,{id:"explicit",children:"Explicit"}),"\n",(0,r.jsxs)(n.p,{children:["These are dependencies that are explicitly defined in a project's ",(0,r.jsx)(n.a,{href:"../config/project",children:(0,r.jsx)(n.code,{children:"moon.yml"})}),"\nconfig file, using the ",(0,r.jsx)(n.a,{href:"../config/project#dependson",children:(0,r.jsx)(n.code,{children:"dependsOn"})})," setting."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"dependsOn:\n  - 'components'\n  - id: 'utils'\n    scope: 'peer'\n"})}),"\n",(0,r.jsx)(n.h3,{id:"implicit",children:"Implicit"}),"\n",(0,r.jsxs)(n.p,{children:["These are dependencies that are implicitly discovered by moon when scanning the repository. How an\nimplicit dependency is discovered is based on a\n",(0,r.jsx)(n.a,{href:"./languages#tier-2--platform",children:"language's platform integration"}),", and how that language's ecosystem\nfunctions."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:'title="package.json"',children:'{\n  // ...\n  "dependencies": {\n    "@company/components": "workspace:*"\n  },\n  "peerDependencies": {\n    "@company/utils": "workspace:*"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"caution",children:(0,r.jsxs)(n.p,{children:["If a language is not officially supported by moon, then implicit dependencies will ",(0,r.jsx)(n.em,{children:"not"})," be\nresolved. For unsupported languages, you must explicitly configure dependencies."]})}),"\n",(0,r.jsx)(n.h3,{id:"scopes",children:"Scopes"}),"\n",(0,r.jsxs)(n.p,{children:["Every relationship is categorized into a scope that describes the type of relationship between the\nparent and child. Scopes are currently used for ",(0,r.jsx)(n.a,{href:"../commands/sync",children:"project syncing"})," and deep Docker\nintegration."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Production"})," - Dependency is required in production, ",(0,r.jsx)(n.em,{children:"will not be"})," pruned in production\nenvironments, and will sync as a production dependency."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Development"})," - Dependency is required in development and production, ",(0,r.jsx)(n.em,{children:"will be"})," pruned from\nproduction environments, and will sync as a development-only dependency."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Build"})," - Dependency is required for building only, and will sync as a build dependency."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Peer"})," - Dependency is a peer requirement, with language specific semantics. Will sync as a peer\ndependency when applicable."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"what-is-the-graph-used-for",children:"What is the graph used for?"}),"\n",(0,r.jsx)(n.p,{children:"Great question, the project graph is used throughout the codebase to accomplish a variety of\nfunctions, but mainly:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Is fed into the ",(0,r.jsx)(n.a,{href:"./task-graph",children:"task graph"})," to determine relationships of tasks between other\ntasks, and across projects."]}),"\n",(0,r.jsxs)(n.li,{children:["Powers our ",(0,r.jsx)(n.a,{href:"../guides/docker",children:"Docker"})," layer caching and scaffolding implementations."]}),"\n",(0,r.jsxs)(n.li,{children:["Utilized for ",(0,r.jsx)(n.a,{href:"../commands/sync",children:"project syncing"})," to ensure a healthy repository state."]}),"\n",(0,r.jsxs)(n.li,{children:["Determines affected projects in ",(0,r.jsx)(n.a,{href:"../guides/ci",children:"continuous integration"})," workflows."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(g,{...e})}):g(e)}}}]);