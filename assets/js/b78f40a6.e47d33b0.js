"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[40061],{10901:(e,n,t)=>{t.d(n,{A:()=>i});var s=t(62540);function i(e){let{src:n,width:t="90%",alt:i="",title:r,align:a="center",padding:l="1rem"}=e;return(0,s.jsx)("div",{style:{marginBottom:l,marginTop:l,textAlign:a},children:(0,s.jsx)("img",{src:n.default,width:t,alt:i,title:r,className:"inline-block"})})}},15868:(e,n,t)=>{t.d(n,{A:()=>r});var s=t(65162),i=t(62540);function r(e){let{header:n,inline:t,updated:r,version:a}=e;return(0,i.jsx)(s.A,{text:`v${a}`,variant:r?"success":"info",className:n?"absolute right-0 top-1.5":t?"inline-block ml-1":"ml-2"})}},22491:(e,n,t)=>{t.d(n,{A:()=>a});t(63696);var s=t(11750);const i={tabItem:"tabItem_wHwb"};var r=t(62540);function a(e){let{children:n,hidden:t,className:a}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,s.A)(i.tabItem,a),hidden:t,children:n})}},28167:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>u,default:()=>g,frontMatter:()=>d,metadata:()=>s,toc:()=>m});const s=JSON.parse('{"id":"guides/ci","title":"Continuous integration (CI)","description":"All companies and projects rely on continuous integration (CI) to ensure high quality code and to","source":"@site/docs/guides/ci.mdx","sourceDirName":"guides","slug":"/guides/ci","permalink":"/docs/guides/ci","draft":false,"unlisted":false,"editUrl":"https://github.com/moonrepo/moon/tree/master/website/docs/guides/ci.mdx","tags":[],"version":"current","frontMatter":{"title":"Continuous integration (CI)"},"sidebar":"guides","next":{"title":"Code generation","permalink":"/docs/guides/codegen"}}');var i=t(62540),r=t(43023),a=t(78296),l=t(22491),o=t(10901),c=t(15868);const d={title:"Continuous integration (CI)"},u=void 0,h={},m=[{value:"How it works",id:"how-it-works",level:2},{value:"Configuring tasks",id:"configuring-tasks",level:2},{value:"Integrating",id:"integrating",level:2},{value:"Choosing targets<VersionLabel></VersionLabel>",id:"choosing-targets",level:2},{value:"Comparing revisions",id:"comparing-revisions",level:2},{value:"Parallelizing tasks",id:"parallelizing-tasks",level:2},{value:"Caching artifacts",id:"caching-artifacts",level:2},{value:"Manual persistence",id:"manual-persistence",level:3},{value:"Reporting run results",id:"reporting-run-results",level:2},{value:"Community offerings",id:"community-offerings",level:3}];function p(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["All companies and projects rely on continuous integration (CI) to ensure high quality code and to\navoid regressions. Because this is such a critical piece of every developer's workflow, we wanted to\nsupport it as a first-class feature within moon, and we do just that with the\n",(0,i.jsx)(n.a,{href:"../commands/ci",children:(0,i.jsx)(n.code,{children:"moon ci"})})," command."]}),"\n",(0,i.jsx)(n.h2,{id:"how-it-works",children:"How it works"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"ci"})," command does all the heavy lifting necessary for effectively running jobs. It achieves this\nby automatically running the following steps:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Determines touched files by comparing the current HEAD against a base."}),"\n",(0,i.jsxs)(n.li,{children:["Determines all ",(0,i.jsx)(n.a,{href:"../concepts/target",children:"targets"})," that need to run based on touched files."]}),"\n",(0,i.jsxs)(n.li,{children:["Additionally runs affected ",(0,i.jsx)(n.a,{href:"../concepts/target",children:"targets"})," dependencies ",(0,i.jsx)(n.em,{children:"and"})," dependents."]}),"\n",(0,i.jsx)(n.li,{children:"Generates an action and dependency graph."}),"\n",(0,i.jsx)(n.li,{children:"Installs the toolchain, Node.js, and npm dependencies."}),"\n",(0,i.jsx)(n.li,{children:"Runs all actions within the graph using a thread pool."}),"\n",(0,i.jsx)(n.li,{children:"Displays stats about all passing, failed, and invalid actions."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"configuring-tasks",children:"Configuring tasks"}),"\n",(0,i.jsxs)(n.p,{children:["By default, ",(0,i.jsx)(n.em,{children:"all tasks"})," run in CI, as you should always be building, linting, typechecking, testing,\nso on and so forth. However, this isn't always true, so this can be disabled on a per-task basis\nthrough the ",(0,i.jsx)(n.a,{href:"../config/project#runinci",children:(0,i.jsx)(n.code,{children:"runInCI"})})," or ",(0,i.jsx)(n.a,{href:"../config/project#local",children:(0,i.jsx)(n.code,{children:"local"})})," options."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"tasks:\n  dev:\n    command: 'webpack server'\n    options:\n      runInCI: false\n    # Or\n    local: true\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsxs)(n.p,{children:["This option ",(0,i.jsx)(n.em,{children:"must"})," be set to false for tasks that spawn a long-running or never-ending process, like\nHTTP or development servers. To help mitigate this, tasks named ",(0,i.jsx)(n.code,{children:"dev"}),", ",(0,i.jsx)(n.code,{children:"start"}),", or ",(0,i.jsx)(n.code,{children:"serve"})," are false\nby default. This can be easily controlled with the ",(0,i.jsx)(n.a,{href:"../config/project#local",children:(0,i.jsx)(n.code,{children:"local"})})," setting."]})}),"\n",(0,i.jsx)(n.h2,{id:"integrating",children:"Integrating"}),"\n",(0,i.jsxs)(n.p,{children:["The following examples can be referenced for setting up moon and its CI workflow in popular\nproviders. For GitHub, we're using our\n",(0,i.jsxs)(n.a,{href:"https://github.com/moonrepo/setup-toolchain",children:[(0,i.jsx)(n.code,{children:"setup-toolchain"})," action"]})," to install moon. For other\nproviders, we assume moon is an npm dependency and must be installed with Node.js."]}),"\n",(0,i.jsxs)(a.A,{groupId:"ci-env",children:[(0,i.jsx)(l.A,{value:"github",label:"GitHub",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title=".github/workflows/ci.yml"',children:"name: 'Pipeline'\non:\n  push:\n    branches:\n      - 'master'\n  pull_request:\njobs:\n  ci:\n    name: 'CI'\n    runs-on: 'ubuntu-latest'\n    steps:\n      - uses: 'actions/checkout@v4'\n        with:\n          fetch-depth: 0\n      - uses: 'moonrepo/setup-toolchain@v0'\n      - run: 'moon ci'\n"})})}),(0,i.jsx)(l.A,{value:"buildkite",label:"Buildkite",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title=".buildkite/pipeline.yml"',children:"steps:\n  - label: 'CI'\n    commands:\n      - 'yarn install --immutable'\n      - 'moon ci'\n"})})}),(0,i.jsx)(l.A,{value:"circleci",label:"CircleCI",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title=".circleci/config.yml"',children:"version: 2.1\norbs:\n  node: 'circleci/node@5.0.2'\njobs:\n  ci:\n    docker:\n      - image: 'cimg/base:stable'\n    steps:\n      - checkout\n      - node/install:\n          install-yarn: true\n          node-version: '16.13'\n      - node/install-packages:\n          check-cache: 'always'\n          pkg-manager: 'yarn-berry'\n      - run: 'moon ci'\nworkflows:\n  pipeline:\n    jobs:\n      - 'ci'\n"})})}),(0,i.jsx)(l.A,{value:"travisci",label:"TravisCI",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title=".travis.yml"',children:"language: node_js\nnode_js:\n  - 16\ncache: yarn\nscript: 'moon ci'\n"})})})]}),"\n",(0,i.jsxs)(n.h2,{id:"choosing-targets",children:["Choosing targets",(0,i.jsx)(c.A,{version:"1.14.0"})]}),"\n",(0,i.jsxs)(n.p,{children:["By default ",(0,i.jsx)(n.code,{children:"moon ci"})," will run ",(0,i.jsx)(n.em,{children:"all"})," tasks from ",(0,i.jsx)(n.em,{children:"all"})," projects that are affected by touched files and\nhave the ",(0,i.jsx)(n.a,{href:"../config/project#runinci",children:(0,i.jsx)(n.code,{children:"runInCI"})})," task option enabled. This is a great catch-all\nsolution, but may not vibe with your workflow or requirements."]}),"\n",(0,i.jsxs)(n.p,{children:["If you'd prefer more control, you can pass a list of targets to ",(0,i.jsx)(n.code,{children:"moon ci"}),", instead of moon\nattempting to detect them. When providing targets, ",(0,i.jsx)(n.code,{children:"moon ci"})," will still only run them if affected by\ntouched files, but will still filter with the ",(0,i.jsx)(n.code,{children:"runInCI"})," option."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"# Run all builds\n$ moon ci :build\n\n# In another job, run tests\n$ moon ci :test :lint\n"})}),"\n",(0,i.jsx)(n.h2,{id:"comparing-revisions",children:"Comparing revisions"}),"\n",(0,i.jsxs)(n.p,{children:["By default the command will attempt to detect the base and head revisions automatically based on the\ncurrent CI provider (powered by the ",(0,i.jsx)(n.a,{href:"https://github.com/milesj/rust-cicd-env",children:(0,i.jsx)(n.code,{children:"ci_env"})})," Rust crate).\nIf nothing was detected, this will fallback to the configured\n",(0,i.jsx)(n.a,{href:"../config/workspace#defaultbranch",children:(0,i.jsx)(n.code,{children:"vcs.defaultBranch"})})," for the base revision, and ",(0,i.jsx)(n.code,{children:"HEAD"})," for the\nhead revision."]}),"\n",(0,i.jsxs)(n.p,{children:["These values can be customized with the ",(0,i.jsx)(n.code,{children:"--base"})," and ",(0,i.jsx)(n.code,{children:"--head"})," command line options, or the\n",(0,i.jsx)(n.code,{children:"MOON_BASE"})," and ",(0,i.jsx)(n.code,{children:"MOON_HEAD"})," environment variables, which takes highest precedence."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"$ moon ci --base <BRANCH> --head <SHA>\n# Or\n$ MOON_BASE=<BRANCH> MOON_HEAD=<SHA> moon ci\n"})}),"\n",(0,i.jsx)(n.h2,{id:"parallelizing-tasks",children:"Parallelizing tasks"}),"\n",(0,i.jsxs)(n.p,{children:["If your CI environment supports sharding across multiple jobs, then you can utilize moon's built in\nparallelism by passing ",(0,i.jsx)(n.code,{children:"--jobTotal"})," and ",(0,i.jsx)(n.code,{children:"--job"})," options. The ",(0,i.jsx)(n.code,{children:"--jobTotal"})," option is an integer of\nthe total number of jobs available, and ",(0,i.jsx)(n.code,{children:"--job"})," is the current index (0 based) amongst the total."]}),"\n",(0,i.jsxs)(n.p,{children:["When these options are passed, moon will only run affected ",(0,i.jsx)(n.a,{href:"../concepts/target",children:"targets"})," based on\nthe current job slice."]}),"\n",(0,i.jsxs)(a.A,{groupId:"ci-env",children:[(0,i.jsxs)(l.A,{value:"github",label:"GitHub",children:[(0,i.jsx)(n.p,{children:"GitHub Actions do not support native parallelism, but it can be emulated using it's matrix."}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title=".github/workflows/ci.yml"',children:"# ...\njobs:\n  ci:\n    # ...\n    strategy:\n      matrix:\n        index: [0, 1]\n    steps:\n      # ...\n      - run: 'moon ci --job ${{ matrix.index }} --jobTotal 2'\n"})}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs",children:"Documentation"})}),"\n"]})]}),(0,i.jsxs)(l.A,{value:"buildkite",label:"Buildkite",children:[(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title=".buildkite/pipeline.yml"',children:"# ...\nsteps:\n  - label: 'CI'\n    parallelism: 10\n    commands:\n      # ...\n      - 'moon ci --job $$BUILDKITE_PARALLEL_JOB --jobTotal $$BUILDKITE_PARALLEL_JOB_COUNT'\n"})}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://buildkite.com/docs/tutorials/parallel-builds#parallel-jobs",children:"Documentation"})}),"\n"]})]}),(0,i.jsxs)(l.A,{value:"circleci",label:"CircleCI",children:[(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title=".circleci/config.yml"',children:"# ...\njobs:\n  ci:\n    # ...\n    parallelism: 10\n    steps:\n      # ...\n      - run: 'moon ci --job $CIRCLE_NODE_INDEX --jobTotal $CIRCLE_NODE_TOTAL'\n"})}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://circleci.com/docs/2.0/parallelism-faster-jobs/",children:"Documentation"})}),"\n"]})]}),(0,i.jsxs)(l.A,{value:"travisci",label:"TravisCI",children:[(0,i.jsx)(n.p,{children:"TravisCI does not support native parallelism, but it can be emulated using it's matrix."}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title=".travis.yml"',children:"# ...\nenv:\n  global:\n    - TRAVIS_JOB_TOTAL=2\n  jobs:\n    - TRAVIS_JOB_INDEX=0\n    - TRAVIS_JOB_INDEX=1\nscript: 'moon ci --job $TRAVIS_JOB_INDEX --jobTotal $TRAVIS_JOB_TOTAL'\n"})}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.travis-ci.com/user/speeding-up-the-build/",children:"Documentation"})}),"\n"]})]})]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Your CI environment may provide environment variables for these 2 values."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"caching-artifacts",children:"Caching artifacts"}),"\n",(0,i.jsxs)(n.p,{children:["When a CI pipeline reaches a certain scale, its run times increase, tasks are unnecessarily ran, and\nbuild artifacts are not shared. To combat this, we support ",(0,i.jsx)(n.a,{href:"./remote-cache",children:"remote caching"}),", a\nmechanism where we store build artifacts in the cloud, and sync these artifacts to machines on\ndemand."]}),"\n",(0,i.jsx)(n.h3,{id:"manual-persistence",children:"Manual persistence"}),"\n",(0,i.jsxs)(n.p,{children:["If you'd prefer to ",(0,i.jsx)(n.em,{children:"not use"})," remote caching at this time, you can cache artifacts yourself, by\npersisting the ",(0,i.jsx)(n.code,{children:".moon/cache/{hashes,outputs}"})," directories. All other files and folders in\n",(0,i.jsx)(n.code,{children:".moon/cache"})," ",(0,i.jsx)(n.em,{children:"should not"})," be persisted, as they are not safe/portable across machines."]}),"\n",(0,i.jsxs)(n.p,{children:["However, because tasks can generate a different hash each run, you'll need to manually invalidate\nyour cache. Blindly storing the ",(0,i.jsx)(n.code,{children:"hashes"})," and ",(0,i.jsx)(n.code,{children:"outputs"})," directories without a mechanism to invalidate\nwill simply not work, as the contents will drastically change between CI runs. This is the primary\nreason why the remote caching service exists."]}),"\n",(0,i.jsx)(n.h2,{id:"reporting-run-results",children:"Reporting run results"}),"\n",(0,i.jsxs)(n.p,{children:["If you're using GitHub Actions as your CI provider, we suggest using our\n",(0,i.jsx)(n.a,{href:"https://github.com/marketplace/actions/moon-ci-run-reports",children:(0,i.jsx)(n.code,{children:"moonrepo/run-report-action"})}),". This\naction will report the results of a ",(0,i.jsx)(n.a,{href:"../commands/ci",children:(0,i.jsx)(n.code,{children:"moon ci"})})," run to a pull request as a comment\nand workflow summary."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",metastring:'title=".github/workflows/ci.yml"',children:"# ...\njobs:\n  ci:\n    name: 'CI'\n    runs-on: 'ubuntu-latest'\n    steps:\n      # ...\n      - run: 'moon ci'\n      - uses: 'moonrepo/run-report-action@v1'\n        if: success() || failure()\n        with:\n          access-token: ${{ secrets.GITHUB_TOKEN }}\n"})}),"\n",(0,i.jsx)(n.p,{children:"The report looks something like the following:"}),"\n",(0,i.jsx)(o.A,{src:t(53604),width:"60%"}),"\n",(0,i.jsx)(n.h3,{id:"community-offerings",children:"Community offerings"}),"\n",(0,i.jsx)(n.p,{children:"The following GitHub actions are provided by the community:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/appthrust/moon-ci-retrospect",children:(0,i.jsx)(n.code,{children:"appthrust/moon-ci-retrospect"})})," - Displays the\nresults of a ",(0,i.jsx)(n.code,{children:"moon ci"})," run in a more readable fashion."]}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},43023:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var s=t(63696);const i={},r=s.createContext(i);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}},53604:(e,n,t)=>{t.r(n),t.d(n,{default:()=>s});const s=t.p+"assets/images/run-report-41cffa17cd530ab8cca5cef47b38dcfd.png"},65162:(e,n,t)=>{t.d(n,{A:()=>l});var s=t(11750),i=t(74599),r=t(62540);const a={failure:"bg-red-100 text-red-900",info:"bg-pink-100 text-pink-900",success:"bg-green-100 text-green-900",warning:"bg-orange-100 text-orange-900"};function l(e){let{className:n,icon:t,text:l,variant:o}=e;return(0,r.jsxs)("span",{className:(0,s.A)("inline-flex items-center px-1 py-0.5 rounded text-xs font-bold uppercase",o?a[o]:"bg-gray-100 text-gray-800",n),children:[t&&(0,r.jsx)(i.A,{icon:t,className:"mr-1"}),l]})}},78296:(e,n,t)=>{t.d(n,{A:()=>w});var s=t(63696),i=t(11750),r=t(90766),a=t(49519),l=t(14395),o=t(35043),c=t(44544),d=t(94243);function u(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:s,default:i}}=e;return{value:n,label:t,attributes:s,default:i}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:t}=e;const i=(0,a.W6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o.aZ)(r),(0,s.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(i.location.search);n.set(r,e),i.replace({...i.location,search:n.toString()})}),[r,i])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,r=h(e),[a,o]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=t.find((e=>e.default))??t[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:r}))),[c,u]=p({queryString:t,groupId:i}),[g,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,r]=(0,d.Dv)(t);return[i,(0,s.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:i}),b=(()=>{const e=c??g;return m({value:e,tabValues:r})?e:null})();(0,l.A)((()=>{b&&o(b)}),[b]);return{selectedValue:a,selectValue:(0,s.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),f(e)}),[u,f,r]),tabValues:r}}var f=t(86681);const b={tabList:"tabList_J5MA",tabItem:"tabItem_l0OV"};var j=t(62540);function x(e){let{className:n,block:t,selectedValue:s,selectValue:a,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.a_)(),d=e=>{const n=e.currentTarget,t=o.indexOf(n),i=l[t].value;i!==s&&(c(n),a(i))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>{o.push(e)},onKeyDown:u,onClick:d,...r,className:(0,i.A)("tabs__item",b.tabItem,r?.className,{"tabs__item--active":s===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:r}=e;const a=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=a.find((e=>e.props.value===r));return e?(0,s.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:a.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function y(e){const n=g(e);return(0,j.jsxs)("div",{className:(0,i.A)("tabs-container",b.tabList),children:[(0,j.jsx)(x,{...n,...e}),(0,j.jsx)(v,{...n,...e})]})}function w(e){const n=(0,f.A)();return(0,j.jsx)(y,{...e,children:u(e.children)},String(n))}}}]);