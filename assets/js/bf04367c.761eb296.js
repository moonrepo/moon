"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[57738],{30922:e=>{e.exports=JSON.parse('{"permalink":"/blog/moon-v1.4","editUrl":"https://github.com/moonrepo/moon/tree/master/website/blog/2023-05-01_moon-v1.4.mdx","source":"@site/blog/2023-05-01_moon-v1.4.mdx","title":"moon v1.4 - New tag target scope, MQL support for query commands, and more!","description":"With this release, we\'re bringing further improvements to tags and MQL.","date":"2023-05-01T00:00:00.000Z","tags":[{"inline":true,"label":"query","permalink":"/blog/tags/query"},{"inline":true,"label":"lang","permalink":"/blog/tags/lang"},{"inline":true,"label":"tag","permalink":"/blog/tags/tag"},{"inline":true,"label":"alias","permalink":"/blog/tags/alias"}],"readingTime":1.88,"hasTruncateMarker":true,"authors":[{"name":"Miles Johnson","title":"Founder, developer","url":"https://github.com/milesj","imageURL":"/img/authors/miles.jpg","key":"milesj","page":null}],"frontMatter":{"slug":"moon-v1.4","title":"moon v1.4 - New tag target scope, MQL support for query commands, and more!","authors":["milesj"],"tags":["query","lang","tag","alias"],"image":"./img/moon/v1.4.png"},"unlisted":false,"prevItem":{"title":"moon v1.5 - Rust tier 2 and 3 support","permalink":"/blog/moon-v1.5"},"nextItem":{"title":"proto v0.8 - Version detection and installation improvements","permalink":"/blog/proto-v0.8"}}')},43023:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>i});var o=t(63696);const a={},s=o.createContext(a);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),o.createElement(s.Provider,{value:n},e.children)}},57281:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var o=t(30922),a=t(62540),s=t(43023);const r={slug:"moon-v1.4",title:"moon v1.4 - New tag target scope, MQL support for query commands, and more!",authors:["milesj"],tags:["query","lang","tag","alias"],image:"./img/moon/v1.4.png"},i=void 0,l={image:t(63253).A,authorsImageUrls:[void 0]},c=[{value:"Run targets by tag with <code>#tag:task</code>",id:"run-targets-by-tag-with-tagtask",level:2},{value:"Updated <code>moon query</code> commands to support MQL",id:"updated-moon-query-commands-to-support-mql",level:2},{value:"Deprecated <code>node.aliasPackageNames</code> setting",id:"deprecated-nodealiaspackagenames-setting",level:2},{value:"Other changes",id:"other-changes",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"With this release, we're bringing further improvements to tags and MQL."}),"\n",(0,a.jsxs)(n.h2,{id:"run-targets-by-tag-with-tagtask",children:["Run targets by tag with ",(0,a.jsx)(n.code,{children:"#tag:task"})]}),"\n",(0,a.jsxs)(n.p,{children:["We love our community, as you all continuously suggest new and awesome features that haven't crossed\nour minds. One such feature was the ability to run tasks for all projects with a tag,\n",(0,a.jsx)(n.a,{href:"https://github.com/moonrepo/moon/issues/803",children:"suggested by @theoephraim"}),", which is now possible with\nthe new ",(0,a.jsx)(n.a,{href:"/docs/concepts/target#by-tag",children:"tag scope"}),", ",(0,a.jsx)(n.code,{children:"#tag:task"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["As an example, we can easily lint all projects that have the ",(0,a.jsx)(n.code,{children:"frontend"})," tag."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"$ moon run '#frontend:lint'\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Because ",(0,a.jsx)(n.code,{children:"#"})," is special syntax and denotes a comment, the target will need to be quoted to work\ncorrectly!"]}),"\n"]}),"\n",(0,a.jsxs)(n.h2,{id:"updated-moon-query-commands-to-support-mql",children:["Updated ",(0,a.jsx)(n.code,{children:"moon query"})," commands to support MQL"]}),"\n",(0,a.jsxs)(n.p,{children:["Last week we announced ",(0,a.jsx)(n.a,{href:"./moon-v1.3#run-targets-based-on-a-query",children:"MQL"}),", a custom query language for\napplying filters to moon's project graph, primarily through the ",(0,a.jsx)(n.a,{href:"/docs/commands/run",children:(0,a.jsx)(n.code,{children:"moon run"})}),"\ncommand. We plan to slowly integrate MQL throughout moon as it provides an easy to use API, and an\noverall better developer experience."]}),"\n",(0,a.jsxs)(n.p,{children:["As such, we've updated both ",(0,a.jsx)(n.a,{href:"/docs/commands/query/projects",children:(0,a.jsx)(n.code,{children:"moon query projects"})})," and\n",(0,a.jsx)(n.a,{href:"/docs/commands/query/tasks",children:(0,a.jsx)(n.code,{children:"moon query tasks"})})," to support MQL statements as an optional first\nargument. Totally makes sense that query commands would support MQL!"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:'# Find all projects with a `lint` or `build` task\n$ moon query projects "task=[lint,build]"\n\n# Find all tasks with an id that starts with "dev"\n$ moon query tasks "task~dev-*"\n'})}),"\n",(0,a.jsxs)(n.h2,{id:"deprecated-nodealiaspackagenames-setting",children:["Deprecated ",(0,a.jsx)(n.code,{children:"node.aliasPackageNames"})," setting"]}),"\n",(0,a.jsxs)(n.p,{children:["moon project's support the ",(0,a.jsx)(n.a,{href:"/docs/concepts/project#aliases",children:"concept of aliasing"}),", where\nlanguage/ecosystem specific names are used alongside moon's. For example, the ",(0,a.jsx)(n.code,{children:"name"})," field from\n",(0,a.jsx)(n.code,{children:"package.json"}),". However, aliasing was off by default for Node.js projects and had to be explicitly\nenabled with the ",(0,a.jsx)(n.code,{children:"node.aliasPackageNames"})," setting."]}),"\n",(0,a.jsxs)(n.p,{children:["In an effort to streamline moon adoption for Node.js codebases, we're deprecating that setting, and\ninstead will now always inherit the ",(0,a.jsx)(n.code,{children:"package.json"})," name as an alias. For example, if you're package\nname was ",(0,a.jsx)(n.code,{children:"@company/utils"}),", you can now run a target like so:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-shell",children:"$ moon run @company/utils:build\n"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"This setting is now a no-op and can be removed from your configuration."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"other-changes",children:"Other changes"}),"\n",(0,a.jsxs)(n.p,{children:["View the ",(0,a.jsx)(n.a,{href:"https://github.com/moonrepo/moon/releases/tag/v1.4.0",children:"official release"})," for a full list of\nchanges."]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Upgraded to proto v0.8."}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},63253:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/v1.4-b1df8286618a63bb7bfdc2a708da9d6b.png"}}]);