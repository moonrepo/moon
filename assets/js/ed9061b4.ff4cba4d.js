"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[86114],{5640:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/v1.41-b0e529ff24c4e6dd44f353e5d7291ebf.png"},7468:e=>{e.exports=JSON.parse('{"permalink":"/blog/moon-v1.41","editUrl":"https://github.com/moonrepo/moon/tree/master/website/blog/2025-09-28_moon-v1.41.mdx","source":"@site/blog/2025-09-28_moon-v1.41.mdx","title":"moon v1.41 - Deno WASM toolchain and task input/output improvements","description":"With this release, we\'re introducing the final piece of the JavaScript ecosystem puzzle, Deno!","date":"2025-09-28T00:00:00.000Z","tags":[{"inline":true,"label":"toolchain","permalink":"/blog/tags/toolchain"},{"inline":true,"label":"wasm","permalink":"/blog/tags/wasm"},{"inline":true,"label":"javascript","permalink":"/blog/tags/javascript"},{"inline":true,"label":"deno","permalink":"/blog/tags/deno"},{"inline":true,"label":"task","permalink":"/blog/tags/task"},{"inline":true,"label":"input","permalink":"/blog/tags/input"},{"inline":true,"label":"output","permalink":"/blog/tags/output"},{"inline":true,"label":"v2","permalink":"/blog/tags/v-2"}],"readingTime":3.74,"hasTruncateMarker":true,"authors":[{"name":"Miles Johnson","title":"Founder, developer","url":"https://github.com/milesj","imageURL":"/img/authors/miles.jpg","key":"milesj","page":null}],"frontMatter":{"slug":"moon-v1.41","title":"moon v1.41 - Deno WASM toolchain and task input/output improvements","authors":["milesj"],"tags":["toolchain","wasm","javascript","deno","task","input","output","v2"],"image":"./img/moon/v1.41.png"},"unlisted":false,"nextItem":{"title":"proto v0.53 - New exec command and backend configuration","permalink":"/blog/proto-v0.53"}}')},37983:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var i=t(7468),o=t(62540),s=t(43023);const l={slug:"moon-v1.41",title:"moon v1.41 - Deno WASM toolchain and task input/output improvements",authors:["milesj"],tags:["toolchain","wasm","javascript","deno","task","input","output","v2"],image:"./img/moon/v1.41.png"},r=void 0,a={image:t(5640).A,authorsImageUrls:[void 0]},c=[{value:"v2 in development!",id:"v2-in-development",level:2},{value:"New Deno toolchain powered by WASM",id:"new-deno-toolchain-powered-by-wasm",level:2},{value:"New task inputs",id:"new-task-inputs",level:2},{value:"File groups",id:"file-groups",level:3},{value:"External projects",id:"external-projects",level:3},{value:"Improved task outputs",id:"improved-task-outputs",level:2},{value:"Other changes",id:"other-changes",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"With this release, we're introducing the final piece of the JavaScript ecosystem puzzle, Deno!\nAdditionally, we're introducing new task input and output formats."}),"\n",(0,o.jsx)(n.h2,{id:"v2-in-development",children:"v2 in development!"}),"\n",(0,o.jsx)(n.p,{children:"We've been talking about v2 for many years now, and with the near stabilization of toolchain WASM\nplugins, we're ready to pull the trigger! So what does this mean exactly?"}),"\n",(0,o.jsxs)(n.p,{children:["We'd like to land v2 at the start of the new year, and to hit this milestone, we'll be focusing all\nour efforts on this initiative and ",(0,o.jsx)(n.em,{children:"will not"})," be releasing any new features or improvements to the\nv1 line until v2 is released. This does not include bug fixes or security patches, which we will\ncontinue to provide as needed."]}),"\n",(0,o.jsx)(n.p,{children:"So what should you expect in v2?"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Toolchain WASM plugins stabilized, with the old platform system removed."}),"\n",(0,o.jsx)(n.li,{children:"Extension WASM plugins can extend the project graph and tasks."}),"\n",(0,o.jsx)(n.li,{children:"Remote cache powered by Bazel Remote Execution API stabilized."}),"\n",(0,o.jsx)(n.li,{children:"Task inheritance via inline configuration."}),"\n",(0,o.jsx)(n.li,{children:"Task inheritance deep merging/extending (is shallow right now)."}),"\n",(0,o.jsx)(n.li,{children:"Default project when running tasks."}),"\n",(0,o.jsx)(n.li,{children:"Renamed and improved configuration settings."}),"\n",(0,o.jsx)(n.li,{children:"New binary release strategy."}),"\n",(0,o.jsx)(n.li,{children:"Improved CLI commands."}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://github.com/moonrepo/moon/issues/1681",children:"And much more!"})}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"If you have any requests for v2, please leave a comment in the PR linked above! Additionally, if\nyou'd like to help with v2, let us know!"}),"\n",(0,o.jsx)(n.h2,{id:"new-deno-toolchain-powered-by-wasm",children:"New Deno toolchain powered by WASM"}),"\n",(0,o.jsxs)(n.p,{children:["In our ",(0,o.jsx)(n.a,{href:"./moon-v1.40",children:"last release"})," we introduced an array of new JavaScript ecosystem toolchain\nplugins, but there was important plugin missing, Deno! Deno works quite differently than Node.js and\nBun, so we wanted to spend some extra time and effort to get it right."]}),"\n",(0,o.jsx)(n.p,{children:"We're excited to announce Deno support, with full workspaces support and npm compatibility. This\ntoolchain, unlike the previous implementation, only supports Deno >= v2, but also supports the\nfollowing:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Updated ",(0,o.jsx)(n.code,{children:"unstable_javascript.packageManager"})," with ",(0,o.jsx)(n.code,{children:"deno"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["Will parse ",(0,o.jsx)(n.code,{children:"deno.json"})," and ",(0,o.jsx)(n.code,{children:"deno.jsonc"})," manifest files."]}),"\n",(0,o.jsxs)(n.li,{children:["Will parse ",(0,o.jsx)(n.code,{children:"deno.lock"})," lock files."]}),"\n",(0,o.jsxs)(n.li,{children:["Will install dependencies with ",(0,o.jsx)(n.code,{children:"deno install"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title=".moon/toolchain.yml"',children:"unstable_deno:\n  version: '2.5.0'\n\nunstable_javascript:\n  packageManager: 'deno'\n"})}),"\n",(0,o.jsx)(n.h2,{id:"new-task-inputs",children:"New task inputs"}),"\n",(0,o.jsxs)(n.p,{children:["In ",(0,o.jsx)(n.a,{href:"./moon-v1.39",children:"v1.39"})," we introduced new formats for task inputs, a URI string format and an\nobject format, based on this ",(0,o.jsx)(n.a,{href:"https://github.com/moonrepo/moon/issues/1985",children:"RFC"}),". However, we only\nimplemented support for files and globs. In this release, we have added support for more input\ntypes."]}),"\n",(0,o.jsx)(n.h3,{id:"file-groups",children:"File groups"}),"\n",(0,o.jsxs)(n.p,{children:["Similar to the existing file group tokens (",(0,o.jsx)(n.code,{children:"@files"}),", ",(0,o.jsx)(n.code,{children:"@dirs"}),", etc), we are introducing a new\n",(0,o.jsx)(n.a,{href:"/docs/config/project#file-groups",children:"file group input type"}),", with support for ",(0,o.jsx)(n.code,{children:"group://"})," URIs and\n",(0,o.jsx)(n.code,{children:"group"})," objects."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"fileGroups:\n  sources:\n    - 'src/**/*'\n\ntasks:\n  build:\n    # ...\n    inputs:\n      # Using group protocol\n      - 'group://sources?format=dirs'\n      # Using an object\n      - group: 'sources'\n        format: 'dirs'\n"})}),"\n",(0,o.jsx)(n.h3,{id:"external-projects",children:"External projects"}),"\n",(0,o.jsx)(n.p,{children:'This feature has been highly requested, but we were unsure how to best implement it... until now.\nWith the new external project input type, you can now rely on arbitrary files from other projects as\ninputs, instead of requiring no-op or intermediate task relationships. This is perfect for "I want\nany file change in a project dependency to trigger a rebuild" scenarios.'}),"\n",(0,o.jsxs)(n.p,{children:["This input type supports both ",(0,o.jsx)(n.code,{children:"project://"})," URIs and ",(0,o.jsx)(n.code,{children:"project"})," objects. Both of which require a\nproject identifier, or ",(0,o.jsx)(n.code,{children:"^"})," to inherit all project dependencies (similar to targets)."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"tasks:\n  example:\n    inputs:\n      # Using project protocol\n      - 'project://foo'\n      # Using an object\n      - project: 'foo'\n"})}),"\n",(0,o.jsxs)(n.p,{children:["By default this will include all files in the target project, using ",(0,o.jsx)(n.code,{children:"**/*"}),", but this can be\ncustomized with explicit globs, or referencing a file group in the target project."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"tasks:\n  example:\n    inputs:\n      - 'project://foo?filter=src/**/*'\n      - project: 'foo'\n        group: 'sources'\n"})}),"\n",(0,o.jsx)(n.h2,{id:"improved-task-outputs",children:"Improved task outputs"}),"\n",(0,o.jsx)(n.p,{children:"In the spirit of the new task inputs, we have also improved task outputs by applying the same\nformats treatment! All file and glob outputs now support the URI and object formats."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"tasks:\n  example:\n    outputs:\n      # Literal\n      - 'dist/**/*'\n      # Using glob protocol\n      - 'glob://dist/**/*'\n      # Using an object\n      - glob: 'dist/**/*'\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Additionally, file based outputs now support an ",(0,o.jsx)(n.code,{children:"optional"})," parameter, which will avoid throwing an\nerror if the output does not exist after a task has ran. This has also been a much requested\nfeature!"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="moon.yml"',children:"tasks:\n  example:\n    outputs:\n      - 'file://build/artifact?optional'\n      - file: 'build/artifact'\n        optional: true\n"})}),"\n",(0,o.jsx)(n.h2,{id:"other-changes",children:"Other changes"}),"\n",(0,o.jsxs)(n.p,{children:["View the ",(0,o.jsx)(n.a,{href:"https://github.com/moonrepo/moon/releases/tag/v1.41.0",children:"official release"})," for a full list\nof changes."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Added new values to the ",(0,o.jsx)(n.code,{children:"runInCI"})," task option:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"only"})," - Only run the task in CI, and not locally, when affected."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"skip"})," - Skip running in CI but run locally and allow task relationships to be valid."]}),"\n"]}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},43023:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var i=t(63696);const o={},s=i.createContext(o);function l(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);