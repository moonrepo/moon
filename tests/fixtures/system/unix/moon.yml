language: bash

tasks:
  ls:
    command: ls
    args: '-1 .'
    toolchain: system
    inputs:
      - '*.sh'
  echo:
    command: echo
    args: 'hello'
    toolchain: system
    inputs:
      - '*.sh'
  bash:
    command: bash
    args: ./standard.sh
    toolchain: system
    inputs:
      - '*.sh'
  exitNonZero:
    command: bash
    args: ./exitNonZero.sh
    toolchain: system
    inputs:
      - '*.sh'
  exitNonZeroInline:
    command: bash -c 'exit 2'
    toolchain: system
    options:
      shell: false
    inputs:
      - '*.sh'
  exitZero:
    command: bash
    args: ./exitZero.sh
    toolchain: system
    inputs:
      - '*.sh'
  passthroughArgs:
    command: bash
    args: ./args.sh
    toolchain: system
    inputs:
      - '*.sh'
  envVars:
    command: bash
    args: ./envVars.sh
    env:
      MOON_FOO: abc
      MOON_BAR: '123'
      MOON_BAZ: 'true'
    toolchain: system
    inputs:
      - '*.sh'
  envVarsMoon:
    command: bash
    args: ./envVarsMoon.sh
    toolchain: system
    inputs:
      - '*.sh'
  runFromProject:
    command: bash
    args: ./cwd.sh
    toolchain: system
    inputs:
      - '*.sh'
  runFromWorkspace:
    command: bash
    args: ./unix/cwd.sh
    toolchain: system
    options:
      runFromWorkspaceRoot: true
    inputs:
      - '*.sh'
  retryCount:
    command: bash
    args: ./exitNonZero.sh
    toolchain: system
    options:
      retryCount: 3
    inputs:
      - '*.sh'
  outputs:
    command: bash ./outputs.sh
    toolchain: system
    outputs:
      - 'file.txt'
      - 'folder'
    inputs:
      - '*.sh'
  affectedFiles:
    command: bash ./affectedFiles.sh
    toolchain: system
    options:
      affectedFiles: true
      affectedPassInputs: true
  affectedFilesArgs:
    command: bash ./affectedFiles.sh
    toolchain: system
    options:
      affectedFiles: 'args'
  affectedFilesEnvVar:
    command: bash ./affectedFiles.sh
    toolchain: system
    options:
      affectedFiles: 'env'
  multiAmpersand:
    command: 'mkdir foo && mkdir bar'
    toolchain: system
    inputs:
      - '*.sh'
  multiSemicolon:
    command: 'mkdir foo; mkdir bar'
    toolchain: system
    inputs:
      - '*.sh'

  # Shell syntax
  syntaxVar:
    command: 'echo $VAR_NAME "in $VAR_NAME quotes" prefixed-$VAR_NAME $VAR_NAME-suffixed'
    toolchain: system
    env:
      VAR_NAME: substituted-value
    inputs:
      - '*.sh'
  syntaxExpansion:
    command: 'echo ${VAR_NAME:2:2}'
    toolchain: system
    env:
      VAR_NAME: abcdef
    inputs:
      - '*.sh'
  syntaxSubstitution:
    command: 'echo $(echo sub)'
    toolchain: system
    inputs:
      - '*.sh'
  syntaxSubstitutionTick:
    command: 'echo `echo sub`'
    toolchain: system
    inputs:
      - '*.sh'

  # Misc
  foo:
    command: bash -c "echo 'foo'"
    toolchain: system
    options:
      shell: false
    inputs:
      - '*.sh'
  bar:
    command: sh -c "echo 'bar'"
    toolchain: system
    options:
      shell: false
    inputs:
      - '*.sh'
  baz:
    command: /bin/bash -c "echo 'baz'"
    toolchain: system
    options:
      shell: false
    inputs:
      - '*.sh'
